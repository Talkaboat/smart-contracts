{
	"id": "b2b18467f3b00c3cc33efd039928fe37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/libraries/PriceTicker.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport \"../interfaces/IAboatToken.sol\";\nimport \"./TimeLock.sol\";\n\nabstract contract PriceTicker is Ownable, TimeLock {\n    using SafeMath for uint256;\n    using Address for address;   \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    IAboatToken public coin;\n    address public lpAddress;\n    \n    uint256[] public hourlyPrices;\n    uint256 public hourlyIndex = 0;\n    \n    uint256 public lastPriceUpdateBlock;\n    uint256 public lastAveragePrice = 0;\n    uint256 public previousAveragePrice = 0;\n        \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event ChangedCoin(address indexed previousCoin, address indexed newCoin);\n    event UpdatedAveragePrice(uint256 indexed previousAveragePrice, uint256 indexed newAveragePrice);\n\n    constructor() {\n        for(uint8 i = 0; i < 24; i++) {\n            hourlyPrices.push(0);\n        }\n    }\n    \n        \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    \n    function setCoin(IAboatToken _coin) public onlyOwner locked(\"setCoin\") {\n        require(coin != _coin, \"ABOAT::setCoin: Can't replace the same coin\");\n        require(address(_coin) != address(0), \"ABOAT::setCoin: Can't set coin to zero address\");\n        address previousCoin = address(coin);\n        coin = _coin;\n        lpAddress = coin.liquidityPair();\n        hourlyIndex = 0;\n        lastAveragePrice = 0;\n        previousAveragePrice = 0;\n        emit ChangedCoin(previousCoin, address(coin));\n    }\n        \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function getAveragePrice() public view returns (uint256) {\n        uint256 averagePrice = 0;\n        uint256 amount = 0;\n        for (uint256 i = 0; i <= hourlyIndex; i++) {\n            if(hourlyPrices[i] > 0) {\n                averagePrice += hourlyPrices[i];\n                amount++;\n            }\n        }\n        \n        return averagePrice.div(amount);\n    }  \n    \n    function getPriceDifference(int256 newPrice, int256 oldPrice) public pure returns (uint256) {\n        int256 percentageDifference = (newPrice - oldPrice) * 100  * 10000 / oldPrice; //mul 10000 for floating accuracy\n        if(percentageDifference < 0) {\n            percentageDifference *= -1;\n        }\n        uint256 absPercentageDifference = uint256(percentageDifference);\n        return absPercentageDifference; \n    }\n    \n    function getCoinAmount(address _pair, address _coinOfInterest, uint256 _amount) public view returns (uint256) {\n        IUniswapV2Pair pair = IUniswapV2Pair(_pair);\n        if(address(pair) == address(0)) {\n            return 0;\n        }\n        bool coin1IsOfInterest = pair.token0() == _coinOfInterest;\n        bool coin2IsOfInterest = pair.token1() == _coinOfInterest;\n        (uint256 res0, uint256 res1,) = pair.getReserves();\n        if((res0 == 0 && res1 == 0) || (!coin1IsOfInterest && !coin2IsOfInterest)) {\n            return 0;\n        }\n        uint256 totalSupply = pair.totalSupply();\n        return _amount.mul(coin1IsOfInterest ? res0 : res1).div(totalSupply);\n    }\n\n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    function getTokenPrice() public returns (uint256) {\n        address coinLpAddress = coin.liquidityPair();\n        if(coinLpAddress != lpAddress) {\n            lpAddress = coinLpAddress;\n            hourlyIndex = 0;\n            lastAveragePrice = 0;\n            previousAveragePrice = 0;\n        }\n        IUniswapV2Pair pair = IUniswapV2Pair(lpAddress);\n        (uint256 res0, uint256 res1,) = pair.getReserves();\n        if(res0 == 0 && res1 == 0) {\n            return 0;\n        }\n        ERC20 tokenB = address(pair.token0()) == address(coin) ? ERC20(pair.token1()) : ERC20(pair.token1());\n        uint256 mainRes = address(pair.token0()) == address(coin) ? res1 : res0;\n        uint256 secondaryRes = mainRes == res0 ? res1: res0;\n        return (mainRes * (10 ** tokenB.decimals())) / secondaryRes;\n    }\n    \n    function updateLastAveragePrice(uint256 updatedPrice) internal {\n        previousAveragePrice = lastAveragePrice;\n        lastAveragePrice = updatedPrice;\n        emit UpdatedAveragePrice(previousAveragePrice, lastAveragePrice);\n    }\n    \n    function checkPriceUpdate() virtual public  {\n        if (lastPriceUpdateBlock < block.timestamp - 1 hours) {\n            uint256 tokenPrice = getTokenPrice();\n            if(tokenPrice > 0) {\n                hourlyPrices[hourlyIndex++] = tokenPrice;\n                lastPriceUpdateBlock = block.timestamp;\n            }\n        }\n\n    }\n}"
			},
			"contracts/libraries/TimeLock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nabstract contract TimeLock is Ownable {\n    using Address for address;   \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    bool public isLockEnabled = false;\n    mapping(string => uint256) public timelock;\n    uint256 private constant _TIMELOCK = 1 days;\n    address private _maintainer;  \n        \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event MaintainerTransferred(address indexed previousMaintainer, address indexed newMaintainer);\n    event UnlockedFunction(string indexed functionName, uint256 indexed unlockedAt);\n    event EnabledLock();\n    \n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    //After unlock we have to wait for _TIMELOCK before we can call the Function\n    //Additionally we have a time window of 24 hours to call the function to prevent pre-unlocked calls\n    modifier locked(string memory _fn) {\n        require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\");\n        _;\n        lockFunction(_fn);\n    }\n        \n    modifier onlyMaintainerOrOwner() {\n        require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\");\n        _;\n    }\n\n    constructor() {\n        _maintainer = msg.sender;\n    }\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function maintainer() public view returns (address) {\n        return _maintainer;\n    }\n        \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {\n        require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\");\n        address previousMaintainer = _maintainer;\n        _maintainer = _newMaintainer;\n        emit MaintainerTransferred(previousMaintainer, _maintainer);\n    }\n    \n    function setTimelockEnabled() public onlyMaintainerOrOwner {\n        isLockEnabled = true;\n        emit EnabledLock();\n    }\n\n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    //unlock timelock\n    function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = block.timestamp + _TIMELOCK;\n        emit UnlockedFunction(_fn, timelock[_fn]);\n     }\n      \n     //lock timelock\n    function lockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = 0;\n    }\n}"
			},
			"contracts/interfaces/IAboatToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\ninterface IAboatToken {\n    function canMintNewCoins(uint256 _amount) external view returns(bool); \n    function liquidityPair() external view returns(address);\n    function mint(address _to, uint256 _amount) external;\n}"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3249:3261  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3095  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3973:3980  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4010  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2128:2141  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2160:2165  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2153:2165  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4254:4258  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4300  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4302:4308  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4278  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4326:4330  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4940:4944  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4972  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4974:4983  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4985:4991  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4965  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5027  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5041  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5107  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5195:5201  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5236:5242  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5233  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5242  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5194  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5271:5275  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5824  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5804:5811  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5850:5860  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5789  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2341:2354  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2373:2380  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2366:2380  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6469:6473  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6523  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6599  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6705  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6726:6741  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6723  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6741  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6683  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6774  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3744  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3780:3789  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3791:3797  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3765  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10243  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10268  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7623  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7684  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7803  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7803  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7886:7895  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7878:7884  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7897:7903  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7968  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:13"
															},
															"nodeType": "YulIf",
															"src": "88:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:13"
															},
															"nodeType": "YulIf",
															"src": "221:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:13"
															},
															"nodeType": "YulIf",
															"src": "404:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:13"
															},
															"nodeType": "YulIf",
															"src": "566:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:13",
																"statements": []
															},
															"src": "647:133:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:13"
															},
															"nodeType": "YulIf",
															"src": "789:80:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:13",
														"type": ""
													}
												],
												"src": "14:885:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:13"
															},
															"nodeType": "YulIf",
															"src": "1032:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:13"
															},
															"nodeType": "YulIf",
															"src": "1169:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:13"
															},
															"nodeType": "YulIf",
															"src": "1342:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:13",
														"type": ""
													}
												],
												"src": "904:562:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:13"
															},
															"nodeType": "YulIf",
															"src": "1614:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:13"
															},
															"nodeType": "YulIf",
															"src": "1684:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:13",
														"type": ""
													}
												],
												"src": "1471:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;1896:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;1321:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:10416:1;;;-1:-1:-1;1321:10416:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:13;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:13;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:13;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:13:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:13;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1321:10416:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_626": {
									"entryPoint": 1038,
									"id": 626,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_637": {
									"entryPoint": null,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_453": {
									"entryPoint": 1330,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_262": {
									"entryPoint": 600,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_376": {
									"entryPoint": 872,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_337": {
									"entryPoint": 797,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_158": {
									"entryPoint": 454,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_168": {
									"entryPoint": 857,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_310": {
									"entryPoint": 622,
									"id": 310,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_223": {
									"entryPoint": 1025,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:13"
															},
															"nodeType": "YulIf",
															"src": "480:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:13",
														"type": ""
													}
												],
												"src": "383:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:13"
															},
															"nodeType": "YulIf",
															"src": "762:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:13",
														"type": ""
													}
												],
												"src": "648:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:13"
															},
															"nodeType": "YulIf",
															"src": "1078:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:13",
														"type": ""
													}
												],
												"src": "981:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:13",
														"type": ""
													}
												],
												"src": "1240:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:13",
																"statements": []
															},
															"src": "1712:140:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:13"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:13"
															},
															"nodeType": "YulIf",
															"src": "1861:91:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:13",
														"type": ""
													}
												],
												"src": "1432:597:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:13",
														"type": ""
													}
												],
												"src": "2034:399:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:13",
														"type": ""
													}
												],
												"src": "2438:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:13",
														"type": ""
													}
												],
												"src": "2841:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:13"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:13",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:13",
														"type": ""
													}
												],
												"src": "3248:404:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:13",
														"type": ""
													}
												],
												"src": "3657:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:13",
														"type": ""
													}
												],
												"src": "4063:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:13",
														"type": ""
													}
												],
												"src": "4468:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:13",
														"type": ""
													}
												],
												"src": "4874:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:13",
														"type": ""
													}
												],
												"src": "5056:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:13"
															},
															"nodeType": "YulIf",
															"src": "5303:136:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:13",
														"type": ""
													}
												],
												"src": "5245:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:13"
															},
															"nodeType": "YulIf",
															"src": "5618:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:13"
															},
															"nodeType": "YulIf",
															"src": "5688:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:13",
														"type": ""
													}
												],
												"src": "5475:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:13;;1398:22;1380:41;;1368:2;1353:18;4171:166:1;1240:187:13;3162:106:1;3249:12;;3162:106;;;5020:25:13;;;5008:2;4993:18;3162:106:1;4874:177:13;4804:478:1;;;;;;:::i;:::-;;:::i;3011:91::-;;;3093:2;5198:36:13;;5186:2;5171:18;3011:91:1;5056:184:13;5677:212:1;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:1;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:5;4293:7:1;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:5;5030:33:1;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;3450:2:13;5073:79:1;;;3432:21:13;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:13;;;3572:38;3627:19;;5073:79:1;;;;;;;;;5186:57;5195:6;665:10:5;5236:6:1;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;5677:212::-;665:10:5;5765:4:1;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:1;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:5;6469:4:1;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:1;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;4670:2:13;6556:85:1;;;4652:21:13;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:13;;;4792:35;4844:19;;6556:85:1;4468:401:13;6556:85:1;6675:67;665:10:5;6698:7:1;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;665:10:5;3780:9:1;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;4265:2:13;10075:68:1;;;4247:21:13;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:13;;;4387:34;4438:19;;10075:68:1;4063:400:13;10075:68:1;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;2640:2:13;10153:68:1;;;2622:21:13;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:13;;;2762:32;2811:19;;10153:68:1;2438:398:13;10153:68:1;-1:-1:-1;;;;;10232:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5020:25:13;;;10283:32:1;;4993:18:13;10283:32:1;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;3859:2:13;7382:70:1;;;3841:21:13;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:13;;;3981:35;4033:19;;7382:70:1;3657:401:13;7382:70:1;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;2236:2:13;7462:71:1;;;2218:21:13;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:13;;;2358:33;2408:19;;7462:71:1;2034:399:13;7462:71:1;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;3043:2:13;7653:74:1;;;3025:21:13;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:13;;;3165:36;3218:19;;7653:74:1;2841:402:13;7653:74:1;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:1;7878:6;-1:-1:-1;;;;;7869:35:1;;7897:6;7869:35;;;;5020:25:13;;5008:2;4993:18;;4874:177;7869:35:1;;;;;;;;7372:596;7255:713;;;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:13:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:13;1992:15;-1:-1:-1;;1988:29:13;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:13:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:13;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
									".code": [
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 119,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 127,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 131,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IAboatToken.sol": {
				"IAboatToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "canMintNewCoins",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canMintNewCoins(uint256)": "69372b30",
							"liquidityPair()": "808a5457",
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canMintNewCoins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAboatToken.sol\":\"IAboatToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAboatToken.sol\":{\"keccak256\":\"0x1e559a8890099d8d38b729c5a77f27af27f59a4e7451fbd38e2dc086c5470521\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1445c305a422a231906499b743b958e4c65007cec2d46a09de5b608e2e1a45bb\",\"dweb:/ipfs/QmUtJadmjcWHrgvmDqsUsnkjAKuwnSFmffjXx8fDpDWSDH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/PriceTicker.sol": {
				"PriceTicker": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousCoin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newCoin",
									"type": "address"
								}
							],
							"name": "ChangedCoin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousAveragePrice",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "newAveragePrice",
									"type": "uint256"
								}
							],
							"name": "UpdatedAveragePrice",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "checkPriceUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coin",
							"outputs": [
								{
									"internalType": "contract IAboatToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAveragePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pair",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_coinOfInterest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getCoinAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "newPrice",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "oldPrice",
									"type": "int256"
								}
							],
							"name": "getPriceDifference",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hourlyIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "hourlyPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastAveragePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPriceUpdateBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "previousAveragePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IAboatToken",
									"name": "_coin",
									"type": "address"
								}
							],
							"name": "setCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkPriceUpdate()": "437f660e",
							"coin()": "11df9995",
							"getAveragePrice()": "a6be46aa",
							"getCoinAmount(address,address,uint256)": "575b789c",
							"getPriceDifference(int256,int256)": "e6c1e89c",
							"getTokenPrice()": "4b94f50e",
							"hourlyIndex()": "27de1947",
							"hourlyPrices(uint256)": "6e0c9f0a",
							"isLockEnabled()": "a347511a",
							"lastAveragePrice()": "da201248",
							"lastPriceUpdateBlock()": "65a2d701",
							"lockFunction(string)": "9f531156",
							"lpAddress()": "9b4dc8cc",
							"maintainer()": "9850d32b",
							"owner()": "8da5cb5b",
							"previousAveragePrice()": "8ca20689",
							"renounceOwnership()": "715018a6",
							"setCoin(address)": "82e46b75",
							"setMaintainer(address)": "13ea5d29",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousCoin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCoin\",\"type\":\"address\"}],\"name\":\"ChangedCoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousAveragePrice\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAveragePrice\",\"type\":\"uint256\"}],\"name\":\"UpdatedAveragePrice\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkPriceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coin\",\"outputs\":[{\"internalType\":\"contract IAboatToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coinOfInterest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getCoinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"newPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"oldPrice\",\"type\":\"int256\"}],\"name\":\"getPriceDifference\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hourlyIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hourlyPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPriceUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previousAveragePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAboatToken\",\"name\":\"_coin\",\"type\":\"address\"}],\"name\":\"setCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PriceTicker.sol\":\"PriceTicker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/interfaces/IAboatToken.sol\":{\"keccak256\":\"0x1e559a8890099d8d38b729c5a77f27af27f59a4e7451fbd38e2dc086c5470521\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1445c305a422a231906499b743b958e4c65007cec2d46a09de5b608e2e1a45bb\",\"dweb:/ipfs/QmUtJadmjcWHrgvmDqsUsnkjAKuwnSFmffjXx8fDpDWSDH\"]},\"contracts/libraries/PriceTicker.sol\":{\"keccak256\":\"0x7d2a608feeadb2a13e671840a44432c60080ab07309a426141401698a8c17ec2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://63aa017c17b5459df24e5d6c5e0b1d9257c8216e9b91aff9d696eea1541547dc\",\"dweb:/ipfs/QmY5fMDwUQ7HUtdCf8qDkmAnXoCyPGTns6nFbtU3yw5ZMo\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2557,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2561,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2566,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2065,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "coin",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IAboatToken)2041"
							},
							{
								"astId": 2067,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "lpAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2070,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "hourlyPrices",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2073,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "hourlyIndex",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2075,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "lastPriceUpdateBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2078,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "lastAveragePrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2081,
								"contract": "contracts/libraries/PriceTicker.sol:PriceTicker",
								"label": "previousAveragePrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IAboatToken)2041": {
								"encoding": "inplace",
								"label": "contract IAboatToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TimeLock.sol": {
				"TimeLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaintainer(address)": "13ea5d29",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TimeLock.sol\":\"TimeLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2557,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2561,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2566,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1070,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1069
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 728,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 753,
							"src": "81:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1070,
							"src": "123:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 110,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "1339:7:1"
									},
									"id": 111,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:1"
								},
								{
									"baseName": {
										"id": 112,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1348:6:1"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:1"
								},
								{
									"baseName": {
										"id": 114,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 752,
										"src": "1356:14:1"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 109,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								752,
								727,
								1069
							],
							"name": "ERC20",
							"nameLocation": "1330:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1413:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1377:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 117,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1485:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1429:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 124,
										"keyType": {
											"id": 120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 123,
											"keyType": {
												"id": 121,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1467:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1519:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1503:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1553:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1538:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 128,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1579:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1564:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 130,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1564:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1593:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 649,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2143:29:1",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "2160:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "2153:12:1"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2110:8:1"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2128:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2128:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:15:1"
									},
									"scope": 649,
									"src": "2074:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2356:31:1",
										"statements": [
											{
												"expression": {
													"id": 165,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "2373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 164,
												"id": 166,
												"nodeType": "Return",
												"src": "2366:14:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2178:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2294:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2323:8:1"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:2:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2341:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2341:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:15:1"
									},
									"scope": 649,
									"src": "2285:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "3076:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "3086:9:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2393:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3020:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3069:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3069:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:7:1"
									},
									"scope": 649,
									"src": "3011:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3232:36:1",
										"statements": [
											{
												"expression": {
													"id": 185,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "3249:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 186,
												"nodeType": "Return",
												"src": "3242:19:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "3108:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3171:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3223:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:1"
									},
									"scope": 649,
									"src": "3162:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3409:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 197,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3426:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 199,
													"indexExpression": {
														"id": 198,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 196,
												"id": 200,
												"nodeType": "Return",
												"src": "3419:25:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3274:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3335:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:1"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3353:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3345:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3400:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:9:1"
									},
									"scope": 649,
									"src": "3326:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3746:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3766:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3780:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3791:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "3756:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3756:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 212,
												"id": 221,
												"nodeType": "Return",
												"src": "3808:11:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3457:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3663:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3680:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3672:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3699:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3691:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:35:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3740:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:1"
									},
									"scope": 649,
									"src": "3654:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3982:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 234,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3999:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4011:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3999:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 238,
													"indexExpression": {
														"id": 237,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4018:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3999:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "3992:34:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3832:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3893:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3955:8:1"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3911:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3903:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3918:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:32:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3973:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:9:1"
									},
									"scope": 649,
									"src": "3884:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4260:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "4279:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4279:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4293:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4302:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4270:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4270:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 260,
												"nodeType": "Return",
												"src": "4319:11:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4039:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4180:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:1"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4196:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4188:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:33:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4254:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:6:1"
									},
									"scope": 649,
									"src": "4171:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										708
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "4946:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4966:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4974:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4985:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4956:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4956:36:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5011:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5003:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 283,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "5030:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5042:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5030:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 288,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 286,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "5050:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5050:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5030:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "5081:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5101:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5081:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "5073:79:1"
											},
											{
												"id": 306,
												"nodeType": "UncheckedBlock",
												"src": "5162:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 298,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5195:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 299,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "5203:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5203:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 301,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "5217:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 302,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "5236:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5217:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5186:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5186:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 305,
														"nodeType": "ExpressionStatement",
														"src": "5186:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5271:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 308,
												"nodeType": "Return",
												"src": "5264:11:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "4343:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4813:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4922:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4843:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4835:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4867:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4859:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4894:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4886:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:81:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4940:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:6:1"
									},
									"scope": 649,
									"src": "4804:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5771:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 321,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5790:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 324,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "5813:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 327,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 325,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "5825:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5825:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5813:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 329,
																"indexExpression": {
																	"id": 328,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "5839:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5813:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 330,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5850:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5813:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 320,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "5781:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5781:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5781:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5878:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 319,
												"id": 335,
												"nodeType": "Return",
												"src": "5871:11:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5288:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5686:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5712:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5704:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5721:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:37:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5765:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:6:1"
									},
									"scope": 649,
									"src": "5677:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "6475:306:1",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6493:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "6485:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6485:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 349,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "6512:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 350,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6524:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6512:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "6538:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6485:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6564:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "6584:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6564:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6601:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6556:85:1"
											},
											{
												"id": 372,
												"nodeType": "UncheckedBlock",
												"src": "6651:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 364,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "6684:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 366,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "6698:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 367,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "6707:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 368,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "6726:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6707:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 363,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6675:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 371,
														"nodeType": "ExpressionStatement",
														"src": "6675:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 346,
												"id": 374,
												"nodeType": "Return",
												"src": "6763:11:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5895:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6385:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6411:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6403:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6428:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6420:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:42:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:6:1"
									},
									"scope": 649,
									"src": "6376:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7372:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7390:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 388,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7390:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7470:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7470:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7462:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7565:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7573:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7584:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7544:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7610:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "7602:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"baseExpression": {
														"id": 414,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "7626:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 416,
													"indexExpression": {
														"id": 415,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "7636:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7626:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "7661:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 420,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "7678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7661:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7686:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "7653:74:1"
											},
											{
												"id": 433,
												"nodeType": "UncheckedBlock",
												"src": "7737:77:1",
												"statements": [
													{
														"expression": {
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 425,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "7761:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 427,
																"indexExpression": {
																	"id": 426,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7771:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7761:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 428,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7781:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 429,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "7797:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7761:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 432,
														"nodeType": "ExpressionStatement",
														"src": "7761:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 434,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "7823:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 436,
														"indexExpression": {
															"id": 435,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7833:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7823:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "7847:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "7823:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7878:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7886:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7897:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7869:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "7864:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7935:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7943:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "7915:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7915:46:1"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "6787:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7264:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7291:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7283:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7315:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7307:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7342:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7334:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:81:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:1"
									},
									"scope": 649,
									"src": "7255:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "8309:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8327:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8346:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8338:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8338:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8327:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8319:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "8319:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8424:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8416:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8416:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8416:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8437:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8395:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8395:49:1"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "8455:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8471:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "8455:22:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "8487:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8487:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8487:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8487:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8547:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8539:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8539:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8560:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "8530:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "8525:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8606:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8598:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8598:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8598:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8610:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8619:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "8578:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "8578:48:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "7974:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8253:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8284:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8276:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:33:1"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8309:0:1"
									},
									"scope": 649,
									"src": "8244:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "9018:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9036:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9055:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9047:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9047:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9047:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9036:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9059:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "9028:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9127:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9144:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9148:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "9106:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "9106:49:1"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9174:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "9166:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9166:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"baseExpression": {
														"id": 538,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9201:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9191:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "9227:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 544,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "9245:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9227:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9219:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9219:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9219:71:1"
											},
											{
												"id": 557,
												"nodeType": "UncheckedBlock",
												"src": "9300:79:1",
												"statements": [
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "9324:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"id": 550,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9334:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9324:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 552,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "9345:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 553,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9362:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9345:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9324:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "9324:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "9388:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "9404:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9388:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9388:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9435:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9426:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "9421:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9511:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9503:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9503:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "9474:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9474:48:1"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "8639:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8962:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8976:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8968:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8993:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8985:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8967:33:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:1"
									},
									"scope": 649,
									"src": "8953:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "10065:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10083:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10092:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 593,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10092:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10092:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "10075:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "10161:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10180:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10172:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10172:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10172:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10161:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10184:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "10153:68:1"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 611,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "10232:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 614,
															"indexExpression": {
																"id": 612,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10244:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10232:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 615,
														"indexExpression": {
															"id": 613,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10251:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10232:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 616,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "10262:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "10232:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 620,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10292:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "10308:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10283:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10283:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "EmitStatement",
												"src": "10278:37:1"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "9535:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "9979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10010:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10002:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10035:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10027:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:78:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:1"
									},
									"scope": 649,
									"src": "9952:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "11025:2:1",
										"statements": []
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "10328:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10915:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10953:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10945:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10975:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10967:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10995:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10987:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:72:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11025:0:1"
									},
									"scope": 649,
									"src": "10906:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "11733:2:1",
										"statements": []
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "11033:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11624:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11683:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11675:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11703:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:72:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:1"
									},
									"scope": 649,
									"src": "11615:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 650,
							"src": "1321:10416:1",
							"usedErrors": []
						}
					],
					"src": "33:11705:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 727,
							"linearizedBaseContracts": [
								727
							],
							"name": "IERC20",
							"nameLocation": "139:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 727,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 727,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 727,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 727,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 727,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2149:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2173:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2200:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2239:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:2"
									},
									"scope": 727,
									"src": "2118:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 717,
									"name": "Transfer",
									"nameLocation": "2420:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2429:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2451:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:2"
									},
									"src": "2414:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 726,
									"name": "Approval",
									"nameLocation": "2651:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2660:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2683:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:2"
									},
									"src": "2645:78:2"
								}
							],
							"scope": 728,
							"src": "129:2596:2",
							"usedErrors": []
						}
					],
					"src": "33:2693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 728,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "228:6:3"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 752,
							"linearizedBaseContracts": [
								752,
								727
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "339:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:3"
									},
									"scope": 752,
									"src": "300:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "462:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:3"
									},
									"scope": 752,
									"src": "421:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "596:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 748,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:3"
									},
									"scope": 752,
									"src": "553:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 753,
							"src": "200:405:3",
							"usedErrors": []
						}
					],
					"src": "33:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 755,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "Address",
							"nameLocation": "134:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "784:311:4",
										"statements": [
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:4",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:4",
														"valueSize": 1
													}
												],
												"id": 766,
												"nodeType": "InlineAssembly",
												"src": "1003:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "1080:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 770,
												"nodeType": "Return",
												"src": "1073:15:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 1048,
									"src": "718:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2083:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 783,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 781,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2126:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:4"
											},
											{
												"assignments": [
													792,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "2178:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 799,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 793,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2196:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 795,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2218:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2247:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2031:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2058:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:4"
									},
									"scope": 1048,
									"src": "2012:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "3155:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3185:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 816,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															823,
															843
														],
														"referencedDeclaration": 843,
														"src": "3172:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 815,
												"id": 821,
												"nodeType": "Return",
												"src": "3165:67:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3088:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3104:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3141:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:4"
									},
									"scope": 1048,
									"src": "3066:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "3608:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3647:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "3655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 839,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3664:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 835,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "3625:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 834,
												"id": 841,
												"nodeType": "Return",
												"src": "3618:59:4"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3492:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3516:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3543:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3594:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:4"
									},
									"scope": 1048,
									"src": "3461:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "4189:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "4228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4236:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4242:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 855,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "4206:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 861,
												"nodeType": "Return",
												"src": "4199:94:4"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4110:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4175:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:4"
									},
									"scope": 1048,
									"src": "4046:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "4727:321:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 880,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 878,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4770:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "4847:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 889,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4836:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:4"
											},
											{
												"assignments": [
													896,
													898
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4900:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 895,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4914:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 897,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4967:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 899,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "4941:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 901,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4960:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5007:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 908,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "5016:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 909,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5028:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 906,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4989:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 911,
												"nodeType": "Return",
												"src": "4982:59:4"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4588:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4639:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4662:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:4"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4713:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:4"
									},
									"scope": 1048,
									"src": "4548:500:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "5325:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "5361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5369:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 923,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															965
														],
														"referencedDeclaration": 965,
														"src": "5342:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 922,
												"id": 928,
												"nodeType": "Return",
												"src": "5335:80:4"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5253:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5269:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5311:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:4"
									},
									"scope": 1048,
									"src": "5225:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "5764:229:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 944,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "5793:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 943,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "5782:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:4"
											},
											{
												"assignments": [
													950,
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5853:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 949,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5867:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "5912:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 953,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5952:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 960,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "5961:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 961,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5973:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 958,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "5934:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 941,
												"id": 963,
												"nodeType": "Return",
												"src": "5927:59:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5643:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5667:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5694:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5750:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:4"
									},
									"scope": 1048,
									"src": "5606:387:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "6269:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "6307:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "6315:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 975,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															982,
															1017
														],
														"referencedDeclaration": 1017,
														"src": "6286:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 974,
												"id": 980,
												"nodeType": "Return",
												"src": "6279:84:4"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6202:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6218:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6255:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:4"
									},
									"scope": 1048,
									"src": "6172:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "6711:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 996,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "6740:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 995,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "6729:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:4"
											},
											{
												"assignments": [
													1002,
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6802:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6816:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1003,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "6863:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1005,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6843:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "6903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1012,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6912:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1013,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6924:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1010,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "6885:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 993,
												"id": 1015,
												"nodeType": "Return",
												"src": "6878:59:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6595:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6646:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6697:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:4"
									},
									"scope": 1048,
									"src": "6556:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "7110:532:4",
										"statements": [
											{
												"condition": {
													"id": 1028,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "7124:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "7181:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1032,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "7265:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1042,
																"nodeType": "Block",
																"src": "7573:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "7598:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1038,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1041,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:4"
																	}
																]
															},
															"id": 1043,
															"nodeType": "IfStatement",
															"src": "7261:365:4",
															"trueBody": {
																"id": 1037,
																"nodeType": "Block",
																"src": "7288:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1036,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "7120:516:4",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7133:42:4",
													"statements": [
														{
															"expression": {
																"id": 1029,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "7154:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1030,
															"nodeType": "Return",
															"src": "7147:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6986:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7008:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7041:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7096:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:4"
									},
									"scope": 1048,
									"src": "6950:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1049,
							"src": "126:7518:4",
							"usedErrors": []
						}
					],
					"src": "33:7612:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1069
						]
					},
					"id": 1070,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1069,
							"linearizedBaseContracts": [
								1069
							],
							"name": "Context",
							"nameLocation": "572:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "648:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1055,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1057,
												"nodeType": "Return",
												"src": "658:17:5"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"scope": 1069,
									"src": "586:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "755:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1064,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1066,
												"nodeType": "Return",
												"src": "765:15:5"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:5"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "739:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:5"
									},
									"scope": 1069,
									"src": "688:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1070,
							"src": "554:235:5",
							"usedErrors": []
						}
					],
					"src": "33:757:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1071,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1072,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "SafeMath",
							"nameLocation": "406:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "633:140:6",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "643:124:6",
												"statements": [
													{
														"assignments": [
															1085
														],
														"declarations": [
															{
																"constant": false,
																"id": 1085,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "667:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1089,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "702:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1091,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "706:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "698:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1083,
															"id": 1096,
															"nodeType": "Return",
															"src": "709:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1099,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "754:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1083,
														"id": 1101,
														"nodeType": "Return",
														"src": "740:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "573:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "618:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:6"
									},
									"scope": 1381,
									"src": "557:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "995:113:6",
										"statements": [
											{
												"id": 1130,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "1033:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "1037:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "1029:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1115,
															"id": 1122,
															"nodeType": "Return",
															"src": "1040:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1085:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "1089:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1115,
														"id": 1129,
														"nodeType": "Return",
														"src": "1071:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "946:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "980:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "986:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:6"
									},
									"scope": 1381,
									"src": "919:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1332:417:6",
										"statements": [
											{
												"id": 1172,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1600:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "1596:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1150,
															"nodeType": "Return",
															"src": "1608:16:6"
														}
													},
													{
														"assignments": [
															1153
														],
														"declarations": [
															{
																"constant": false,
																"id": 1153,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1172,
																"src": "1638:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1157,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1650:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1654:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1158,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1673:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1159,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "1677:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1682:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "1669:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1166,
															"nodeType": "Return",
															"src": "1685:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1730:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1170,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1143,
														"id": 1171,
														"nodeType": "Return",
														"src": "1716:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1272:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1283:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1317:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1323:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:6"
									},
									"scope": 1381,
									"src": "1256:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1974:114:6",
										"statements": [
											{
												"id": 1200,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "2012:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1193,
														"nodeType": "IfStatement",
														"src": "2008:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1185,
															"id": 1192,
															"nodeType": "Return",
															"src": "2020:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1195,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2065:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1196,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "2069:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1198,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1185,
														"id": 1199,
														"nodeType": "Return",
														"src": "2051:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1914:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1925:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1959:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1965:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:6"
									},
									"scope": 1381,
									"src": "1898:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "2323:114:6",
										"statements": [
											{
												"id": 1228,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2361:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1221,
														"nodeType": "IfStatement",
														"src": "2357:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1220,
															"nodeType": "Return",
															"src": "2369:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1223,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "2414:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1224,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "2418:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1226,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1213,
														"id": 1227,
														"nodeType": "Return",
														"src": "2400:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2263:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2274:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2308:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2314:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:6"
									},
									"scope": 1381,
									"src": "2247:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2739:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "2756:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2760:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1243,
												"nodeType": "Return",
												"src": "2749:12:6"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2685:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2696:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:6"
									},
									"scope": 1381,
									"src": "2672:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3106:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "3127:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1254,
												"id": 1258,
												"nodeType": "Return",
												"src": "3116:12:6"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3052:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:6"
									},
									"scope": 1381,
									"src": "3039:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "3449:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "3466:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3470:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1273,
												"nodeType": "Return",
												"src": "3459:12:6"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:6"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:6"
									},
									"scope": 1381,
									"src": "3382:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3834:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3851:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3855:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "3844:12:6"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3780:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3825:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:6"
									},
									"scope": 1381,
									"src": "3767:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4383:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4400:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4404:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1303,
												"nodeType": "Return",
												"src": "4393:12:6"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4329:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4340:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4374:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:6"
									},
									"scope": 1381,
									"src": "4316:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5001:106:6",
										"statements": [
											{
												"id": 1328,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "5043:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1319,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "5048:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1321,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "5051:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1317,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5085:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5089:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1327,
														"nodeType": "Return",
														"src": "5078:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4898:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4917:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4936:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4992:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:6"
									},
									"scope": 1381,
									"src": "4876:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "5716:105:6",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "5758:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1346,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "5765:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1342,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5803:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1341,
														"id": 1352,
														"nodeType": "Return",
														"src": "5792:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5613:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5632:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5707:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:6"
									},
									"scope": 1381,
									"src": "5591:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "6592:105:6",
										"statements": [
											{
												"id": 1378,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1368,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "6634:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1371,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "6641:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1367,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1373,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "6675:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1375,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "6679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1366,
														"id": 1377,
														"nodeType": "Return",
														"src": "6668:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6508:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6527:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6583:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:6"
									},
									"scope": 1381,
									"src": "6467:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "398:6301:6",
							"usedErrors": []
						}
					],
					"src": "33:6667:6"
				},
				"id": 6
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1623
						]
					},
					"id": 1624,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1623,
							"linearizedBaseContracts": [
								1623
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "36:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1391,
									"name": "Approval",
									"nameLocation": "63:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "88:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "72:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "111:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "95:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "125:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "120:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:7"
									},
									"src": "57:75:7"
								},
								{
									"anonymous": false,
									"id": 1399,
									"name": "Transfer",
									"nameLocation": "143:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "168:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "152:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "190:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "174:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "199:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "194:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:7"
									},
									"src": "137:69:7"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "221:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:7"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "251:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:7"
									},
									"scope": 1623,
									"src": "212:54:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "280:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:7"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "312:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:7"
									},
									"scope": 1623,
									"src": "271:56:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "341:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:7"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "375:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1411,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:7"
									},
									"scope": 1623,
									"src": "332:50:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "396:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:7"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "433:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:7"
									},
									"scope": 1623,
									"src": "387:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "453:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "471:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "463:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "501:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:7"
									},
									"scope": 1623,
									"src": "444:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "521:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "539:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "531:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "554:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "546:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:7"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "586:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:7"
									},
									"scope": 1623,
									"src": "512:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "607:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "623:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "615:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "637:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "632:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:7"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "662:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:7"
									},
									"scope": 1623,
									"src": "598:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "682:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "699:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "691:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "703:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "733:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:7"
									},
									"scope": 1623,
									"src": "673:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "753:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "774:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "766:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "788:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "780:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "797:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "792:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:7"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "822:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:7"
									},
									"scope": 1623,
									"src": "744:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:7"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "885:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:7"
									},
									"scope": 1623,
									"src": "834:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "908:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:7"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "949:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:7"
									},
									"scope": 1623,
									"src": "899:59:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "972:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "987:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "979:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:7"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1017:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:7"
									},
									"scope": 1623,
									"src": "963:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1038:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1053:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1045:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1068:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1060:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1082:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1077:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1094:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1089:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1110:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1104:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1490,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1121:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1113:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1132:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1124:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:7"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:7"
									},
									"scope": 1623,
									"src": "1029:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1506,
									"name": "Mint",
									"nameLocation": "1156:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1177:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1161:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1190:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1185:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1204:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1199:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:52:7"
									},
									"src": "1150:63:7"
								},
								{
									"anonymous": false,
									"id": 1516,
									"name": "Burn",
									"nameLocation": "1224:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1229:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1258:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1253:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1272:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1267:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1297:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1281:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:72:7"
									},
									"src": "1218:83:7"
								},
								{
									"anonymous": false,
									"id": 1530,
									"name": "Swap",
									"nameLocation": "1312:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1342:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1326:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1363:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1358:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1387:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1382:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1411:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1406:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1436:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1431:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1472:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1456:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:164:7"
									},
									"src": "1306:175:7"
								},
								{
									"anonymous": false,
									"id": 1536,
									"name": "Sync",
									"nameLocation": "1492:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1505:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1497:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1531,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1523:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1515:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1533,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:36:7"
									},
									"src": "1486:47:7"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1548:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:7"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1591:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:7"
									},
									"scope": 1623,
									"src": "1539:58:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1611:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:7"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1644:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:7"
									},
									"scope": 1623,
									"src": "1602:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1667:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:7"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1699:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:7"
									},
									"scope": 1623,
									"src": "1658:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1722:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:7"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1754:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:9:7"
									},
									"scope": 1623,
									"src": "1713:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1777:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1822:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1814:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1558,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1840:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1832:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1560,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1857:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1850:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1562,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:63:7"
									},
									"scope": 1623,
									"src": "1768:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1891:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:7"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1937:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:7"
									},
									"scope": 1623,
									"src": "1882:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1957:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2003:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:6:7"
									},
									"scope": 1623,
									"src": "1948:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2023:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2054:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2054:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:6:7"
									},
									"scope": 1623,
									"src": "2014:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2075:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2088:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2080:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:12:7"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2115:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "2110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:7"
									},
									"scope": 1623,
									"src": "2066:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2140:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2153:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2145:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:12:7"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2180:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2175:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2194:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2189:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:28:7"
									},
									"scope": 1623,
									"src": "2131:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2217:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2227:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2222:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2244:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2239:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2264:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2256:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2283:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2268:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2268:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:67:7"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:7"
									},
									"scope": 1623,
									"src": "2208:90:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2312:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2325:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2317:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:12:7"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:7"
									},
									"scope": 1623,
									"src": "2303:35:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2352:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:7"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:7"
									},
									"scope": 1623,
									"src": "2343:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2383:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2394:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2403:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:18:7"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:7"
									},
									"scope": 1623,
									"src": "2374:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1624,
							"src": "26:2397:7",
							"usedErrors": []
						}
					],
					"src": "0:2424:7"
				},
				"id": 7
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1931
						]
					},
					"id": 1932,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1625,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1931,
							"linearizedBaseContracts": [
								1931
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:8"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "103:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:8"
									},
									"scope": 1931,
									"src": "61:51:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:8"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "156:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:8"
									},
									"scope": 1931,
									"src": "117:48:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "202:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "226:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "250:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "279:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "308:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "333:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "378:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:8"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "416:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "430:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "444:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:8"
									},
									"scope": 1931,
									"src": "171:289:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "499:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "522:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "555:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "584:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "611:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "631:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "677:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "711:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:8"
									},
									"scope": 1931,
									"src": "465:262:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "766:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "790:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "814:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "838:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "863:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "888:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "908:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:8"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "946:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "960:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:8"
									},
									"scope": 1931,
									"src": "732:242:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1039:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1063:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1092:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1119:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1139:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1177:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1195:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:8"
									},
									"scope": 1931,
									"src": "979:232:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1260:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1284:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1308:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1332:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1357:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1382:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1402:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1425:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1442:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1738,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1451:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1462:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1496:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1510:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:8"
									},
									"scope": 1931,
									"src": "1216:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1599:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1623:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1652:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1679:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1699:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1722:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1739:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1765,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1748:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1759:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:8"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1793:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "1811:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:8"
									},
									"scope": 1931,
									"src": "1529:298:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1898:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1925:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1782,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1783,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1958:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1978:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:8"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2016:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1790,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1791,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:8"
									},
									"scope": 1931,
									"src": "1832:207:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2087:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2111:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2137:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1799,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1800,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2170:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:8"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2228:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1807,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1808,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:8"
									},
									"scope": 1931,
									"src": "2044:207:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2287:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2306:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1814,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1815,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2331:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:8"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2408:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1822,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1823,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:8"
									},
									"scope": 1931,
									"src": "2256:175:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2467:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2483:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2501:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1831,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1832,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2526:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2538:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:8"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "2587:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1839,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1840,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:8"
									},
									"scope": 1931,
									"src": "2436:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2646:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2661:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2680:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1848,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1849,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2705:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2717:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:8"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "2766:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1856,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1857,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:8"
									},
									"scope": 1931,
									"src": "2615:174:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2825:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2841:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1863,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1864,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2866:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2878:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:8"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2943:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1871,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1872,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:8"
									},
									"scope": 1931,
									"src": "2794:172:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "2987:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3001:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:8"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "3054:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:8"
									},
									"scope": 1931,
									"src": "2972:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3095:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3110:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3126:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:8"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3166:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:8"
									},
									"scope": 1931,
									"src": "3073:109:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "3208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "3224:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "3240:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:8"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "3280:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:8"
									},
									"scope": 1931,
									"src": "3187:108:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "3323:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "3338:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1911,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1912,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:8"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "3386:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1915,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1916,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:8"
									},
									"scope": 1931,
									"src": "3300:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "3436:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "3452:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1922,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1923,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:8"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "3500:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1926,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1927,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:8"
									},
									"scope": 1931,
									"src": "3414:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1932,
							"src": "26:3499:8",
							"usedErrors": []
						}
					],
					"src": "0:3526:8"
				},
				"id": 8
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1931
						],
						"IUniswapV2Router02": [
							2019
						]
					},
					"id": 2020,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1933,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2020,
							"sourceUnit": 1932,
							"src": "26:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1935,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1931,
										"src": "94:18:9"
									},
									"id": 1936,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2019,
							"linearizedBaseContracts": [
								2019,
								1931
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "185:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "232:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "261:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "288:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "308:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:9"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "346:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:9"
									},
									"scope": 2019,
									"src": "119:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "443:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "490:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "519:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "546:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "566:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "589:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "606:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1968,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "615:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1970,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "626:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "660:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:9"
									},
									"scope": 2019,
									"src": "367:309:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "777:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "804:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1983,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1984,
													"nodeType": "ArrayTypeName",
													"src": "804:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "837:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "857:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:9"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:9"
									},
									"scope": 2019,
									"src": "682:204:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "960:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "987:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1995,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1996,
													"nodeType": "ArrayTypeName",
													"src": "987:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1020:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1040:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:9"
									},
									"scope": 2019,
									"src": "891:186:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1151:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1174:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1201:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2009,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2010,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1234:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "1254:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:9"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:9"
									},
									"scope": 2019,
									"src": "1082:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2020,
							"src": "62:1223:9",
							"usedErrors": []
						}
					],
					"src": "0:1286:9"
				},
				"id": 9
			},
			"contracts/interfaces/IAboatToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IAboatToken.sol",
					"exportedSymbols": {
						"IAboatToken": [
							2041
						]
					},
					"id": 2042,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2021,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2041,
							"linearizedBaseContracts": [
								2041
							],
							"name": "IAboatToken",
							"nameLocation": "70:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "69372b30",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canMintNewCoins",
									"nameLocation": "97:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "121:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "113:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:17:10"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "152:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "152:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:6:10"
									},
									"scope": 2041,
									"src": "88:70:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "808a5457",
									"id": 2033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityPair",
									"nameLocation": "173:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:10"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "211:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:10"
									},
									"scope": 2041,
									"src": "164:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "234:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "247:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "239:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "260:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "252:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:30:10"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:10"
									},
									"scope": 2041,
									"src": "225:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2042,
							"src": "60:220:10",
							"usedErrors": []
						}
					],
					"src": "36:244:10"
				},
				"id": 10
			},
			"contracts/libraries/PriceTicker.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/PriceTicker.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IAboatToken": [
							2041
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"IUniswapV2Pair": [
							1623
						],
						"IUniswapV2Router01": [
							1931
						],
						"IUniswapV2Router02": [
							2019
						],
						"Ownable": [
							103
						],
						"PriceTicker": [
							2542
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2744
						]
					},
					"id": 2543,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2043,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 650,
							"src": "61:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 728,
							"src": "117:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 1049,
							"src": "174:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 1382,
							"src": "226:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 104,
							"src": "284:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 2049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 2020,
							"src": "337:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"id": 2050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 1624,
							"src": "413:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IAboatToken.sol",
							"file": "../interfaces/IAboatToken.sol",
							"id": 2051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 2042,
							"src": "480:39:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TimeLock.sol",
							"file": "./TimeLock.sol",
							"id": 2052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2543,
							"sourceUnit": 2745,
							"src": "520:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2053,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "579:7:11"
									},
									"id": 2054,
									"nodeType": "InheritanceSpecifier",
									"src": "579:7:11"
								},
								{
									"baseName": {
										"id": 2055,
										"name": "TimeLock",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2744,
										"src": "588:8:11"
									},
									"id": 2056,
									"nodeType": "InheritanceSpecifier",
									"src": "588:8:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2542,
							"linearizedBaseContracts": [
								2542,
								2744,
								103,
								1069
							],
							"name": "PriceTicker",
							"nameLocation": "564:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2059,
									"libraryName": {
										"id": 2057,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1381,
										"src": "609:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "603:27:11",
									"typeName": {
										"id": 2058,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2062,
									"libraryName": {
										"id": 2060,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "641:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "635:26:11",
									"typeName": {
										"id": 2061,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "653:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "11df9995",
									"id": 2065,
									"mutability": "mutable",
									"name": "coin",
									"nameLocation": "1009:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "990:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAboatToken_$2041",
										"typeString": "contract IAboatToken"
									},
									"typeName": {
										"id": 2064,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2063,
											"name": "IAboatToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2041,
											"src": "990:11:11"
										},
										"referencedDeclaration": 2041,
										"src": "990:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAboatToken_$2041",
											"typeString": "contract IAboatToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b4dc8cc",
									"id": 2067,
									"mutability": "mutable",
									"name": "lpAddress",
									"nameLocation": "1034:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1019:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2066,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1019:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e0c9f0a",
									"id": 2070,
									"mutability": "mutable",
									"name": "hourlyPrices",
									"nameLocation": "1071:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1054:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2068,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1054:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2069,
										"nodeType": "ArrayTypeName",
										"src": "1054:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27de1947",
									"id": 2073,
									"mutability": "mutable",
									"name": "hourlyIndex",
									"nameLocation": "1104:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1089:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1089:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1118:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "65a2d701",
									"id": 2075,
									"mutability": "mutable",
									"name": "lastPriceUpdateBlock",
									"nameLocation": "1145:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1130:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da201248",
									"id": 2078,
									"mutability": "mutable",
									"name": "lastAveragePrice",
									"nameLocation": "1186:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1171:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2076,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1205:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ca20689",
									"id": 2081,
									"mutability": "mutable",
									"name": "previousAveragePrice",
									"nameLocation": "1227:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 2542,
									"src": "1212:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2079,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1250:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2087,
									"name": "ChangedCoin",
									"nameLocation": "1585:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousCoin",
												"nameLocation": "1613:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "1597:28:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"indexed": true,
												"mutability": "mutable",
												"name": "newCoin",
												"nameLocation": "1643:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "1627:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:55:11"
									},
									"src": "1579:73:11"
								},
								{
									"anonymous": false,
									"id": 2093,
									"name": "UpdatedAveragePrice",
									"nameLocation": "1663:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAveragePrice",
												"nameLocation": "1699:20:11",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "1683:36:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAveragePrice",
												"nameLocation": "1737:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "1721:31:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:71:11"
									},
									"src": "1657:97:11"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "1774:91:11",
										"statements": [
											{
												"body": {
													"id": 2112,
													"nodeType": "Block",
													"src": "1814:45:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1846:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2106,
																		"name": "hourlyPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "1828:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1828:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2111,
															"nodeType": "ExpressionStatement",
															"src": "1828:20:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2100,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "1801:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3234",
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1805:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24_by_1",
															"typeString": "int_const 24"
														},
														"value": "24"
													},
													"src": "1801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2113,
												"initializationExpression": {
													"assignments": [
														2097
													],
													"declarations": [
														{
															"constant": false,
															"id": 2097,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1794:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2113,
															"src": "1788:7:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2096,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1788:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2099,
													"initialValue": {
														"hexValue": "30",
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1798:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1788:11:11"
												},
												"loopExpression": {
													"expression": {
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1809:3:11",
														"subExpression": {
															"id": 2103,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "1809:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2105,
													"nodeType": "ExpressionStatement",
													"src": "1809:3:11"
												},
												"nodeType": "ForStatement",
												"src": "1784:75:11"
											}
										]
									},
									"id": 2115,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:2:11"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:0:11"
									},
									"scope": 2542,
									"src": "1760:105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "2280:437:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IAboatToken_$2041",
																"typeString": "contract IAboatToken"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2127,
																"name": "coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "2298:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAboatToken_$2041",
																	"typeString": "contract IAboatToken"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2128,
																"name": "_coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "2306:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAboatToken_$2041",
																	"typeString": "contract IAboatToken"
																}
															},
															"src": "2298:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a736574436f696e3a2043616e2774207265706c616365207468652073616d6520636f696e",
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c65a6cb05b6f35de28dfddc61712d64595a6b44fef4325dc2590d82808b0d0a",
																"typeString": "literal_string \"ABOAT::setCoin: Can't replace the same coin\""
															},
															"value": "ABOAT::setCoin: Can't replace the same coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c65a6cb05b6f35de28dfddc61712d64595a6b44fef4325dc2590d82808b0d0a",
																"typeString": "literal_string \"ABOAT::setCoin: Can't replace the same coin\""
															}
														],
														"id": 2126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "2290:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2136,
																		"name": "_coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "2385:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IAboatToken_$2041",
																			"typeString": "contract IAboatToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IAboatToken_$2041",
																			"typeString": "contract IAboatToken"
																		}
																	],
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2377:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2377:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2377:14:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2403:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2395:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2138,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2395:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2395:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2377:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a736574436f696e3a2043616e27742073657420636f696e20746f207a65726f2061646472657373",
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2407:48:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_970981589ac5dcbd09e041146c90e394ada6d8036d247f473e70ee33ab7fb200",
																"typeString": "literal_string \"ABOAT::setCoin: Can't set coin to zero address\""
															},
															"value": "ABOAT::setCoin: Can't set coin to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_970981589ac5dcbd09e041146c90e394ada6d8036d247f473e70ee33ab7fb200",
																"typeString": "literal_string \"ABOAT::setCoin: Can't set coin to zero address\""
															}
														],
														"id": 2133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2369:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "ExpressionStatement",
												"src": "2369:87:11"
											},
											{
												"assignments": [
													2147
												],
												"declarations": [
													{
														"constant": false,
														"id": 2147,
														"mutability": "mutable",
														"name": "previousCoin",
														"nameLocation": "2474:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "2466:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2146,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2466:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"arguments": [
														{
															"id": 2150,
															"name": "coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2497:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAboatToken_$2041",
																"typeString": "contract IAboatToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IAboatToken_$2041",
																"typeString": "contract IAboatToken"
															}
														],
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2489:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2148,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2489:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2466:36:11"
											},
											{
												"expression": {
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2153,
														"name": "coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "2512:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAboatToken_$2041",
															"typeString": "contract IAboatToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2154,
														"name": "_coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "2519:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAboatToken_$2041",
															"typeString": "contract IAboatToken"
														}
													},
													"src": "2512:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAboatToken_$2041",
														"typeString": "contract IAboatToken"
													}
												},
												"id": 2156,
												"nodeType": "ExpressionStatement",
												"src": "2512:12:11"
											},
											{
												"expression": {
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2157,
														"name": "lpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2534:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2158,
																"name": "coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "2546:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAboatToken_$2041",
																	"typeString": "contract IAboatToken"
																}
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "liquidityPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2033,
															"src": "2546:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2546:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "2534:32:11"
											},
											{
												"expression": {
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2163,
														"name": "hourlyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "2576:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2590:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2576:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "2576:15:11"
											},
											{
												"expression": {
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2167,
														"name": "lastAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "2601:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2620:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2601:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "2601:20:11"
											},
											{
												"expression": {
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2171,
														"name": "previousAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "2631:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2631:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "2631:24:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2176,
															"name": "previousCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "2682:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2179,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "2704:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2696:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2177,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2696:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2696:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2175,
														"name": "ChangedCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "2670:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "EmitStatement",
												"src": "2665:45:11"
											}
										]
									},
									"functionSelector": "82e46b75",
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2120,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2252:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2252:9:11"
										},
										{
											"arguments": [
												{
													"hexValue": "736574436f696e",
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2269:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_50cbf6a6979cf7dbabf136c6b8231634ada33e2d8e604b26b132d7d8bc5f5133",
														"typeString": "literal_string \"setCoin\""
													},
													"value": "setCoin"
												}
											],
											"id": 2124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2122,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2619,
												"src": "2262:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2262:17:11"
										}
									],
									"name": "setCoin",
									"nameLocation": "2218:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_coin",
												"nameLocation": "2238:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2226:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAboatToken_$2041",
													"typeString": "contract IAboatToken"
												},
												"typeName": {
													"id": 2117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2116,
														"name": "IAboatToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2041,
														"src": "2226:11:11"
													},
													"referencedDeclaration": 2041,
													"src": "2226:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAboatToken_$2041",
														"typeString": "contract IAboatToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:19:11"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:11"
									},
									"scope": 2542,
									"src": "2209:508:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "3108:309:11",
										"statements": [
											{
												"assignments": [
													2190
												],
												"declarations": [
													{
														"constant": false,
														"id": 2190,
														"mutability": "mutable",
														"name": "averagePrice",
														"nameLocation": "3126:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2230,
														"src": "3118:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3118:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2192,
												"initialValue": {
													"hexValue": "30",
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3141:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3118:24:11"
											},
											{
												"assignments": [
													2194
												],
												"declarations": [
													{
														"constant": false,
														"id": 2194,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3160:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2230,
														"src": "3152:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3152:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2196,
												"initialValue": {
													"hexValue": "30",
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3169:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3152:18:11"
											},
											{
												"body": {
													"id": 2223,
													"nodeType": "Block",
													"src": "3223:138:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2207,
																		"name": "hourlyPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2070,
																		"src": "3240:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2209,
																	"indexExpression": {
																		"id": 2208,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "3253:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3240:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3258:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3240:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2222,
															"nodeType": "IfStatement",
															"src": "3237:114:11",
															"trueBody": {
																"id": 2221,
																"nodeType": "Block",
																"src": "3261:90:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2212,
																				"name": "averagePrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2190,
																				"src": "3279:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2213,
																					"name": "hourlyPrices",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "3295:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2215,
																				"indexExpression": {
																					"id": 2214,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "3308:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3295:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3279:31:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2217,
																		"nodeType": "ExpressionStatement",
																		"src": "3279:31:11"
																	},
																	{
																		"expression": {
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3328:8:11",
																			"subExpression": {
																				"id": 2218,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2194,
																				"src": "3328:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2220,
																		"nodeType": "ExpressionStatement",
																		"src": "3328:8:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2201,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "3200:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2202,
														"name": "hourlyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "3205:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3200:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2224,
												"initializationExpression": {
													"assignments": [
														2198
													],
													"declarations": [
														{
															"constant": false,
															"id": 2198,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3193:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2224,
															"src": "3185:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2197,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3185:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2200,
													"initialValue": {
														"hexValue": "30",
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3197:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3185:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3218:3:11",
														"subExpression": {
															"id": 2204,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "3218:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2206,
													"nodeType": "ExpressionStatement",
													"src": "3218:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3180:181:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "3403:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2225,
															"name": "averagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "3386:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "3386:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3386:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2188,
												"id": 2229,
												"nodeType": "Return",
												"src": "3379:31:11"
											}
										]
									},
									"functionSelector": "a6be46aa",
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAveragePrice",
									"nameLocation": "3060:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3075:2:11"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "3099:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:9:11"
									},
									"scope": 2542,
									"src": "3051:366:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "3521:331:11",
										"statements": [
											{
												"assignments": [
													2241
												],
												"declarations": [
													{
														"constant": false,
														"id": 2241,
														"mutability": "mutable",
														"name": "percentageDifference",
														"nameLocation": "3538:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 2272,
														"src": "3531:27:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2240,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3531:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2252,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2242,
																			"name": "newPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "3562:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2243,
																			"name": "oldPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "3573:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "3562:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3561:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3585:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3561:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3592:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "3561:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2250,
														"name": "oldPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "3600:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3561:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3531:77:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2253,
														"name": "percentageDifference",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "3655:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3678:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3655:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2262,
												"nodeType": "IfStatement",
												"src": "3652:80:11",
												"trueBody": {
													"id": 2261,
													"nodeType": "Block",
													"src": "3681:51:11",
													"statements": [
														{
															"expression": {
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2256,
																	"name": "percentageDifference",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "3695:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "3719:2:11",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3720:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "3695:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2260,
															"nodeType": "ExpressionStatement",
															"src": "3695:26:11"
														}
													]
												}
											},
											{
												"assignments": [
													2264
												],
												"declarations": [
													{
														"constant": false,
														"id": 2264,
														"mutability": "mutable",
														"name": "absPercentageDifference",
														"nameLocation": "3749:23:11",
														"nodeType": "VariableDeclaration",
														"scope": 2272,
														"src": "3741:31:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3741:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2269,
												"initialValue": {
													"arguments": [
														{
															"id": 2267,
															"name": "percentageDifference",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "3783:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3775:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3775:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3775:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3741:63:11"
											},
											{
												"expression": {
													"id": 2270,
													"name": "absPercentageDifference",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2264,
													"src": "3821:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2239,
												"id": 2271,
												"nodeType": "Return",
												"src": "3814:30:11"
											}
										]
									},
									"functionSelector": "e6c1e89c",
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceDifference",
									"nameLocation": "3438:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "3464:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "3457:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2232,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3457:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "oldPrice",
												"nameLocation": "3481:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "3474:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2234,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:34:11"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "3512:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3511:9:11"
									},
									"scope": 2542,
									"src": "3429:423:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "3972:573:11",
										"statements": [
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "3997:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "3982:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 2285,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2284,
																"name": "IUniswapV2Pair",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1623,
																"src": "3982:14:11"
															},
															"referencedDeclaration": 1623,
															"src": "3982:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2290,
												"initialValue": {
													"arguments": [
														{
															"id": 2288,
															"name": "_pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2275,
															"src": "4019:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2287,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "4004:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1623_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4004:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3982:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2293,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "4046:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																	"typeString": "contract IUniswapV2Pair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																	"typeString": "contract IUniswapV2Pair"
																}
															],
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4038:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2291,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4038:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4038:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4063:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4055:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2295,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4055:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4055:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4038:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2303,
												"nodeType": "IfStatement",
												"src": "4035:65:11",
												"trueBody": {
													"id": 2302,
													"nodeType": "Block",
													"src": "4067:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4088:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2283,
															"id": 2301,
															"nodeType": "Return",
															"src": "4081:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2305
												],
												"declarations": [
													{
														"constant": false,
														"id": 2305,
														"mutability": "mutable",
														"name": "coin1IsOfInterest",
														"nameLocation": "4114:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4109:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2304,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4109:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2311,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2306,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "4134:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1551,
															"src": "4134:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4134:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2309,
														"name": "_coinOfInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "4151:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4134:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4109:57:11"
											},
											{
												"assignments": [
													2313
												],
												"declarations": [
													{
														"constant": false,
														"id": 2313,
														"mutability": "mutable",
														"name": "coin2IsOfInterest",
														"nameLocation": "4181:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4176:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2312,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4176:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2319,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2314,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "4201:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1556,
															"src": "4201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4201:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2317,
														"name": "_coinOfInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "4218:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4201:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4176:57:11"
											},
											{
												"assignments": [
													2321,
													2323,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2321,
														"mutability": "mutable",
														"name": "res0",
														"nameLocation": "4252:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4244:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2320,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4244:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2323,
														"mutability": "mutable",
														"name": "res1",
														"nameLocation": "4266:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4258:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4258:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2327,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2324,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "4275:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "4275:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4275:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4243:50:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2328,
																		"name": "res0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "4307:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4315:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2331,
																		"name": "res1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "4320:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4328:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4320:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4307:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2335,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4306:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4335:18:11",
																	"subExpression": {
																		"id": 2336,
																		"name": "coin1IsOfInterest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2305,
																		"src": "4336:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4357:18:11",
																	"subExpression": {
																		"id": 2338,
																		"name": "coin2IsOfInterest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2313,
																		"src": "4358:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4335:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2341,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4334:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4306:70:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2346,
												"nodeType": "IfStatement",
												"src": "4303:108:11",
												"trueBody": {
													"id": 2345,
													"nodeType": "Block",
													"src": "4378:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4399:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2283,
															"id": 2344,
															"nodeType": "Return",
															"src": "4392:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2348
												],
												"declarations": [
													{
														"constant": false,
														"id": 2348,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "4428:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "4420:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4420:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2349,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "4442:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1419,
														"src": "4442:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4420:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2361,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "4526:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"id": 2355,
																		"name": "coin1IsOfInterest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2305,
																		"src": "4489:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2357,
																		"name": "res1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "4516:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "4489:31:11",
																	"trueExpression": {
																		"id": 2356,
																		"name": "res0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "4509:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2353,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "4477:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1275,
																"src": "4477:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4477:44:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "4477:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4477:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2363,
												"nodeType": "Return",
												"src": "4470:68:11"
											}
										]
									},
									"functionSelector": "575b789c",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCoinAmount",
									"nameLocation": "3871:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "_pair",
												"nameLocation": "3893:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "3885:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "_coinOfInterest",
												"nameLocation": "3908:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "3900:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3933:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "3925:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:57:11"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "3963:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:9:11"
									},
									"scope": 2542,
									"src": "3862:683:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "4922:759:11",
										"statements": [
											{
												"assignments": [
													2371
												],
												"declarations": [
													{
														"constant": false,
														"id": 2371,
														"mutability": "mutable",
														"name": "coinLpAddress",
														"nameLocation": "4940:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "4932:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4932:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2372,
															"name": "coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "4956:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAboatToken_$2041",
																"typeString": "contract IAboatToken"
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2033,
														"src": "4956:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4932:44:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2376,
														"name": "coinLpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "4989:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2377,
														"name": "lpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "5006:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4989:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2396,
												"nodeType": "IfStatement",
												"src": "4986:182:11",
												"trueBody": {
													"id": 2395,
													"nodeType": "Block",
													"src": "5017:151:11",
													"statements": [
														{
															"expression": {
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2379,
																	"name": "lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "5031:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2380,
																	"name": "coinLpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "5043:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5031:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2382,
															"nodeType": "ExpressionStatement",
															"src": "5031:25:11"
														},
														{
															"expression": {
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2383,
																	"name": "hourlyIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "5070:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5084:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5070:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2386,
															"nodeType": "ExpressionStatement",
															"src": "5070:15:11"
														},
														{
															"expression": {
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2387,
																	"name": "lastAveragePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "5099:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5099:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2390,
															"nodeType": "ExpressionStatement",
															"src": "5099:20:11"
														},
														{
															"expression": {
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2391,
																	"name": "previousAveragePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "5133:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5156:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5133:24:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2394,
															"nodeType": "ExpressionStatement",
															"src": "5133:24:11"
														}
													]
												}
											},
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "5192:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5177:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
															"typeString": "contract IUniswapV2Pair"
														},
														"typeName": {
															"id": 2398,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2397,
																"name": "IUniswapV2Pair",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1623,
																"src": "5177:14:11"
															},
															"referencedDeclaration": 1623,
															"src": "5177:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2403,
												"initialValue": {
													"arguments": [
														{
															"id": 2401,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "5214:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2400,
														"name": "IUniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "5199:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1623_$",
															"typeString": "type(contract IUniswapV2Pair)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
														"typeString": "contract IUniswapV2Pair"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5177:47:11"
											},
											{
												"assignments": [
													2405,
													2407,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2405,
														"mutability": "mutable",
														"name": "res0",
														"nameLocation": "5243:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5235:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5235:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "res1",
														"nameLocation": "5257:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5249:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5249:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2411,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2408,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "5266:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "5266:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5266:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5234:50:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2412,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "5297:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5305:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5297:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2415,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "5310:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5318:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5310:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5297:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2422,
												"nodeType": "IfStatement",
												"src": "5294:60:11",
												"trueBody": {
													"id": 2421,
													"nodeType": "Block",
													"src": "5321:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5342:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2369,
															"id": 2420,
															"nodeType": "Return",
															"src": "5335:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2425
												],
												"declarations": [
													{
														"constant": false,
														"id": 2425,
														"mutability": "mutable",
														"name": "tokenB",
														"nameLocation": "5369:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5363:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$649",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 2424,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2423,
																"name": "ERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 649,
																"src": "5363:5:11"
															},
															"referencedDeclaration": 649,
															"src": "5363:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$649",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2428,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "5386:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1551,
																		"src": "5386:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5386:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5378:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5378:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5378:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2434,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "5412:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																],
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5404:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5404:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5378:39:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2443,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "5449:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1556,
																	"src": "5449:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5449:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2442,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5443:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$649_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 2446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$649",
															"typeString": "contract ERC20"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5378:85:11",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2438,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "5426:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1556,
																	"src": "5426:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5426:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2437,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5420:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$649_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5420:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$649",
															"typeString": "contract ERC20"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$649",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5363:100:11"
											},
											{
												"assignments": [
													2450
												],
												"declarations": [
													{
														"constant": false,
														"id": 2450,
														"mutability": "mutable",
														"name": "mainRes",
														"nameLocation": "5481:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5473:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5473:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2465,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2453,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "5499:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Pair_$1623",
																				"typeString": "contract IUniswapV2Pair"
																			}
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1551,
																		"src": "5499:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5499:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5491:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2451,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5491:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5491:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2459,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "5525:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAboatToken_$2041",
																		"typeString": "contract IAboatToken"
																	}
																],
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5517:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5517:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5517:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5491:39:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2463,
														"name": "res0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "5540:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5491:53:11",
													"trueExpression": {
														"id": 2462,
														"name": "res1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "5533:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5473:71:11"
											},
											{
												"assignments": [
													2467
												],
												"declarations": [
													{
														"constant": false,
														"id": 2467,
														"mutability": "mutable",
														"name": "secondaryRes",
														"nameLocation": "5562:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2487,
														"src": "5554:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5554:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2474,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2468,
															"name": "mainRes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2450,
															"src": "5577:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2469,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "5588:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5577:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2472,
														"name": "res0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "5601:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5577:28:11",
													"trueExpression": {
														"id": 2471,
														"name": "res1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "5595:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5554:51:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2475,
																	"name": "mainRes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "5623:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5634:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2477,
																						"name": "tokenB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2425,
																						"src": "5640:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$649",
																							"typeString": "contract ERC20"
																						}
																					},
																					"id": 2478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 178,
																					"src": "5640:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																						"typeString": "function () view external returns (uint8)"
																					}
																				},
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5640:17:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "5634:23:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2481,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5633:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5623:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2483,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5622:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2484,
														"name": "secondaryRes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "5662:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5622:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2486,
												"nodeType": "Return",
												"src": "5615:59:11"
											}
										]
									},
									"functionSelector": "4b94f50e",
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "4881:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4894:2:11"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "4913:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4913:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4912:9:11"
									},
									"scope": 2542,
									"src": "4872:809:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "5754:171:11",
										"statements": [
											{
												"expression": {
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2493,
														"name": "previousAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "5764:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2494,
														"name": "lastAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "5787:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5764:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "5764:39:11"
											},
											{
												"expression": {
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2497,
														"name": "lastAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "5813:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2498,
														"name": "updatedPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "5832:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5813:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "5813:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2502,
															"name": "previousAveragePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "5879:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2503,
															"name": "lastAveragePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "5901:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2501,
														"name": "UpdatedAveragePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "5859:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5859:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2505,
												"nodeType": "EmitStatement",
												"src": "5854:64:11"
											}
										]
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLastAveragePrice",
									"nameLocation": "5700:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "updatedPrice",
												"nameLocation": "5731:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5723:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:22:11"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5754:0:11"
									},
									"scope": 2542,
									"src": "5691:234:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "5979:293:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "lastPriceUpdateBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "5993:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2511,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6016:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6016:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6034:7:11",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3600_by_1",
																"typeString": "int_const 3600"
															},
															"value": "1"
														},
														"src": "6016:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5993:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2539,
												"nodeType": "IfStatement",
												"src": "5989:276:11",
												"trueBody": {
													"id": 2538,
													"nodeType": "Block",
													"src": "6043:222:11",
													"statements": [
														{
															"assignments": [
																2517
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2517,
																	"mutability": "mutable",
																	"name": "tokenPrice",
																	"nameLocation": "6065:10:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2538,
																	"src": "6057:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2516,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6057:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2520,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2518,
																	"name": "getTokenPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "6078:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
																		"typeString": "function () returns (uint256)"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6078:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6057:36:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2521,
																	"name": "tokenPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "6110:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6123:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6110:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2537,
															"nodeType": "IfStatement",
															"src": "6107:148:11",
															"trueBody": {
																"id": 2536,
																"nodeType": "Block",
																"src": "6126:129:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2524,
																					"name": "hourlyPrices",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "6144:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2527,
																				"indexExpression": {
																					"id": 2526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "6157:13:11",
																					"subExpression": {
																						"id": 2525,
																						"name": "hourlyIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2073,
																						"src": "6157:11:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6144:27:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2528,
																				"name": "tokenPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "6174:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6144:40:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2530,
																		"nodeType": "ExpressionStatement",
																		"src": "6144:40:11"
																	},
																	{
																		"expression": {
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2531,
																				"name": "lastPriceUpdateBlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2075,
																				"src": "6202:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2532,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "6225:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "6225:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6202:38:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2535,
																		"nodeType": "ExpressionStatement",
																		"src": "6202:38:11"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "437f660e",
									"id": 2541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPriceUpdate",
									"nameLocation": "5944:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5960:2:11"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5979:0:11"
									},
									"scope": 2542,
									"src": "5935:337:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2543,
							"src": "546:5728:11",
							"usedErrors": []
						}
					],
					"src": "37:6237:11"
				},
				"id": 11
			},
			"contracts/libraries/TimeLock.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TimeLock.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2744
						]
					},
					"id": 2745,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2544,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 650,
							"src": "61:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 728,
							"src": "117:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 1049,
							"src": "174:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 1382,
							"src": "226:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2745,
							"sourceUnit": 104,
							"src": "284:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2550,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "368:7:12"
									},
									"id": 2551,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:12"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2744,
							"linearizedBaseContracts": [
								2744,
								103,
								1069
							],
							"name": "TimeLock",
							"nameLocation": "356:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2554,
									"libraryName": {
										"id": 2552,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "388:7:12"
									},
									"nodeType": "UsingForDirective",
									"src": "382:26:12",
									"typeName": {
										"id": 2553,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a347511a",
									"id": 2557,
									"mutability": "mutable",
									"name": "isLockEnabled",
									"nameLocation": "749:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "737:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2555,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "737:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2556,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f98080c0",
									"id": 2561,
									"mutability": "mutable",
									"name": "timelock",
									"nameLocation": "810:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "776:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 2560,
										"keyType": {
											"id": 2558,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "784:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "776:26:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueType": {
											"id": 2559,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2564,
									"mutability": "constant",
									"name": "_TIMELOCK",
									"nameLocation": "849:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "824:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:6:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2566,
									"mutability": "mutable",
									"name": "_maintainer",
									"nameLocation": "889:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2744,
									"src": "873:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2565,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2572,
									"name": "MaintainerTransferred",
									"nameLocation": "1236:21:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousMaintainer",
												"nameLocation": "1274:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1258:34:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMaintainer",
												"nameLocation": "1310:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1294:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:67:12"
									},
									"src": "1230:95:12"
								},
								{
									"anonymous": false,
									"id": 2578,
									"name": "UnlockedFunction",
									"nameLocation": "1336:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"indexed": true,
												"mutability": "mutable",
												"name": "functionName",
												"nameLocation": "1368:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "1353:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2576,
												"indexed": true,
												"mutability": "mutable",
												"name": "unlockedAt",
												"nameLocation": "1398:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "1382:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:57:12"
									},
									"src": "1330:80:12"
								},
								{
									"anonymous": false,
									"id": 2580,
									"name": "EnabledLock",
									"nameLocation": "1421:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:12"
									},
									"src": "1415:20:12"
								},
								{
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "1980:208:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1998:14:12",
																"subExpression": {
																	"id": 2585,
																	"name": "isLockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "1999:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2587,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2561,
																						"src": "2017:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2589,
																					"indexExpression": {
																						"id": 2588,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2582,
																						"src": "2026:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2017:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2034:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2017:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2592,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2561,
																						"src": "2039:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2594,
																					"indexExpression": {
																						"id": 2593,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2582,
																						"src": "2048:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2039:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 2595,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2056:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 2596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2056:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2039:32:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2017:54:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2599,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2561,
																						"src": "2075:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2601,
																					"indexExpression": {
																						"id": 2600,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2582,
																						"src": "2084:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2075:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2602,
																					"name": "_TIMELOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2564,
																					"src": "2091:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2075:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 2604,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2104:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2104:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2075:44:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2017:102:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2016:104:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1998:122:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206973206c6f636b6564",
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2122:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															},
															"value": "Function is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															}
														],
														"id": 2584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1990:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:153:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "1990:153:12"
											},
											{
												"id": 2613,
												"nodeType": "PlaceholderStatement",
												"src": "2153:1:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2615,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "2177:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2614,
														"name": "lockFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "2164:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2617,
												"nodeType": "ExpressionStatement",
												"src": "2164:17:12"
											}
										]
									},
									"id": 2619,
									"name": "locked",
									"nameLocation": "1954:6:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "1975:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "1961:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:19:12"
									},
									"src": "1945:243:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2636,
										"nodeType": "Block",
										"src": "2235:144:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2622,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "2253:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2253:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2624,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2264:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2253:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2627,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "2278:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2628,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2293:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2293:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2278:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2253:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:55:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															},
															"value": "operator: caller is not allowed to call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															}
														],
														"id": 2621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:116:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "ExpressionStatement",
												"src": "2245:116:12"
											},
											{
												"id": 2635,
												"nodeType": "PlaceholderStatement",
												"src": "2371:1:12"
											}
										]
									},
									"id": 2637,
									"name": "onlyMaintainerOrOwner",
									"nameLocation": "2211:21:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:12"
									},
									"src": "2202:177:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "2399:41:12",
										"statements": [
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2640,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "2409:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2641,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2423:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2423:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2409:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "2409:24:12"
											}
										]
									},
									"id": 2646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:2:12"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:0:12"
									},
									"scope": 2744,
									"src": "2385:55:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "2822:35:12",
										"statements": [
											{
												"expression": {
													"id": 2651,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2566,
													"src": "2839:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2650,
												"id": 2652,
												"nodeType": "Return",
												"src": "2832:18:12"
											}
										]
									},
									"functionSelector": "9850d32b",
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maintainer",
									"nameLocation": "2779:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:2:12"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2813:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:12"
									},
									"scope": 2744,
									"src": "2770:87:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "3288:329:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2656,
																	"src": "3306:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2666,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "3324:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3306:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2668,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2656,
																	"src": "3339:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3365:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3357:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2669,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3357:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3357:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3339:28:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3306:61:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e65722063616e277420657175616c2070726576696f7573206d61696e7461696e6572206f72207a65726f2061646472657373",
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:83:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															},
															"value": "ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															}
														],
														"id": 2664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3298:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:155:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "3298:155:12"
											},
											{
												"assignments": [
													2679
												],
												"declarations": [
													{
														"constant": false,
														"id": 2679,
														"mutability": "mutable",
														"name": "previousMaintainer",
														"nameLocation": "3471:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2691,
														"src": "3463:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2678,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3463:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2681,
												"initialValue": {
													"id": 2680,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2566,
													"src": "3492:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:40:12"
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2682,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "3513:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2683,
														"name": "_newMaintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "3527:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3513:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "3513:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2687,
															"name": "previousMaintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "3578:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2688,
															"name": "_maintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "3598:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2686,
														"name": "MaintainerTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "3556:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2690,
												"nodeType": "EmitStatement",
												"src": "3551:59:12"
											}
										]
									},
									"functionSelector": "13ea5d29",
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2658,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2637,
												"src": "3245:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3245:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "6d61696e7461696e6572",
													"id": 2661,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3274:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddb9610f823ee4fc79a9d6f81490c93108f5c8a62aad74abbdf4620bfc3e24cd",
														"typeString": "literal_string \"maintainer\""
													},
													"value": "maintainer"
												}
											],
											"id": 2662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2660,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2619,
												"src": "3267:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3267:20:12"
										}
									],
									"name": "setMaintainer",
									"nameLocation": "3200:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "_newMaintainer",
												"nameLocation": "3222:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "3214:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:24:12"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:12"
									},
									"scope": 2744,
									"src": "3191:426:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "3686:65:12",
										"statements": [
											{
												"expression": {
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2697,
														"name": "isLockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "3696:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3696:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2700,
												"nodeType": "ExpressionStatement",
												"src": "3696:20:12"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2701,
														"name": "EnabledLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2580,
														"src": "3731:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2703,
												"nodeType": "EmitStatement",
												"src": "3726:18:12"
											}
										]
									},
									"functionSelector": "f4762fd6",
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2694,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2637,
												"src": "3664:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3664:21:12"
										}
									],
									"name": "setTimelockEnabled",
									"nameLocation": "3636:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:12"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3686:0:12"
									},
									"scope": 2744,
									"src": "3627:124:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "4172:112:12",
										"statements": [
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2712,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "4182:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2714,
														"indexExpression": {
															"id": 2713,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "4191:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4182:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2715,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4198:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4198:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2717,
															"name": "_TIMELOCK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "4216:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4198:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4182:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "4182:43:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2722,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "4257:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"baseExpression": {
																"id": 2723,
																"name": "timelock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2561,
																"src": "4262:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(string memory => uint256)"
																}
															},
															"id": 2725,
															"indexExpression": {
																"id": 2724,
																"name": "_fn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2707,
																"src": "4271:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4262:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2721,
														"name": "UnlockedFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2578,
														"src": "4240:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2727,
												"nodeType": "EmitStatement",
												"src": "4235:41:12"
											}
										]
									},
									"functionSelector": "a607494a",
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2709,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2637,
												"src": "4150:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4150:21:12"
										}
									],
									"name": "unlockFunction",
									"nameLocation": "4109:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4138:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "4124:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4124:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:19:12"
									},
									"returnParameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4172:0:12"
									},
									"scope": 2744,
									"src": "4100:184:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "4387:34:12",
										"statements": [
											{
												"expression": {
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2736,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "4397:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2738,
														"indexExpression": {
															"id": 2737,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "4406:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4413:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4397:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2741,
												"nodeType": "ExpressionStatement",
												"src": "4397:17:12"
											}
										]
									},
									"functionSelector": "9f531156",
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2733,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2637,
												"src": "4365:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4365:21:12"
										}
									],
									"name": "lockFunction",
									"nameLocation": "4326:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4353:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "4339:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:19:12"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:12"
									},
									"scope": 2744,
									"src": "4317:104:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2745,
							"src": "338:4085:12",
							"usedErrors": []
						}
					],
					"src": "37:4386:12"
				},
				"id": 12
			}
		}
	}
}