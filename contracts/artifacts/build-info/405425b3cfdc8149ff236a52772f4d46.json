{
	"id": "405425b3cfdc8149ff236a52772f4d46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Vesting.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./libraries/TransferHelper.sol\";\n\ncontract Vesting is Ownable {\n    using Address for address;\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    IERC20 public rewardToken; //Aboat Token\n    uint256 public claimOpen = 0;\n    uint256 constant public period = 30; //How many days are between each claim \n    uint256 constant public initialClaimPercentage = 100; //How much can investors claim directly after sale ended | 100 = 10%\n    uint256 constant public percentagePerPeriod = 200; //How much can investors claim per period after the initial claim | 100 = 10%\n    uint256 constant public cliffPeriod = 0; //How many days after initial claim before percentagePerPeriod takes place\n\n    uint256 constant public timeMultiplier = 1 days;\n    \n    bool public requireWhitelist = true;    //flag to determine whether buyers have to be whitelisted or not\n    \n    mapping(address => uint256) public bought;  //tracks who bought how many aboat token\n    mapping(address => uint256) public claimed; //tracks who claimed how much percentage of his tokens\n    mapping(address => uint256) public claimedTokens; //tracks who claimed how many aboat token\n    mapping(address => address) public lastClaimAddress; //In case we have to swap the token contract\n\n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event ClaimOpened(uint256 indexed claimDate);\n    event Claimed(address indexed owner, uint256 indexed amount);\n    event Bought(address indexed buyer, uint256 indexed amount);\n    event ChangeRewardToken(address indexed newToken);\n    event DepositedInVestingPool(address indexed owner, uint256 indexed amount);\n    event AddedToWhitelist(uint256 indexed amount);\n    event AddedToWhitelistFromSaft(uint256 indexed amount);\n    \n    constructor(IERC20 _rewardToken) {\n        rewardToken = _rewardToken;\n    }\n    \n    \n    /* =====================================================================================================================\n                                                        Owner\n    ===================================================================================================================== */\n\n    function openClaim() public onlyOwner {\n        require(claimOpen == 0, \"Claim is already opened\");\n        claimOpen = block.timestamp;\n        emit ClaimOpened(block.timestamp);\n    }\n    \n    \n    //Will only be required if the token security audit displays errors that have to be fixed\n    //which would mean a new contract has to be deployed.\n    //With this function we can ensure that early investors will still be able to get the right coin before release\n    function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {\n        require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\");\n        require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\");\n        rewardToken = _newRewardToken;\n        emit ChangeRewardToken(address(rewardToken));\n    }\n    \n\n    function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {\n        require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\");\n        for(uint index = 0; index < addresses.length; index++) {\n            bought[addresses[index]] = bought[addresses[index]].add(amounts[index]);\n            lastClaimAddress[addresses[index]] = address(rewardToken);\n        }\n        emit AddedToWhitelistFromSaft(addresses.length);\n    }\n    \n    /* =====================================================================================================================\n                                                        General\n    ===================================================================================================================== */\n    \n    function getCurrentPercentage() public view returns (uint256) {\n        uint256 cliffEnded = claimOpen.add(cliffPeriod);\n        uint256 deltaPeriod = cliffEnded;\n        uint256 percentage = claimOpen > 0 && block.timestamp > deltaPeriod\n        ? block.timestamp.sub(deltaPeriod)\n            .div(period * timeMultiplier)\n            .mul(percentagePerPeriod)\n            .add(initialClaimPercentage) \n        : initialClaimPercentage;\n        return percentage > 1000 ? 1000 : percentage;\n    }\n    \n    \n    /* =====================================================================================================================\n                                                        Investors\n    ===================================================================================================================== */\n       \n    //returns the reward token if softcap is reached and owner ended the sale\n    //otherwise it returns the paid paymentToken\n    function claim() public {\n        require(claimOpen != 0, \"ABOAT::claim: Claim is not open yet!\");\n        uint256 currentPercentage = getCurrentPercentage();\n        require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\");\n        if(lastClaimAddress[msg.sender] != address(rewardToken)) {\n            lastClaimAddress[msg.sender] = address(rewardToken);\n            claimed[msg.sender] = 0;\n            claimedTokens[msg.sender] = 0;\n        }\n        require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\");\n\n            uint256 currentlyClaimed = claimed[msg.sender];\n            claimed[msg.sender] = currentPercentage;\n            uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000);\n            claimedTokens[msg.sender] = claimedTokens[msg.sender].add(amount);\n            if(address(rewardToken) != address(0)) {\n                TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount);\n            } else {\n                TransferHelper.safeTransferETH(msg.sender, amount);\n            }\n            emit Claimed(msg.sender, amount);\n       \n    }\n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;578:3270:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
									".code": [
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Vesting.sol": {
				"Vesting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AddedToWhitelist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AddedToWhitelistFromSaft",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "ChangeRewardToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimDate",
									"type": "uint256"
								}
							],
							"name": "ClaimOpened",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedInVestingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bought",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimOpen",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cliffPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialClaimPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaimAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "percentagePerPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requireWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_newRewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "whitelistFromSAFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Vesting.sol\":388:7129  contract Vesting is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Vesting.sol\":910:911  0 */\n  0x00\n    /* \"contracts/Vesting.sol\":883:911  uint256 public claimOpen = 0 */\n  0x02\n  sstore\n    /* \"contracts/Vesting.sol\":1437:1472  bool public requireWhitelist = true */\n  0x03\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/Vesting.sol\":1468:1472  true */\n  0x01\n    /* \"contracts/Vesting.sol\":1437:1472  bool public requireWhitelist = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/Vesting.sol\":2689:2765  constructor(IERC20 _rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Vesting.sol\":2732:2743  rewardToken */\n  0x01\n    /* \"contracts/Vesting.sol\":2732:2758  rewardToken = _rewardToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Vesting.sol\":388:7129  contract Vesting is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:318   */\ntag_3:\n    /* \"#utility.yul\":98:104   */\n  0x00\n    /* \"#utility.yul\":151:153   */\n  0x20\n    /* \"#utility.yul\":139:148   */\n  dup3\n    /* \"#utility.yul\":130:137   */\n  dup5\n    /* \"#utility.yul\":126:149   */\n  sub\n    /* \"#utility.yul\":122:154   */\n  slt\n    /* \"#utility.yul\":119:171   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  dup1\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":119:171   */\ntag_17:\n    /* \"#utility.yul\":193:209   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":238:269   */\n  dup2\n  and\n    /* \"#utility.yul\":228:270   */\n  dup2\n  eq\n    /* \"#utility.yul\":218:288   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":284:285   */\n  0x00\n    /* \"#utility.yul\":281:282   */\n  dup1\n    /* \"#utility.yul\":274:286   */\n  revert\n    /* \"#utility.yul\":218:288   */\ntag_18:\n    /* \"#utility.yul\":307:312   */\n  swap4\n    /* \"#utility.yul\":14:318   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Vesting.sol\":388:7129  contract Vesting is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Vesting.sol\":388:7129  contract Vesting is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c92431b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xef78d4fd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xef78d4fd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf3739e05\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x9c92431b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa5ebf835\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa960c65f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xec18c987\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x5372a58e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x5372a58e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x667022fd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x856734c4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x151bad0a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x293cdbf1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f661946\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b8bcb58\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Vesting.sol\":1125:1174  uint256 constant public percentagePerPeriod = 200 */\n    tag_3:\n      tag_26\n        /* \"contracts/Vesting.sol\":1171:1174  200 */\n      0xc8\n        /* \"contracts/Vesting.sol\":1125:1174  uint256 constant public percentagePerPeriod = 200 */\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":9210:9235   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9198:9200   */\n      0x20\n        /* \"#utility.yul\":9183:9201   */\n      add\n        /* \"contracts/Vesting.sol\":1125:1174  uint256 constant public percentagePerPeriod = 200 */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vesting.sol\":3093:3278  function openClaim() public onlyOwner {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Vesting.sol\":1258:1297  uint256 constant public cliffPeriod = 0 */\n    tag_5:\n      tag_26\n        /* \"contracts/Vesting.sol\":1296:1297  0 */\n      0x00\n        /* \"contracts/Vesting.sol\":1258:1297  uint256 constant public cliffPeriod = 0 */\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":883:911  uint256 public claimOpen = 0 */\n    tag_6:\n      tag_26\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":5888:7127  function claim() public {... */\n    tag_7:\n      tag_30\n      tag_39\n      jump\t// in\n        /* \"contracts/Vesting.sol\":4085:4596  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/Vesting.sol\":1551:1592  mapping(address => uint256) public bought */\n    tag_9:\n      tag_26\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_30\n      tag_50\n      jump\t// in\n        /* \"contracts/Vesting.sol\":1437:1472  bool public requireWhitelist = true */\n    tag_11:\n      sload(0x03)\n      tag_51\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":3995:4009   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3988:4010   */\n      iszero\n        /* \"#utility.yul\":3970:4011   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3958:3960   */\n      0x20\n        /* \"#utility.yul\":3943:3961   */\n      add\n        /* \"contracts/Vesting.sol\":1437:1472  bool public requireWhitelist = true */\n      tag_28\n        /* \"#utility.yul\":3830:4017   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3507:3539   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3489:3540   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3477:3479   */\n      0x20\n        /* \"#utility.yul\":3462:3480   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":3343:3546   */\n      jump\n        /* \"contracts/Vesting.sol\":4925:5422  function getCurrentPercentage() public view returns (uint256) {... */\n    tag_13:\n      tag_26\n      tag_60\n      jump\t// in\n        /* \"contracts/Vesting.sol\":998:1050  uint256 constant public initialClaimPercentage = 100 */\n    tag_14:\n      tag_26\n        /* \"contracts/Vesting.sol\":1047:1050  100 */\n      0x64\n        /* \"contracts/Vesting.sol\":998:1050  uint256 constant public initialClaimPercentage = 100 */\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":1743:1791  mapping(address => uint256) public claimedTokens */\n    tag_15:\n      tag_26\n      tag_66\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_66:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":1640:1682  mapping(address => uint256) public claimed */\n    tag_16:\n      tag_26\n      tag_70\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_70:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":1379:1426  uint256 constant public timeMultiplier = 1 days */\n    tag_17:\n      tag_26\n        /* \"contracts/Vesting.sol\":1420:1426  1 days */\n      0x015180\n        /* \"contracts/Vesting.sol\":1379:1426  uint256 constant public timeMultiplier = 1 days */\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":917:952  uint256 constant public period = 30 */\n    tag_18:\n      tag_26\n        /* \"contracts/Vesting.sol\":950:952  30 */\n      0x1e\n        /* \"contracts/Vesting.sol\":917:952  uint256 constant public period = 30 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_30\n      tag_80\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/Vesting.sol\":1839:1890  mapping(address => address) public lastClaimAddress */\n    tag_20:\n      tag_55\n      tag_83\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_83:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":838:863  IERC20 public rewardToken */\n    tag_21:\n      sload(0x01)\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Vesting.sol\":3561:4074  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n    tag_22:\n      tag_30\n      tag_91\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/Vesting.sol\":3093:3278  function openClaim() public onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/Vesting.sol\":3149:3158  claimOpen */\n      sload(0x02)\n        /* \"contracts/Vesting.sol\":3149:3163  claimOpen == 0 */\n      iszero\n        /* \"contracts/Vesting.sol\":3141:3191  require(claimOpen == 0, \"Claim is already opened\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7570:7572   */\n      0x20\n        /* \"contracts/Vesting.sol\":3141:3191  require(claimOpen == 0, \"Claim is already opened\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7552:7573   */\n      mstore\n        /* \"#utility.yul\":7609:7611   */\n      0x17\n        /* \"#utility.yul\":7589:7607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7582:7612   */\n      mstore\n        /* \"#utility.yul\":7648:7673   */\n      0x436c61696d20697320616c7265616479206f70656e6564000000000000000000\n        /* \"#utility.yul\":7628:7646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7621:7674   */\n      mstore\n        /* \"#utility.yul\":7691:7709   */\n      0x64\n      add\n        /* \"contracts/Vesting.sol\":3141:3191  require(claimOpen == 0, \"Claim is already opened\") */\n      tag_99\n        /* \"#utility.yul\":7368:7715   */\n      jump\n        /* \"contracts/Vesting.sol\":3141:3191  require(claimOpen == 0, \"Claim is already opened\") */\n    tag_102:\n        /* \"contracts/Vesting.sol\":3213:3228  block.timestamp */\n      timestamp\n        /* \"contracts/Vesting.sol\":3201:3210  claimOpen */\n      0x02\n        /* \"contracts/Vesting.sol\":3201:3228  claimOpen = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Vesting.sol\":3243:3271  ClaimOpened(block.timestamp) */\n      mload(0x40)\n      0x7d425ef8bc8f854f0bddfa263a1a52ae42adbddd9c9c95ad3f21b1e2d311c4ca\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Vesting.sol\":3093:3278  function openClaim() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Vesting.sol\":5888:7127  function claim() public {... */\n    tag_39:\n        /* \"contracts/Vesting.sol\":5930:5939  claimOpen */\n      sload(0x02)\n        /* \"contracts/Vesting.sol\":5922:5985  require(claimOpen != 0, \"ABOAT::claim: Claim is not open yet!\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4853:4855   */\n      0x20\n        /* \"contracts/Vesting.sol\":5922:5985  require(claimOpen != 0, \"ABOAT::claim: Claim is not open yet!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4835:4856   */\n      mstore\n        /* \"#utility.yul\":4892:4894   */\n      0x24\n        /* \"#utility.yul\":4872:4890   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4865:4895   */\n      mstore\n        /* \"#utility.yul\":4931:4965   */\n      0x41424f41543a3a636c61696d3a20436c61696d206973206e6f74206f70656e20\n        /* \"#utility.yul\":4911:4929   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4904:4966   */\n      mstore\n      shl(0xe0, 0x79657421)\n        /* \"#utility.yul\":4982:5000   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4975:5009   */\n      mstore\n        /* \"#utility.yul\":5026:5045   */\n      0x84\n      add\n        /* \"contracts/Vesting.sol\":5922:5985  require(claimOpen != 0, \"ABOAT::claim: Claim is not open yet!\") */\n      tag_99\n        /* \"#utility.yul\":4651:5051   */\n      jump\n        /* \"contracts/Vesting.sol\":5922:5985  require(claimOpen != 0, \"ABOAT::claim: Claim is not open yet!\") */\n    tag_106:\n        /* \"contracts/Vesting.sol\":5995:6020  uint256 currentPercentage */\n      0x00\n        /* \"contracts/Vesting.sol\":6023:6045  getCurrentPercentage() */\n      tag_109\n        /* \"contracts/Vesting.sol\":6023:6043  getCurrentPercentage */\n      tag_60\n        /* \"contracts/Vesting.sol\":6023:6045  getCurrentPercentage() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Vesting.sol\":5995:6045  uint256 currentPercentage = getCurrentPercentage() */\n      swap1\n      pop\n        /* \"contracts/Vesting.sol\":6083:6084  0 */\n      0x00\n        /* \"contracts/Vesting.sol\":6063:6080  currentPercentage */\n      dup2\n        /* \"contracts/Vesting.sol\":6063:6084  currentPercentage > 0 */\n      gt\n        /* \"contracts/Vesting.sol\":6055:6182  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7068:7070   */\n      0x20\n        /* \"contracts/Vesting.sol\":6055:6182  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7050:7071   */\n      mstore\n        /* \"#utility.yul\":7107:7109   */\n      0x5d\n        /* \"#utility.yul\":7087:7105   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7080:7110   */\n      mstore\n        /* \"#utility.yul\":7146:7180   */\n      0x41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620\n        /* \"#utility.yul\":7126:7144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7119:7181   */\n      mstore\n        /* \"#utility.yul\":7217:7251   */\n      0x746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79\n        /* \"#utility.yul\":7197:7215   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7190:7252   */\n      mstore\n        /* \"#utility.yul\":7289:7320   */\n      0x207a65726f2e20506c656173652074727920616761696e206c61746572000000\n        /* \"#utility.yul\":7268:7287   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7261:7321   */\n      mstore\n        /* \"#utility.yul\":7338:7357   */\n      0xa4\n      add\n        /* \"contracts/Vesting.sol\":6055:6182  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      tag_99\n        /* \"#utility.yul\":6866:7363   */\n      jump\n        /* \"contracts/Vesting.sol\":6055:6182  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n    tag_110:\n        /* \"contracts/Vesting.sol\":6235:6246  rewardToken */\n      sload(0x01)\n        /* \"contracts/Vesting.sol\":6212:6222  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6235:6246  rewardToken */\n      0x00\n        /* \"contracts/Vesting.sol\":6195:6223  lastClaimAddress[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6195:6211  lastClaimAddress */\n      0x07\n        /* \"contracts/Vesting.sol\":6195:6223  lastClaimAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Vesting.sol\":6235:6246  rewardToken */\n      swap2\n      and\n        /* \"contracts/Vesting.sol\":6195:6247  lastClaimAddress[msg.sender] != address(rewardToken) */\n      eq\n        /* \"contracts/Vesting.sol\":6192:6405  if(lastClaimAddress[msg.sender] != address(rewardToken)) {... */\n      tag_113\n      jumpi\n        /* \"contracts/Vesting.sol\":6302:6313  rewardToken */\n      sload(0x01)\n        /* \"contracts/Vesting.sol\":6280:6290  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6302:6313  rewardToken */\n      0x00\n        /* \"contracts/Vesting.sol\":6263:6291  lastClaimAddress[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6263:6279  lastClaimAddress */\n      0x07\n        /* \"contracts/Vesting.sol\":6263:6291  lastClaimAddress[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Vesting.sol\":6263:6314  lastClaimAddress[msg.sender] = address(rewardToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":6302:6313  rewardToken */\n      swap1\n      swap6\n      and\n        /* \"contracts/Vesting.sol\":6263:6314  lastClaimAddress[msg.sender] = address(rewardToken) */\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Vesting.sol\":6328:6335  claimed */\n      0x05\n        /* \"contracts/Vesting.sol\":6328:6347  claimed[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/Vesting.sol\":6328:6351  claimed[msg.sender] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Vesting.sol\":6365:6378  claimedTokens */\n      0x06\n        /* \"contracts/Vesting.sol\":6365:6390  claimedTokens[msg.sender] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Vesting.sol\":6365:6394  claimedTokens[msg.sender] = 0 */\n      sstore\n        /* \"contracts/Vesting.sol\":6192:6405  if(lastClaimAddress[msg.sender] != address(rewardToken)) {... */\n    tag_113:\n        /* \"contracts/Vesting.sol\":6430:6440  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6422:6441  claimed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6422:6429  claimed */\n      0x05\n        /* \"contracts/Vesting.sol\":6422:6441  claimed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Vesting.sol\":6422:6461  claimed[msg.sender] < currentPercentage */\n      dup2\n      gt\n        /* \"contracts/Vesting.sol\":6414:6526  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5679:5681   */\n      0x20\n        /* \"contracts/Vesting.sol\":6414:6526  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5661:5682   */\n      mstore\n        /* \"#utility.yul\":5718:5720   */\n      0x3c\n        /* \"#utility.yul\":5698:5716   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5691:5721   */\n      mstore\n        /* \"#utility.yul\":5757:5791   */\n      0x41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f\n        /* \"#utility.yul\":5737:5755   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5730:5792   */\n      mstore\n        /* \"#utility.yul\":5828:5858   */\n      0x75722063757272656e746c7920656c696769626c6520746f6b656e7300000000\n        /* \"#utility.yul\":5808:5826   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5801:5859   */\n      mstore\n        /* \"#utility.yul\":5876:5895   */\n      0x84\n      add\n        /* \"contracts/Vesting.sol\":6414:6526  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      tag_99\n        /* \"#utility.yul\":5477:5901   */\n      jump\n        /* \"contracts/Vesting.sol\":6414:6526  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n    tag_114:\n        /* \"contracts/Vesting.sol\":6576:6586  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6541:6565  uint256 currentlyClaimed */\n      0x00\n        /* \"contracts/Vesting.sol\":6568:6587  claimed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6568:6575  claimed */\n      0x05\n        /* \"contracts/Vesting.sol\":6568:6587  claimed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n        /* \"contracts/Vesting.sol\":6601:6640  claimed[msg.sender] = currentPercentage */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Vesting.sol\":6568:6587  claimed[msg.sender] */\n      swap1\n        /* \"contracts/Vesting.sol\":6671:6744  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      tag_117\n        /* \"contracts/Vesting.sol\":6739:6743  1000 */\n      0x03e8\n        /* \"contracts/Vesting.sol\":6671:6734  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)) */\n      tag_118\n        /* \"contracts/Vesting.sol\":6694:6733  currentPercentage.sub(currentlyClaimed) */\n      tag_119\n        /* \"contracts/Vesting.sol\":6623:6640  currentPercentage */\n      dup7\n        /* \"contracts/Vesting.sol\":6568:6587  claimed[msg.sender] */\n      dup7\n        /* \"contracts/Vesting.sol\":6694:6715  currentPercentage.sub */\n      tag_120\n        /* \"contracts/Vesting.sol\":6694:6733  currentPercentage.sub(currentlyClaimed) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Vesting.sol\":6678:6688  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6671:6689  bought[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6671:6677  bought */\n      0x04\n        /* \"contracts/Vesting.sol\":6671:6689  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Vesting.sol\":6671:6693  bought[msg.sender].mul */\n      tag_121\n        /* \"contracts/Vesting.sol\":6671:6734  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Vesting.sol\":6671:6738  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div */\n      swap1\n      tag_122\n        /* \"contracts/Vesting.sol\":6671:6744  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Vesting.sol\":6800:6810  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6786:6811  claimedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6786:6799  claimedTokens */\n      0x06\n        /* \"contracts/Vesting.sol\":6786:6811  claimedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Vesting.sol\":6654:6744  uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Vesting.sol\":6786:6823  claimedTokens[msg.sender].add(amount) */\n      tag_123\n      swap1\n        /* \"contracts/Vesting.sol\":6654:6744  uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      dup3\n        /* \"contracts/Vesting.sol\":6786:6815  claimedTokens[msg.sender].add */\n      tag_124\n        /* \"contracts/Vesting.sol\":6786:6823  claimedTokens[msg.sender].add(amount) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Vesting.sol\":6772:6782  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6758:6783  claimedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":6758:6771  claimedTokens */\n      0x06\n        /* \"contracts/Vesting.sol\":6758:6783  claimedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Vesting.sol\":6758:6823  claimedTokens[msg.sender] = claimedTokens[msg.sender].add(amount) */\n      sstore\n        /* \"contracts/Vesting.sol\":6848:6859  rewardToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Vesting.sol\":6840:6874  address(rewardToken) != address(0) */\n      iszero\n        /* \"contracts/Vesting.sol\":6837:7067  if(address(rewardToken) != address(0)) {... */\n      tag_125\n      jumpi\n        /* \"contracts/Vesting.sol\":6930:6941  rewardToken */\n      sload(0x01)\n        /* \"contracts/Vesting.sol\":6894:6963  TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount) */\n      tag_126\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":6930:6941  rewardToken */\n      and\n        /* \"contracts/Vesting.sol\":6944:6954  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":6956:6962  amount */\n      dup4\n        /* \"contracts/Vesting.sol\":6894:6921  TransferHelper.safeTransfer */\n      tag_127\n        /* \"contracts/Vesting.sol\":6894:6963  TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Vesting.sol\":6837:7067  if(address(rewardToken) != address(0)) {... */\n      jump(tag_129)\n    tag_125:\n        /* \"contracts/Vesting.sol\":7002:7052  TransferHelper.safeTransferETH(msg.sender, amount) */\n      tag_129\n        /* \"contracts/Vesting.sol\":7033:7043  msg.sender */\n      caller\n        /* \"contracts/Vesting.sol\":7045:7051  amount */\n      dup3\n        /* \"contracts/Vesting.sol\":7002:7032  TransferHelper.safeTransferETH */\n      tag_130\n        /* \"contracts/Vesting.sol\":7002:7052  TransferHelper.safeTransferETH(msg.sender, amount) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Vesting.sol\":7085:7112  Claimed(msg.sender, amount) */\n      mload(0x40)\n        /* \"contracts/Vesting.sol\":7105:7111  amount */\n      dup2\n      swap1\n        /* \"contracts/Vesting.sol\":7093:7103  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Vesting.sol\":7085:7112  Claimed(msg.sender, amount) */\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/Vesting.sol\":5912:7127  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Vesting.sol\":5888:7127  function claim() public {... */\n      jump\t// out\n        /* \"contracts/Vesting.sol\":4085:4596  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_134:\n        /* \"contracts/Vesting.sol\":4221:4224  100 */\n      0x64\n        /* \"contracts/Vesting.sol\":4201:4210  addresses */\n      dup3\n        /* \"contracts/Vesting.sol\":4201:4217  addresses.length */\n      mload\n        /* \"contracts/Vesting.sol\":4201:4224  addresses.length <= 100 */\n      gt\n      iszero\n        /* \"contracts/Vesting.sol\":4193:4301  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6108:6110   */\n      0x20\n        /* \"contracts/Vesting.sol\":4193:4301  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6090:6111   */\n      mstore\n        /* \"#utility.yul\":6147:6149   */\n      0x48\n        /* \"#utility.yul\":6127:6145   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6120:6150   */\n      mstore\n        /* \"#utility.yul\":6186:6220   */\n      0x41424f41543a3a77686974656c6973743a20596f752063616e27742061646420\n        /* \"#utility.yul\":6166:6184   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6159:6221   */\n      mstore\n        /* \"#utility.yul\":6257:6291   */\n      0x6d6f7265207468616e2031303020616464726573736573206174207468652073\n        /* \"#utility.yul\":6237:6255   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6230:6292   */\n      mstore\n      shl(0xc0, 0x616d652074696d65)\n        /* \"#utility.yul\":6308:6327   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6301:6340   */\n      mstore\n        /* \"#utility.yul\":6357:6376   */\n      0xa4\n      add\n        /* \"contracts/Vesting.sol\":4193:4301  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n      tag_99\n        /* \"#utility.yul\":5906:6382   */\n      jump\n        /* \"contracts/Vesting.sol\":4193:4301  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n    tag_137:\n        /* \"contracts/Vesting.sol\":4315:4325  uint index */\n      0x00\n        /* \"contracts/Vesting.sol\":4311:4533  for(uint index = 0; index < addresses.length; index++) {... */\n    tag_140:\n        /* \"contracts/Vesting.sol\":4339:4348  addresses */\n      dup3\n        /* \"contracts/Vesting.sol\":4339:4355  addresses.length */\n      mload\n        /* \"contracts/Vesting.sol\":4331:4336  index */\n      dup2\n        /* \"contracts/Vesting.sol\":4331:4355  index < addresses.length */\n      lt\n        /* \"contracts/Vesting.sol\":4311:4533  for(uint index = 0; index < addresses.length; index++) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/Vesting.sol\":4407:4451  bought[addresses[index]].add(amounts[index]) */\n      tag_143\n        /* \"contracts/Vesting.sol\":4436:4443  amounts */\n      dup3\n        /* \"contracts/Vesting.sol\":4444:4449  index */\n      dup3\n        /* \"contracts/Vesting.sol\":4436:4450  amounts[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Vesting.sol\":4407:4413  bought */\n      0x04\n        /* \"contracts/Vesting.sol\":4407:4431  bought[addresses[index]] */\n      0x00\n        /* \"contracts/Vesting.sol\":4414:4423  addresses */\n      dup7\n        /* \"contracts/Vesting.sol\":4424:4429  index */\n      dup6\n        /* \"contracts/Vesting.sol\":4414:4430  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_148\n      tag_146\n      jump\t// in\n    tag_148:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":4407:4431  bought[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Vesting.sol\":4407:4435  bought[addresses[index]].add */\n      tag_124\n      swap1\n        /* \"contracts/Vesting.sol\":4407:4451  bought[addresses[index]].add(amounts[index]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/Vesting.sol\":4380:4386  bought */\n      0x04\n        /* \"contracts/Vesting.sol\":4380:4404  bought[addresses[index]] */\n      0x00\n        /* \"contracts/Vesting.sol\":4387:4396  addresses */\n      dup6\n        /* \"contracts/Vesting.sol\":4397:4402  index */\n      dup5\n        /* \"contracts/Vesting.sol\":4387:4403  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_150\n      jumpi\n      tag_150\n      tag_146\n      jump\t// in\n    tag_150:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":4380:4404  bought[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Vesting.sol\":4380:4451  bought[addresses[index]] = bought[addresses[index]].add(amounts[index]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vesting.sol\":4510:4521  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Vesting.sol\":4465:4481  lastClaimAddress */\n      0x07\n        /* \"contracts/Vesting.sol\":4465:4499  lastClaimAddress[addresses[index]] */\n      0x00\n        /* \"contracts/Vesting.sol\":4482:4491  addresses */\n      dup6\n        /* \"contracts/Vesting.sol\":4492:4497  index */\n      dup5\n        /* \"contracts/Vesting.sol\":4482:4498  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_146\n      jump\t// in\n    tag_152:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":4465:4499  lastClaimAddress[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Vesting.sol\":4465:4522  lastClaimAddress[addresses[index]] = address(rewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vesting.sol\":4357:4364  index++ */\n      dup1\n      dup1\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      swap2\n      pop\n      pop\n        /* \"contracts/Vesting.sol\":4311:4533  for(uint index = 0; index < addresses.length; index++) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"contracts/Vesting.sol\":4572:4588  addresses.length */\n      dup2\n      mload\n        /* \"contracts/Vesting.sol\":4547:4589  AddedToWhitelistFromSaft(addresses.length) */\n      mload(0x40)\n      0x6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Vesting.sol\":4085:4596  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Vesting.sol\":4925:5422  function getCurrentPercentage() public view returns (uint256) {... */\n    tag_60:\n        /* \"contracts/Vesting.sol\":4978:4985  uint256 */\n      0x00\n        /* \"contracts/Vesting.sol\":4997:5015  uint256 cliffEnded */\n      dup1\n        /* \"contracts/Vesting.sol\":5018:5044  claimOpen.add(cliffPeriod) */\n      tag_165\n        /* \"contracts/Vesting.sol\":1296:1297  0 */\n      0x00\n        /* \"contracts/Vesting.sol\":5018:5027  claimOpen */\n      sload(0x02)\n        /* \"contracts/Vesting.sol\":5018:5031  claimOpen.add */\n      tag_124\n      swap1\n        /* \"contracts/Vesting.sol\":5018:5044  claimOpen.add(cliffPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/Vesting.sol\":4997:5044  uint256 cliffEnded = claimOpen.add(cliffPeriod) */\n      swap1\n      pop\n        /* \"contracts/Vesting.sol\":5054:5073  uint256 deltaPeriod */\n      0x00\n        /* \"contracts/Vesting.sol\":5076:5086  cliffEnded */\n      dup2\n        /* \"contracts/Vesting.sol\":5054:5086  uint256 deltaPeriod = cliffEnded */\n      swap1\n      pop\n        /* \"contracts/Vesting.sol\":5096:5114  uint256 percentage */\n      0x00\n        /* \"contracts/Vesting.sol\":5129:5130  0 */\n      dup1\n        /* \"contracts/Vesting.sol\":5117:5126  claimOpen */\n      sload(0x02)\n        /* \"contracts/Vesting.sol\":5117:5130  claimOpen > 0 */\n      gt\n        /* \"contracts/Vesting.sol\":5117:5163  claimOpen > 0 && block.timestamp > deltaPeriod */\n      dup1\n      iszero\n      tag_166\n      jumpi\n      pop\n        /* \"contracts/Vesting.sol\":5152:5163  deltaPeriod */\n      dup2\n        /* \"contracts/Vesting.sol\":5134:5149  block.timestamp */\n      timestamp\n        /* \"contracts/Vesting.sol\":5134:5163  block.timestamp > deltaPeriod */\n      gt\n        /* \"contracts/Vesting.sol\":5117:5163  claimOpen > 0 && block.timestamp > deltaPeriod */\n    tag_166:\n        /* \"contracts/Vesting.sol\":5117:5361  claimOpen > 0 && block.timestamp > deltaPeriod... */\n      tag_167\n      jumpi\n        /* \"contracts/Vesting.sol\":1047:1050  100 */\n      0x64\n        /* \"contracts/Vesting.sol\":5117:5361  claimOpen > 0 && block.timestamp > deltaPeriod... */\n      jump(tag_169)\n    tag_167:\n        /* \"contracts/Vesting.sol\":5174:5327  block.timestamp.sub(deltaPeriod)... */\n      tag_169\n        /* \"contracts/Vesting.sol\":1047:1050  100 */\n      0x64\n        /* \"contracts/Vesting.sol\":5174:5286  block.timestamp.sub(deltaPeriod)... */\n      tag_170\n        /* \"contracts/Vesting.sol\":1171:1174  200 */\n      0xc8\n        /* \"contracts/Vesting.sol\":5174:5248  block.timestamp.sub(deltaPeriod)... */\n      tag_171\n        /* \"contracts/Vesting.sol\":5224:5247  period * timeMultiplier */\n      tag_172\n        /* \"contracts/Vesting.sol\":1420:1426  1 days */\n      0x015180\n        /* \"contracts/Vesting.sol\":950:952  30 */\n      0x1e\n        /* \"contracts/Vesting.sol\":5224:5247  period * timeMultiplier */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/Vesting.sol\":5174:5206  block.timestamp.sub(deltaPeriod) */\n      tag_118\n        /* \"contracts/Vesting.sol\":5174:5189  block.timestamp */\n      timestamp\n        /* \"contracts/Vesting.sol\":5194:5205  deltaPeriod */\n      dup10\n        /* \"contracts/Vesting.sol\":5174:5193  block.timestamp.sub */\n      tag_120\n        /* \"contracts/Vesting.sol\":5174:5206  block.timestamp.sub(deltaPeriod) */\n      jump\t// in\n        /* \"contracts/Vesting.sol\":5174:5248  block.timestamp.sub(deltaPeriod)... */\n    tag_171:\n        /* \"contracts/Vesting.sol\":5174:5265  block.timestamp.sub(deltaPeriod)... */\n      swap1\n      tag_121\n        /* \"contracts/Vesting.sol\":5174:5286  block.timestamp.sub(deltaPeriod)... */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Vesting.sol\":5174:5303  block.timestamp.sub(deltaPeriod)... */\n      swap1\n      tag_124\n        /* \"contracts/Vesting.sol\":5174:5327  block.timestamp.sub(deltaPeriod)... */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Vesting.sol\":5096:5361  uint256 percentage = claimOpen > 0 && block.timestamp > deltaPeriod... */\n      swap1\n      pop\n        /* \"contracts/Vesting.sol\":5391:5395  1000 */\n      0x03e8\n        /* \"contracts/Vesting.sol\":5378:5388  percentage */\n      dup2\n        /* \"contracts/Vesting.sol\":5378:5395  percentage > 1000 */\n      gt\n        /* \"contracts/Vesting.sol\":5378:5415  percentage > 1000 ? 1000 : percentage */\n      tag_175\n      jumpi\n        /* \"contracts/Vesting.sol\":5405:5415  percentage */\n      dup1\n        /* \"contracts/Vesting.sol\":5378:5415  percentage > 1000 ? 1000 : percentage */\n      jump(tag_176)\n    tag_175:\n        /* \"contracts/Vesting.sol\":5398:5402  1000 */\n      0x03e8\n        /* \"contracts/Vesting.sol\":5378:5415  percentage > 1000 ? 1000 : percentage */\n    tag_176:\n        /* \"contracts/Vesting.sol\":5371:5415  return percentage > 1000 ? 1000 : percentage */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Vesting.sol\":4925:5422  function getCurrentPercentage() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4446:4448   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4428:4449   */\n      mstore\n        /* \"#utility.yul\":4485:4487   */\n      0x26\n        /* \"#utility.yul\":4465:4483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4458:4488   */\n      mstore\n        /* \"#utility.yul\":4524:4558   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4504:4522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4497:4559   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4575:4593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4568:4604   */\n      mstore\n        /* \"#utility.yul\":4621:4640   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4244:4646   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Vesting.sol\":3561:4074  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_190:\n        /* \"contracts/Vesting.sol\":3666:3677  rewardToken */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":3647:3677  _newRewardToken != rewardToken */\n      dup3\n      dup2\n      and\n        /* \"contracts/Vesting.sol\":3666:3677  rewardToken */\n      swap2\n      and\n        /* \"contracts/Vesting.sol\":3647:3677  _newRewardToken != rewardToken */\n      eq\n      iszero\n        /* \"contracts/Vesting.sol\":3639:3752  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"contracts/Vesting.sol\":3639:3752  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6571:6592   */\n      mstore\n        /* \"#utility.yul\":6628:6630   */\n      0x46\n        /* \"#utility.yul\":6608:6626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6601:6631   */\n      mstore\n        /* \"#utility.yul\":6667:6701   */\n      0x41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265\n        /* \"#utility.yul\":6647:6665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6640:6702   */\n      mstore\n        /* \"#utility.yul\":6738:6772   */\n      0x776172642073686f756c6420626520646966666572656e742066726f6d206375\n        /* \"#utility.yul\":6718:6736   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6711:6773   */\n      mstore\n      shl(0xd1, 0x393932b73a17)\n        /* \"#utility.yul\":6789:6808   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6782:6819   */\n      mstore\n        /* \"#utility.yul\":6836:6855   */\n      0xa4\n      add\n        /* \"contracts/Vesting.sol\":3639:3752  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      tag_99\n        /* \"#utility.yul\":6387:6861   */\n      jump\n        /* \"contracts/Vesting.sol\":3639:3752  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n    tag_193:\n        /* \"contracts/Vesting.sol\":3814:3825  rewardToken */\n      sload(0x01)\n        /* \"contracts/Vesting.sol\":3814:3850  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":3844:3848  this */\n      address\n        /* \"contracts/Vesting.sol\":3814:3850  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3489:3540   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":3814:3825  rewardToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Vesting.sol\":3814:3835  rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3462:3480   */\n      0x24\n      add\n        /* \"contracts/Vesting.sol\":3814:3850  rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Vesting.sol\":3770:3810  _newRewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Vesting.sol\":3804:3808  this */\n      address\n        /* \"contracts/Vesting.sol\":3770:3810  _newRewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3489:3540   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Vesting.sol\":3770:3795  _newRewardToken.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3462:3480   */\n      0x24\n      add\n        /* \"contracts/Vesting.sol\":3770:3810  _newRewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_206:\n        /* \"contracts/Vesting.sol\":3770:3850  _newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/Vesting.sol\":3762:3974  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7922:7924   */\n      0x20\n        /* \"contracts/Vesting.sol\":3762:3974  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7904:7925   */\n      mstore\n        /* \"#utility.yul\":7961:7964   */\n      0x77\n        /* \"#utility.yul\":7941:7959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7934:7965   */\n      mstore\n        /* \"#utility.yul\":8001:8035   */\n      0x41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f\n        /* \"#utility.yul\":7981:7999   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7974:8036   */\n      mstore\n        /* \"#utility.yul\":8072:8106   */\n      0x6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468\n        /* \"#utility.yul\":8052:8070   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8045:8107   */\n      mstore\n        /* \"#utility.yul\":8144:8178   */\n      0x652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d20\n        /* \"#utility.yul\":8123:8142   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8116:8179   */\n      mstore\n        /* \"#utility.yul\":8216:8241   */\n      0x7468652063757272656e7420726577617264546f6b656e000000000000000000\n        /* \"#utility.yul\":8195:8214   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":8188:8242   */\n      mstore\n        /* \"#utility.yul\":8259:8278   */\n      0xc4\n      add\n        /* \"contracts/Vesting.sol\":3762:3974  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      tag_99\n        /* \"#utility.yul\":7720:8284   */\n      jump\n        /* \"contracts/Vesting.sol\":3762:3974  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n    tag_207:\n        /* \"contracts/Vesting.sol\":3984:3995  rewardToken */\n      0x01\n        /* \"contracts/Vesting.sol\":3984:4013  rewardToken = _newRewardToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Vesting.sol\":4028:4067  ChangeRewardToken(address(rewardToken)) */\n      mload(0x40)\n      0x3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f83\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Vesting.sol\":3561:4074  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3097:3104  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3127:3128  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3124  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3116:3128  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3440:3447  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3470:3471  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3467  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_173\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3855:3856  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3852  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_218\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2760:2761  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2757  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_221\n      jump\t// in\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n    tag_127:\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3743:3775   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3725:3776   */\n      mstore\n        /* \"#utility.yul\":3792:3810   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":3785:3819   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3698:3716   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":371:381  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_225\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_226\n      jump\t// in\n    tag_225:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_229\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_228)\n    tag_229:\n      0x60\n      swap2\n      pop\n    tag_228:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":323:428  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":459:466  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":459:516  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":471:482  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":471:487  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":471:515  data.length == 0 || abi.decode(data, (bool)) */\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":502:506  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":491:515  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8852:8854   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8834:8855   */\n      mstore\n        /* \"#utility.yul\":8891:8893   */\n      0x2d\n        /* \"#utility.yul\":8871:8889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8864:8894   */\n      mstore\n        /* \"#utility.yul\":8930:8964   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":8910:8928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8903:8965   */\n      mstore\n      shl(0x9a, 0x185b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8981:8999   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8974:9017   */\n      mstore\n        /* \"#utility.yul\":9034:9053   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_99\n        /* \"#utility.yul\":8650:9059   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n    tag_234:\n        /* \"contracts/libraries/TransferHelper.sol\":313:594  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_130:\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1098:1110  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1123  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1131:1136  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1151  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_242:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_245\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_244)\n    tag_245:\n      0x60\n      swap2\n      pop\n    tag_244:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1097:1151  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1182:1189  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5258:5260   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5240:5261   */\n      mstore\n        /* \"#utility.yul\":5297:5299   */\n      0x34\n        /* \"#utility.yul\":5277:5295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5270:5300   */\n      mstore\n        /* \"#utility.yul\":5336:5370   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":5316:5334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5309:5371   */\n      mstore\n      shl(0x62, 0x08115512081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":5387:5405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5380:5430   */\n      mstore\n        /* \"#utility.yul\":5447:5466   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_99\n        /* \"#utility.yul\":5056:5472   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n    tag_246:\n        /* \"contracts/libraries/TransferHelper.sol\":1087:1274  {... */\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:687   */\n    tag_251:\n        /* \"#utility.yul\":68:73   */\n      0x00\n        /* \"#utility.yul\":121:124   */\n      dup3\n        /* \"#utility.yul\":114:118   */\n      0x1f\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":102:119   */\n      add\n        /* \"#utility.yul\":98:125   */\n      slt\n        /* \"#utility.yul\":88:143   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":136:137   */\n      dup1\n        /* \"#utility.yul\":129:141   */\n      revert\n        /* \"#utility.yul\":88:143   */\n    tag_253:\n        /* \"#utility.yul\":175:181   */\n      dup2\n        /* \"#utility.yul\":162:182   */\n      calldataload\n        /* \"#utility.yul\":201:205   */\n      0x20\n        /* \"#utility.yul\":225:285   */\n      tag_254\n        /* \"#utility.yul\":241:284   */\n      tag_255\n        /* \"#utility.yul\":281:283   */\n      dup4\n        /* \"#utility.yul\":241:284   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":225:285   */\n      tag_257\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":307:310   */\n      dup1\n        /* \"#utility.yul\":331:333   */\n      dup4\n        /* \"#utility.yul\":326:329   */\n      dup3\n        /* \"#utility.yul\":319:334   */\n      mstore\n        /* \"#utility.yul\":359:361   */\n      dup3\n        /* \"#utility.yul\":354:357   */\n      dup3\n        /* \"#utility.yul\":350:362   */\n      add\n        /* \"#utility.yul\":343:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":394:396   */\n      dup3\n        /* \"#utility.yul\":386:392   */\n      dup7\n        /* \"#utility.yul\":382:397   */\n      add\n        /* \"#utility.yul\":446:449   */\n      dup8\n        /* \"#utility.yul\":441:443   */\n      dup5\n        /* \"#utility.yul\":435:437   */\n      dup7\n        /* \"#utility.yul\":432:433   */\n      0x05\n        /* \"#utility.yul\":428:438   */\n      shl\n        /* \"#utility.yul\":420:426   */\n      dup10\n        /* \"#utility.yul\":416:439   */\n      add\n        /* \"#utility.yul\":412:444   */\n      add\n        /* \"#utility.yul\":409:450   */\n      gt\n        /* \"#utility.yul\":406:467   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":460:461   */\n      dup1\n        /* \"#utility.yul\":453:465   */\n      revert\n        /* \"#utility.yul\":406:467   */\n    tag_258:\n        /* \"#utility.yul\":485:486   */\n      0x00\n        /* \"#utility.yul\":495:658   */\n    tag_259:\n        /* \"#utility.yul\":509:511   */\n      dup6\n        /* \"#utility.yul\":506:507   */\n      dup2\n        /* \"#utility.yul\":503:512   */\n      lt\n        /* \"#utility.yul\":495:658   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":566:583   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":554:584   */\n      dup5\n      mstore\n        /* \"#utility.yul\":604:616   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":636:648   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":527:528   */\n      0x01\n        /* \"#utility.yul\":520:529   */\n      add\n        /* \"#utility.yul\":495:658   */\n      jump(tag_259)\n    tag_261:\n      pop\n        /* \"#utility.yul\":676:681   */\n      swap1\n      swap8\n        /* \"#utility.yul\":14:687   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":692:939   */\n    tag_46:\n        /* \"#utility.yul\":751:757   */\n      0x00\n        /* \"#utility.yul\":804:806   */\n      0x20\n        /* \"#utility.yul\":792:801   */\n      dup3\n        /* \"#utility.yul\":783:790   */\n      dup5\n        /* \"#utility.yul\":779:802   */\n      sub\n        /* \"#utility.yul\":775:807   */\n      slt\n        /* \"#utility.yul\":772:824   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":820:821   */\n      0x00\n        /* \"#utility.yul\":817:818   */\n      dup1\n        /* \"#utility.yul\":810:822   */\n      revert\n        /* \"#utility.yul\":772:824   */\n    tag_263:\n        /* \"#utility.yul\":859:868   */\n      dup2\n        /* \"#utility.yul\":846:869   */\n      calldataload\n        /* \"#utility.yul\":878:909   */\n      tag_212\n        /* \"#utility.yul\":903:908   */\n      dup2\n        /* \"#utility.yul\":878:909   */\n      tag_265\n      jump\t// in\n        /* \"#utility.yul\":944:2170   */\n    tag_42:\n        /* \"#utility.yul\":1062:1068   */\n      0x00\n        /* \"#utility.yul\":1070:1076   */\n      dup1\n        /* \"#utility.yul\":1123:1125   */\n      0x40\n        /* \"#utility.yul\":1111:1120   */\n      dup4\n        /* \"#utility.yul\":1102:1109   */\n      dup6\n        /* \"#utility.yul\":1098:1121   */\n      sub\n        /* \"#utility.yul\":1094:1126   */\n      slt\n        /* \"#utility.yul\":1091:1143   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1136:1137   */\n      dup1\n        /* \"#utility.yul\":1129:1141   */\n      revert\n        /* \"#utility.yul\":1091:1143   */\n    tag_267:\n        /* \"#utility.yul\":1179:1188   */\n      dup3\n        /* \"#utility.yul\":1166:1189   */\n      calldataload\n        /* \"#utility.yul\":1208:1226   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1249:1251   */\n      dup1\n        /* \"#utility.yul\":1241:1247   */\n      dup3\n        /* \"#utility.yul\":1238:1252   */\n      gt\n        /* \"#utility.yul\":1235:1269   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1235:1269   */\n    tag_268:\n        /* \"#utility.yul\":1303:1309   */\n      dup2\n        /* \"#utility.yul\":1292:1301   */\n      dup6\n        /* \"#utility.yul\":1288:1310   */\n      add\n        /* \"#utility.yul\":1278:1310   */\n      swap2\n      pop\n        /* \"#utility.yul\":1348:1355   */\n      dup6\n        /* \"#utility.yul\":1341:1345   */\n      0x1f\n        /* \"#utility.yul\":1337:1339   */\n      dup4\n        /* \"#utility.yul\":1333:1346   */\n      add\n        /* \"#utility.yul\":1329:1356   */\n      slt\n        /* \"#utility.yul\":1319:1374   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1370:1371   */\n      0x00\n        /* \"#utility.yul\":1367:1368   */\n      dup1\n        /* \"#utility.yul\":1360:1372   */\n      revert\n        /* \"#utility.yul\":1319:1374   */\n    tag_269:\n        /* \"#utility.yul\":1406:1408   */\n      dup2\n        /* \"#utility.yul\":1393:1409   */\n      calldataload\n        /* \"#utility.yul\":1428:1432   */\n      0x20\n        /* \"#utility.yul\":1452:1512   */\n      tag_270\n        /* \"#utility.yul\":1468:1511   */\n      tag_255\n        /* \"#utility.yul\":1508:1510   */\n      dup4\n        /* \"#utility.yul\":1468:1511   */\n      tag_256\n      jump\t// in\n        /* \"#utility.yul\":1452:1512   */\n    tag_270:\n        /* \"#utility.yul\":1534:1537   */\n      dup1\n        /* \"#utility.yul\":1558:1560   */\n      dup4\n        /* \"#utility.yul\":1553:1556   */\n      dup3\n        /* \"#utility.yul\":1546:1561   */\n      mstore\n        /* \"#utility.yul\":1586:1588   */\n      dup3\n        /* \"#utility.yul\":1581:1584   */\n      dup3\n        /* \"#utility.yul\":1577:1589   */\n      add\n        /* \"#utility.yul\":1570:1589   */\n      swap2\n      pop\n        /* \"#utility.yul\":1617:1619   */\n      dup3\n        /* \"#utility.yul\":1613:1615   */\n      dup7\n        /* \"#utility.yul\":1609:1620   */\n      add\n        /* \"#utility.yul\":1665:1672   */\n      dup11\n        /* \"#utility.yul\":1660:1662   */\n      dup5\n        /* \"#utility.yul\":1654:1656   */\n      dup7\n        /* \"#utility.yul\":1651:1652   */\n      0x05\n        /* \"#utility.yul\":1647:1657   */\n      shl\n        /* \"#utility.yul\":1643:1645   */\n      dup10\n        /* \"#utility.yul\":1639:1658   */\n      add\n        /* \"#utility.yul\":1635:1663   */\n      add\n        /* \"#utility.yul\":1632:1673   */\n      gt\n        /* \"#utility.yul\":1629:1690   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1683:1684   */\n      dup1\n        /* \"#utility.yul\":1676:1688   */\n      revert\n        /* \"#utility.yul\":1629:1690   */\n    tag_272:\n        /* \"#utility.yul\":1708:1709   */\n      0x00\n        /* \"#utility.yul\":1699:1709   */\n      swap7\n      pop\n        /* \"#utility.yul\":1718:1956   */\n    tag_273:\n        /* \"#utility.yul\":1732:1734   */\n      dup5\n        /* \"#utility.yul\":1729:1730   */\n      dup8\n        /* \"#utility.yul\":1726:1735   */\n      lt\n        /* \"#utility.yul\":1718:1956   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1803:1806   */\n      dup1\n        /* \"#utility.yul\":1790:1807   */\n      calldataload\n        /* \"#utility.yul\":1820:1851   */\n      tag_276\n        /* \"#utility.yul\":1845:1850   */\n      dup2\n        /* \"#utility.yul\":1820:1851   */\n      tag_265\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1864:1882   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1750:1751   */\n      0x01\n        /* \"#utility.yul\":1743:1752   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":1902:1914   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1934:1946   */\n      dup4\n      add\n        /* \"#utility.yul\":1718:1956   */\n      jump(tag_273)\n    tag_275:\n      pop\n        /* \"#utility.yul\":1975:1980   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":2018:2036   */\n      dup7\n      add\n        /* \"#utility.yul\":2005:2037   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2049:2065   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2046:2082   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2078:2079   */\n      0x00\n        /* \"#utility.yul\":2075:2076   */\n      dup1\n        /* \"#utility.yul\":2068:2080   */\n      revert\n        /* \"#utility.yul\":2046:2082   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":2101:2164   */\n      tag_278\n        /* \"#utility.yul\":2156:2163   */\n      dup6\n        /* \"#utility.yul\":2145:2153   */\n      dup3\n        /* \"#utility.yul\":2134:2143   */\n      dup7\n        /* \"#utility.yul\":2130:2154   */\n      add\n        /* \"#utility.yul\":2101:2164   */\n      tag_251\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2091:2164   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":944:2170   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2175:2452   */\n    tag_233:\n        /* \"#utility.yul\":2242:2248   */\n      0x00\n        /* \"#utility.yul\":2295:2297   */\n      0x20\n        /* \"#utility.yul\":2283:2292   */\n      dup3\n        /* \"#utility.yul\":2274:2281   */\n      dup5\n        /* \"#utility.yul\":2270:2293   */\n      sub\n        /* \"#utility.yul\":2266:2298   */\n      slt\n        /* \"#utility.yul\":2263:2315   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2311:2312   */\n      0x00\n        /* \"#utility.yul\":2308:2309   */\n      dup1\n        /* \"#utility.yul\":2301:2313   */\n      revert\n        /* \"#utility.yul\":2263:2315   */\n    tag_280:\n        /* \"#utility.yul\":2343:2352   */\n      dup2\n        /* \"#utility.yul\":2337:2353   */\n      mload\n        /* \"#utility.yul\":2396:2401   */\n      dup1\n        /* \"#utility.yul\":2389:2402   */\n      iszero\n        /* \"#utility.yul\":2382:2403   */\n      iszero\n        /* \"#utility.yul\":2375:2380   */\n      dup2\n        /* \"#utility.yul\":2372:2404   */\n      eq\n        /* \"#utility.yul\":2362:2422   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2418:2419   */\n      0x00\n        /* \"#utility.yul\":2415:2416   */\n      dup1\n        /* \"#utility.yul\":2408:2420   */\n      revert\n        /* \"#utility.yul\":2723:2907   */\n    tag_201:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":2885:2901   */\n      mload\n      swap2\n        /* \"#utility.yul\":2723:2907   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3338   */\n    tag_226:\n        /* \"#utility.yul\":3041:3044   */\n      0x00\n        /* \"#utility.yul\":3079:3085   */\n      dup3\n        /* \"#utility.yul\":3073:3086   */\n      mload\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3114:3243   */\n    tag_288:\n        /* \"#utility.yul\":3128:3134   */\n      dup2\n        /* \"#utility.yul\":3125:3126   */\n      dup2\n        /* \"#utility.yul\":3122:3135   */\n      lt\n        /* \"#utility.yul\":3114:3243   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3226:3230   */\n      0x20\n        /* \"#utility.yul\":3210:3224   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":3206:3231   */\n      dup2\n      add\n        /* \"#utility.yul\":3200:3232   */\n      mload\n        /* \"#utility.yul\":3187:3198   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3180:3233   */\n      mstore\n        /* \"#utility.yul\":3143:3155   */\n      add\n        /* \"#utility.yul\":3114:3243   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":3261:3267   */\n      dup2\n        /* \"#utility.yul\":3258:3259   */\n      dup2\n        /* \"#utility.yul\":3255:3268   */\n      gt\n        /* \"#utility.yul\":3252:3300   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3296:3297   */\n      0x00\n        /* \"#utility.yul\":3287:3293   */\n      dup3\n        /* \"#utility.yul\":3282:3285   */\n      dup6\n        /* \"#utility.yul\":3278:3294   */\n      add\n        /* \"#utility.yul\":3271:3298   */\n      mstore\n        /* \"#utility.yul\":3252:3300   */\n    tag_291:\n      pop\n        /* \"#utility.yul\":3316:3332   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2912:3338   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8289:8645   */\n    tag_100:\n        /* \"#utility.yul\":8491:8493   */\n      0x20\n        /* \"#utility.yul\":8473:8494   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8510:8528   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8503:8533   */\n      mstore\n        /* \"#utility.yul\":8569:8603   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8564:8566   */\n      0x40\n        /* \"#utility.yul\":8549:8567   */\n      dup3\n      add\n        /* \"#utility.yul\":8542:8604   */\n      mstore\n        /* \"#utility.yul\":8636:8638   */\n      0x60\n        /* \"#utility.yul\":8621:8639   */\n      add\n      swap1\n        /* \"#utility.yul\":8289:8645   */\n      jump\t// out\n        /* \"#utility.yul\":9246:9521   */\n    tag_257:\n        /* \"#utility.yul\":9317:9319   */\n      0x40\n        /* \"#utility.yul\":9311:9320   */\n      mload\n        /* \"#utility.yul\":9382:9384   */\n      0x1f\n        /* \"#utility.yul\":9363:9376   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9359:9386   */\n      and\n        /* \"#utility.yul\":9347:9387   */\n      dup2\n      add\n        /* \"#utility.yul\":9417:9435   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9402:9436   */\n      dup2\n      gt\n        /* \"#utility.yul\":9438:9460   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":9399:9461   */\n      or\n        /* \"#utility.yul\":9396:9484   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":9464:9482   */\n      tag_310\n      tag_240\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9500:9502   */\n      0x40\n        /* \"#utility.yul\":9493:9515   */\n      mstore\n        /* \"#utility.yul\":9246:9521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9526:9709   */\n    tag_256:\n        /* \"#utility.yul\":9586:9590   */\n      0x00\n        /* \"#utility.yul\":9619:9637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9611:9617   */\n      dup3\n        /* \"#utility.yul\":9608:9638   */\n      gt\n        /* \"#utility.yul\":9605:9661   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9641:9659   */\n      tag_313\n      tag_240\n      jump\t// in\n    tag_313:\n      pop\n        /* \"#utility.yul\":9686:9687   */\n      0x05\n        /* \"#utility.yul\":9682:9696   */\n      shl\n        /* \"#utility.yul\":9698:9702   */\n      0x20\n        /* \"#utility.yul\":9678:9703   */\n      add\n      swap1\n        /* \"#utility.yul\":9526:9709   */\n      jump\t// out\n        /* \"#utility.yul\":9714:9842   */\n    tag_221:\n        /* \"#utility.yul\":9754:9757   */\n      0x00\n        /* \"#utility.yul\":9785:9786   */\n      dup3\n        /* \"#utility.yul\":9781:9787   */\n      not\n        /* \"#utility.yul\":9778:9779   */\n      dup3\n        /* \"#utility.yul\":9775:9788   */\n      gt\n        /* \"#utility.yul\":9772:9811   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":9791:9809   */\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n      pop\n        /* \"#utility.yul\":9827:9836   */\n      add\n      swap1\n        /* \"#utility.yul\":9714:9842   */\n      jump\t// out\n        /* \"#utility.yul\":9847:10064   */\n    tag_218:\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9913:9914   */\n      dup3\n        /* \"#utility.yul\":9903:10035   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":9957:9967   */\n      0x4e487b71\n        /* \"#utility.yul\":9952:9955   */\n      0xe0\n        /* \"#utility.yul\":9948:9968   */\n      shl\n        /* \"#utility.yul\":9945:9946   */\n      0x00\n        /* \"#utility.yul\":9938:9969   */\n      mstore\n        /* \"#utility.yul\":9992:9996   */\n      0x12\n        /* \"#utility.yul\":9989:9990   */\n      0x04\n        /* \"#utility.yul\":9982:9997   */\n      mstore\n        /* \"#utility.yul\":10020:10024   */\n      0x24\n        /* \"#utility.yul\":10017:10018   */\n      0x00\n        /* \"#utility.yul\":10010:10025   */\n      revert\n        /* \"#utility.yul\":9903:10035   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":10049:10058   */\n      div\n      swap1\n        /* \"#utility.yul\":9847:10064   */\n      jump\t// out\n        /* \"#utility.yul\":10069:10237   */\n    tag_173:\n        /* \"#utility.yul\":10109:10116   */\n      0x00\n        /* \"#utility.yul\":10175:10176   */\n      dup2\n        /* \"#utility.yul\":10171:10172   */\n      0x00\n        /* \"#utility.yul\":10167:10173   */\n      not\n        /* \"#utility.yul\":10163:10177   */\n      div\n        /* \"#utility.yul\":10160:10161   */\n      dup4\n        /* \"#utility.yul\":10157:10178   */\n      gt\n        /* \"#utility.yul\":10152:10153   */\n      dup3\n        /* \"#utility.yul\":10145:10154   */\n      iszero\n        /* \"#utility.yul\":10138:10155   */\n      iszero\n        /* \"#utility.yul\":10134:10179   */\n      and\n        /* \"#utility.yul\":10131:10202   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":10182:10200   */\n      tag_322\n      tag_317\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":10222:10231   */\n      mul\n      swap1\n        /* \"#utility.yul\":10069:10237   */\n      jump\t// out\n        /* \"#utility.yul\":10242:10367   */\n    tag_213:\n        /* \"#utility.yul\":10282:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10311   */\n      dup3\n        /* \"#utility.yul\":10307:10308   */\n      dup3\n        /* \"#utility.yul\":10304:10312   */\n      lt\n        /* \"#utility.yul\":10301:10335   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10315:10333   */\n      tag_325\n      tag_317\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":10352:10361   */\n      sub\n      swap1\n        /* \"#utility.yul\":10242:10367   */\n      jump\t// out\n        /* \"#utility.yul\":10372:10507   */\n    tag_154:\n        /* \"#utility.yul\":10411:10414   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10432:10449   */\n      dup3\n      eq\n        /* \"#utility.yul\":10429:10472   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":10452:10470   */\n      tag_328\n      tag_317\n      jump\t// in\n    tag_328:\n      pop\n        /* \"#utility.yul\":10499:10500   */\n      0x01\n        /* \"#utility.yul\":10488:10501   */\n      add\n      swap1\n        /* \"#utility.yul\":10372:10507   */\n      jump\t// out\n        /* \"#utility.yul\":10512:10639   */\n    tag_317:\n        /* \"#utility.yul\":10573:10583   */\n      0x4e487b71\n        /* \"#utility.yul\":10568:10571   */\n      0xe0\n        /* \"#utility.yul\":10564:10584   */\n      shl\n        /* \"#utility.yul\":10561:10562   */\n      0x00\n        /* \"#utility.yul\":10554:10585   */\n      mstore\n        /* \"#utility.yul\":10604:10608   */\n      0x11\n        /* \"#utility.yul\":10601:10602   */\n      0x04\n        /* \"#utility.yul\":10594:10609   */\n      mstore\n        /* \"#utility.yul\":10628:10632   */\n      0x24\n        /* \"#utility.yul\":10625:10626   */\n      0x00\n        /* \"#utility.yul\":10618:10633   */\n      revert\n        /* \"#utility.yul\":10644:10771   */\n    tag_146:\n        /* \"#utility.yul\":10705:10715   */\n      0x4e487b71\n        /* \"#utility.yul\":10700:10703   */\n      0xe0\n        /* \"#utility.yul\":10696:10716   */\n      shl\n        /* \"#utility.yul\":10693:10694   */\n      0x00\n        /* \"#utility.yul\":10686:10717   */\n      mstore\n        /* \"#utility.yul\":10736:10740   */\n      0x32\n        /* \"#utility.yul\":10733:10734   */\n      0x04\n        /* \"#utility.yul\":10726:10741   */\n      mstore\n        /* \"#utility.yul\":10760:10764   */\n      0x24\n        /* \"#utility.yul\":10757:10758   */\n      0x00\n        /* \"#utility.yul\":10750:10765   */\n      revert\n        /* \"#utility.yul\":10776:10903   */\n    tag_240:\n        /* \"#utility.yul\":10837:10847   */\n      0x4e487b71\n        /* \"#utility.yul\":10832:10835   */\n      0xe0\n        /* \"#utility.yul\":10828:10848   */\n      shl\n        /* \"#utility.yul\":10825:10826   */\n      0x00\n        /* \"#utility.yul\":10818:10849   */\n      mstore\n        /* \"#utility.yul\":10868:10872   */\n      0x41\n        /* \"#utility.yul\":10865:10866   */\n      0x04\n        /* \"#utility.yul\":10858:10873   */\n      mstore\n        /* \"#utility.yul\":10892:10896   */\n      0x24\n        /* \"#utility.yul\":10889:10890   */\n      0x00\n        /* \"#utility.yul\":10882:10897   */\n      revert\n        /* \"#utility.yul\":10908:11039   */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10983:11014   */\n      dup2\n      and\n        /* \"#utility.yul\":10973:11015   */\n      dup2\n      eq\n        /* \"#utility.yul\":10963:11033   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":11029:11030   */\n      0x00\n        /* \"#utility.yul\":11026:11027   */\n      dup1\n        /* \"#utility.yul\":11019:11031   */\n      revert\n\n    auxdata: 0xa26469706673582212202ffbe92f2acbb764df3a54ea87459123c6729cc54406eacd6262891f059a7b8364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 111,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$181_fromMemory": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:320:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:209:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "155:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "164:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "151:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "122:32:8"
															},
															"nodeType": "YulIf",
															"src": "119:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "180:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "184:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "272:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "281:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "284:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "274:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "274:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "231:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "242:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "257:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "262:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "253:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "253:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "266:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "249:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "249:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "238:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "238:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "228:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "228:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "221:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:50:8"
															},
															"nodeType": "YulIf",
															"src": "218:70:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "307:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "75:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "86:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "98:6:8",
														"type": ""
													}
												],
												"src": "14:304:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$181_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006002556003805460ff1916600117905534801561002257600080fd5b50604051611370380380611370833981016040819052610041916100bf565b61004a3361006f565b600180546001600160a01b0319166001600160a01b03929092169190911790556100ef565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d157600080fd5b81516001600160a01b03811681146100e857600080fd5b9392505050565b611272806100fe6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639c92431b116100ad578063ef78d4fd11610071578063ef78d4fd14610246578063f2fde38b1461024e578063f3739e0514610261578063f7c618c11461028a578063f8cf31cb1461029d57600080fd5b80639c92431b146101ec578063a5ebf835146101f4578063a960c65f146101fc578063c884ef831461021c578063ec18c9871461023c57600080fd5b80635372a58e116100f45780635372a58e1461016f578063667022fd14610182578063715018a6146101a2578063856734c4146101aa5780638da5cb5b146101c757600080fd5b8063151bad0a14610131578063293cdbf11461014c5780632f661946146101565780634b8bcb581461015e5780634e71d92d14610167575b600080fd5b61013960c881565b6040519081526020015b60405180910390f35b6101546102b0565b005b610139600081565b61013960025481565b610154610364565b61015461017d366004610f91565b610631565b610139610190366004610f74565b60046020526000908152604090205481565b610154610857565b6003546101b79060ff1681565b6040519015158152602001610143565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610143565b61013961088d565b610139606481565b61013961020a366004610f74565b60066020526000908152604090205481565b61013961022a366004610f74565b60056020526000908152604090205481565b6101396201518081565b610139601e81565b61015461025c366004610f74565b610918565b6101d461026f366004610f74565b6007602052600090815260409020546001600160a01b031681565b6001546101d4906001600160a01b031681565b6101546102ab366004610f74565b6109b3565b6000546001600160a01b031633146102e35760405162461bcd60e51b81526004016102da906110d0565b60405180910390fd5b600254156103335760405162461bcd60e51b815260206004820152601760248201527f436c61696d20697320616c7265616479206f70656e656400000000000000000060448201526064016102da565b4260028190556040517f7d425ef8bc8f854f0bddfa263a1a52ae42adbddd9c9c95ad3f21b1e2d311c4ca90600090a2565b6002546103bf5760405162461bcd60e51b8152602060048201526024808201527f41424f41543a3a636c61696d3a20436c61696d206973206e6f74206f70656e206044820152637965742160e01b60648201526084016102da565b60006103c961088d565b9050600081116104675760405162461bcd60e51b815260206004820152605d60248201527f41424f41543a3a636c61696d3a205468652070657263656e74616765206f662060448201527f746f6b656e20796f752063616e20636c61696d2069732063757272656e746c7960648201527f207a65726f2e20506c656173652074727920616761696e206c61746572000000608482015260a4016102da565b600154336000908152600760205260409020546001600160a01b039081169116146104d25760015433600090815260076020908152604080832080546001600160a01b0319166001600160a01b03909516949094179093556005815282822082905560069052908120555b3360009081526005602052604090205481116105565760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f60448201527f75722063757272656e746c7920656c696769626c6520746f6b656e730000000060648201526084016102da565b3360009081526005602052604081208054908390559061059b6103e861059561057f8686610c6b565b3360009081526004602052604090205490610c7e565b90610c8a565b336000908152600660205260409020549091506105b89082610c96565b336000908152600660205260409020556001546001600160a01b0316156105f5576001546105f0906001600160a01b03163383610ca2565b6105ff565b6105ff3382610dd3565b604051819033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90600090a3505050565b6000546001600160a01b0316331461065b5760405162461bcd60e51b81526004016102da906110d0565b6064825111156106e45760405162461bcd60e51b815260206004820152604860248201527f41424f41543a3a77686974656c6973743a20596f752063616e2774206164642060448201527f6d6f7265207468616e2031303020616464726573736573206174207468652073606482015267616d652074696d6560c01b608482015260a4016102da565b60005b82518110156108275761075a828281518110610705576107056111fb565b602002602001015160046000868581518110610723576107236111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054610c9690919063ffffffff16565b60046000858481518110610770576107706111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550600160009054906101000a90046001600160a01b0316600760008584815181106107c8576107c86111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061081f906111ca565b9150506106e7565b5081516040517f6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd590600090a25050565b6000546001600160a01b031633146108815760405162461bcd60e51b81526004016102da906110d0565b61088b6000610eb2565b565b6000806108a66000600254610c9690919063ffffffff16565b905060008190506000806002541180156108bf57508142115b6108ca5760646108fb565b6108fb60646108f560c86108ef6108e562015180601e611194565b6105954289610c6b565b90610c7e565b90610c96565b90506103e8811161090c5780610910565b6103e85b935050505090565b6000546001600160a01b031633146109425760405162461bcd60e51b81526004016102da906110d0565b6001600160a01b0381166109a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b6109b081610eb2565b50565b6000546001600160a01b031633146109dd5760405162461bcd60e51b81526004016102da906110d0565b6001546001600160a01b0382811691161415610a705760405162461bcd60e51b815260206004820152604660248201527f41424f41543a3a757064617465526577617264546f6b656e3a204e657720726560448201527f776172642073686f756c6420626520646966666572656e742066726f6d206375606482015265393932b73a1760d11b608482015260a4016102da565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb919061107c565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610b2a57600080fd5b505afa158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b62919061107c565b14610c215760405162461bcd60e51b815260206004820152607760248201527f41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f60448201527f6e74726163742073686f756c6420636f6e7461696e2061746c6561737420746860648201527f652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d2060848201527f7468652063757272656e7420726577617264546f6b656e00000000000000000060a482015260c4016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f8390600090a250565b6000610c7782846111b3565b9392505050565b6000610c778284611194565b6000610c778284611172565b6000610c77828461115a565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610cfe9190611095565b6000604051808303816000865af19150503d8060008114610d3b576040519150601f19603f3d011682016040523d82523d6000602084013e610d40565b606091505b5091509150818015610d6a575080511580610d6a575080806020019051810190610d6a919061105a565b610dcc5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016102da565b5050505050565b604080516000808252602082019092526001600160a01b038416908390604051610dfd9190611095565b60006040518083038185875af1925050503d8060008114610e3a576040519150601f19603f3d011682016040523d82523d6000602084013e610e3f565b606091505b5050905080610ead5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016102da565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610f1357600080fd5b81356020610f28610f2383611136565b611105565b80838252828201915082860187848660051b8901011115610f4857600080fd5b60005b85811015610f6757813584529284019290840190600101610f4b565b5090979650505050505050565b600060208284031215610f8657600080fd5b8135610c7781611227565b60008060408385031215610fa457600080fd5b823567ffffffffffffffff80821115610fbc57600080fd5b818501915085601f830112610fd057600080fd5b81356020610fe0610f2383611136565b8083825282820191508286018a848660051b890101111561100057600080fd5b600096505b8487101561102c57803561101881611227565b835260019690960195918301918301611005565b509650508601359250508082111561104357600080fd5b5061105085828601610f02565b9150509250929050565b60006020828403121561106c57600080fd5b81518015158114610c7757600080fd5b60006020828403121561108e57600080fd5b5051919050565b6000825160005b818110156110b6576020818601810151858301520161109c565b818111156110c5576000828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561112e5761112e611211565b604052919050565b600067ffffffffffffffff82111561115057611150611211565b5060051b60200190565b6000821982111561116d5761116d6111e5565b500190565b60008261118f57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156111ae576111ae6111e5565b500290565b6000828210156111c5576111c56111e5565b500390565b60006000198214156111de576111de6111e5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109b057600080fdfea26469706673582212202ffbe92f2acbb764df3a54ea87459123c6729cc54406eacd6262891f059a7b8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1370 CODESIZE SUB DUP1 PUSH2 0x1370 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x41 SWAP2 PUSH2 0xBF JUMP JUMPDEST PUSH2 0x4A CALLER PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1272 DUP1 PUSH2 0xFE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C92431B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEF78D4FD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF3739E05 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C92431B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xA5EBF835 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xA960C65F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xEC18C987 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5372A58E GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5372A58E EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x667022FD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x856734C4 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x151BAD0A EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x293CDBF1 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2F661946 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x4B8BCB58 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x364 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x139 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ISZERO PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20697320616C7265616479206F70656E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7D425EF8BC8F854F0BDDFA263A1A52AE42ADBDDD9C9C95AD3F21B1E2D311C4CA SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20436C61696D206973206E6F74206F70656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x79657421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9 PUSH2 0x88D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x207A65726F2E20506C656173652074727920616761696E206C61746572000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4D2 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x6 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75722063757272656E746C7920656C696769626C6520746F6B656E7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 PUSH2 0x59B PUSH2 0x3E8 PUSH2 0x595 PUSH2 0x57F DUP7 DUP7 PUSH2 0xC6B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP1 PUSH2 0xC8A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x5B8 SWAP1 DUP3 PUSH2 0xC96 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x1 SLOAD PUSH2 0x5F0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x5FF CALLER DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x64 DUP3 MLOAD GT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A77686974656C6973743A20596F752063616E27742061646420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E2031303020616464726573736573206174207468652073 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x616D652074696D65 PUSH1 0xC0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x827 JUMPI PUSH2 0x75A DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x705 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x723 JUMPI PUSH2 0x723 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH2 0x770 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x81F SWAP1 PUSH2 0x11CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6E7 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x88B PUSH1 0x0 PUSH2 0xEB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A6 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH2 0xC96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD GT DUP1 ISZERO PUSH2 0x8BF JUMPI POP DUP2 TIMESTAMP GT JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x64 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8FB PUSH1 0x64 PUSH2 0x8F5 PUSH1 0xC8 PUSH2 0x8EF PUSH2 0x8E5 PUSH3 0x15180 PUSH1 0x1E PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x595 TIMESTAMP DUP10 PUSH2 0xC6B JUMP JUMPDEST SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT PUSH2 0x90C JUMPI DUP1 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x9B0 DUP2 PUSH2 0xEB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776172642073686F756C6420626520646966666572656E742066726F6D206375 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x393932B73A17 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x107C JUMP JUMPDEST EQ PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x7468652063757272656E7420726577617264546F6B656E000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x11B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xD6A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xD6A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF28 PUSH2 0xF23 DUP4 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF67 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF4B JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC77 DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFE0 PUSH2 0xF23 DUP4 PUSH2 0x1136 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP11 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x102C JUMPI DUP1 CALLDATALOAD PUSH2 0x1018 DUP2 PUSH2 0x1227 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1005 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x109C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x112E JUMPI PUSH2 0x112E PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x1150 PUSH2 0x1211 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x116D JUMPI PUSH2 0x116D PUSH2 0x11E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11AE JUMPI PUSH2 0x11AE PUSH2 0x11E5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x11E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x11E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xFB 0xE9 0x2F 0x2A 0xCB 0xB7 PUSH5 0xDF3A54EA87 GASLIMIT SWAP2 0x23 0xC6 PUSH19 0x9CC54406EACD6262891F059A7B8364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "388:6741:6:-:0;;;910:1;883:28;;1437:35;;;-1:-1:-1;;1437:35:6;1468:4;1437:35;;;2689:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:4;867:9:0;:23::i;:::-;2732:11:6;:26;;-1:-1:-1;;;;;;2732:26:6;-1:-1:-1;;;;;2732:26:6;;;;;;;;;;388:6741;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:304:8:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:8;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:8:o;:::-;388:6741:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 3762,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_898": {
									"entryPoint": 3222,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@bought_1082": {
									"entryPoint": null,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimOpen_1060": {
									"entryPoint": null,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1476": {
									"entryPoint": 868,
									"id": 1476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimedTokens_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_1086": {
									"entryPoint": null,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cliffPeriod_1072": {
									"entryPoint": null,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_943": {
									"entryPoint": 3210,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrentPercentage_1327": {
									"entryPoint": 2189,
									"id": 1327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialClaimPercentage_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastClaimAddress_1094": {
									"entryPoint": null,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_928": {
									"entryPoint": 3198,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@openClaim_1162": {
									"entryPoint": 688,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@percentagePerPeriod_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@period_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2135,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requireWhitelist_1078": {
									"entryPoint": null,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1057": {
									"entryPoint": null,
									"id": 1057,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_1593": {
									"entryPoint": 3539,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_1522": {
									"entryPoint": 3234,
									"id": 1522,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sub_913": {
									"entryPoint": 3179,
									"id": 913,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@timeMultiplier_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2328,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_1208": {
									"entryPoint": 2483,
									"id": 1208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelistFromSAFT_1274": {
									"entryPoint": 1585,
									"id": 1274,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$181": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cfa6bb7f699bf0b54e2028bc433131deb9fd37eb35ddb2c040e70796ddb61b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95cc7d1782db5a79158bd18cfdf2b7fa2f1c2ac2e9205229b2bb4779d3aa903b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11041:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:609:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:8"
															},
															"nodeType": "YulIf",
															"src": "88:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "175:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "162:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:20:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "191:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "201:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "195:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "214:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "281:2:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "241:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:43:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "225:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:60:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "218:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "294:16:8",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "307:3:8"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "298:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "331:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "319:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "319:15:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "354:3:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:12:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "394:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:15:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "375:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "451:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "463:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "453:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "453:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "432:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "435:2:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "428:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "428:10:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "416:23:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "441:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "412:32:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "446:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "409:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:41:8"
															},
															"nodeType": "YulIf",
															"src": "406:61:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "485:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "480:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:118:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "561:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "579:3:8"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "566:12:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "566:17:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:30:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:30:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "597:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "608:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "613:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "604:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "604:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "597:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "629:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "640:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "645:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "636:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "636:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "629:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "506:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "509:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "503:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "513:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "515:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "524:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "520:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "515:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "499:3:8",
																"statements": []
															},
															"src": "495:163:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "667:14:8",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "676:5:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "667:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:8",
														"type": ""
													}
												],
												"src": "14:673:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "783:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "804:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:32:8"
															},
															"nodeType": "YulIf",
															"src": "772:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "859:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "846:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "837:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "903:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "928:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "728:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "739:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "751:6:8",
														"type": ""
													}
												],
												"src": "692:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1081:1089:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1102:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1123:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:32:8"
															},
															"nodeType": "YulIf",
															"src": "1091:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1152:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1179:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1166:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1156:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1198:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1208:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1202:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1241:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1249:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1238:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:14:8"
															},
															"nodeType": "YulIf",
															"src": "1235:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1288:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1282:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1358:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1370:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1360:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1360:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1360:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1337:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1341:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1333:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1333:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1348:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:35:8"
															},
															"nodeType": "YulIf",
															"src": "1319:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1383:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1406:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1393:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:16:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1387:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1418:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1428:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1422:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1441:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1508:2:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1468:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1468:43:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1452:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:60:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1445:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1521:16:8",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1534:3:8"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1525:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1553:3:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1558:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:15:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1581:3:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1586:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1598:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1613:2:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1617:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:11:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1602:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1676:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:2:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1651:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1654:2:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1647:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1647:10:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:19:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1660:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:28:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1665:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:41:8"
															},
															"nodeType": "YulIf",
															"src": "1629:61:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1708:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1703:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1763:193:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1777:30:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1790:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1790:17:8"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1781:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1845:5:8"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "1820:24:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1871:3:8"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1876:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1864:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1864:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1864:18:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1895:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1906:3:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1911:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1902:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1927:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1938:3:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "1943:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1934:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1934:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1927:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1729:1:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1732:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1736:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1738:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1747:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1750:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1738:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1722:3:8",
																"statements": []
															},
															"src": "1718:238:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1965:15:8",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1975:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1989:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2022:9:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2033:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2005:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:32:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1993:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2066:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2078:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2068:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2068:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2052:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2062:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2049:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:16:8"
															},
															"nodeType": "YulIf",
															"src": "2046:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2091:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2134:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2145:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2156:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2101:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1039:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1050:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1062:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1070:6:8",
														"type": ""
													}
												],
												"src": "944:1226:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2253:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2299:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2308:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2311:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2301:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2301:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2301:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2274:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2283:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2270:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:32:8"
															},
															"nodeType": "YulIf",
															"src": "2263:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2324:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2343:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2337:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2328:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2406:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2415:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2408:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2408:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2408:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2375:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2396:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2389:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2389:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2382:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2382:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2372:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2372:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2365:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:40:8"
															},
															"nodeType": "YulIf",
															"src": "2362:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2431:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2441:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2219:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2230:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2242:6:8",
														"type": ""
													}
												],
												"src": "2175:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2589:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2562:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2558:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2583:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2554:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:32:8"
															},
															"nodeType": "YulIf",
															"src": "2551:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2612:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2638:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2625:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2616:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2682:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2657:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2657:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2697:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2707:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2507:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2518:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2530:6:8",
														"type": ""
													}
												],
												"src": "2457:261:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:8"
															},
															"nodeType": "YulIf",
															"src": "2814:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2875:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2891:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2885:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:8",
														"type": ""
													}
												],
												"src": "2723:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3049:289:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3059:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3079:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3073:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3063:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3095:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3104:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3099:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3166:77:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3191:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3196:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3187:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3187:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3214:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3222:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3210:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3210:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3226:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3206:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3206:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3200:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3200:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:53:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:53:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3125:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3128:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3136:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3138:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3147:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3150:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3143:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3143:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3138:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3118:3:8",
																"statements": []
															},
															"src": "3114:129:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3269:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3282:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3287:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3278:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3278:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3296:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3271:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3271:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3271:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3258:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3261:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3255:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:13:8"
															},
															"nodeType": "YulIf",
															"src": "3252:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3309:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3320:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3325:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3309:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3025:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3030:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3041:3:8",
														"type": ""
													}
												],
												"src": "2912:426:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3444:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3454:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3466:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3462:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3496:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3527:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3532:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3523:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3523:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3536:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3519:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3519:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3507:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3489:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3489:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3489:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3413:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3424:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3435:4:8",
														"type": ""
													}
												],
												"src": "3343:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3680:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3690:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3702:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3713:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3690:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3747:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3763:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3768:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3759:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3759:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3772:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3755:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3755:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3743:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3743:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3725:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3725:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3796:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3807:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3812:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3641:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3660:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3671:4:8",
														"type": ""
													}
												],
												"src": "3551:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3935:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3947:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3958:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3943:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3935:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3977:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4002:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3995:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3995:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3988:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3970:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3894:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3916:4:8",
														"type": ""
													}
												],
												"src": "3830:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4137:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4147:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4159:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4155:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4147:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4189:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4204:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4220:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4225:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4216:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4216:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4229:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4212:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4212:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4182:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4106:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4117:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4128:4:8",
														"type": ""
													}
												],
												"src": "4022:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4418:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4428:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4428:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4469:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4480:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4485:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4519:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4504:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4524:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4497:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4497:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4595:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4568:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4613:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4625:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4636:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4613:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4395:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4409:4:8",
														"type": ""
													}
												],
												"src": "4244:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4825:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4865:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20436c61696d206973206e6f74206f70656e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4931:34:8",
																		"type": "",
																		"value": "ABOAT::claim: Claim is not open "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4997:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4982:18:8"
																	},
																	{
																		"hexValue": "79657421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5002:6:8",
																		"type": "",
																		"value": "yet!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5018:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5030:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5041:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5018:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cfa6bb7f699bf0b54e2028bc433131deb9fd37eb35ddb2c040e70796ddb61b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4802:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4816:4:8",
														"type": ""
													}
												],
												"src": "4651:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5230:242:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5247:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5240:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5240:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5297:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5320:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5336:34:8",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5402:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5387:18:8"
																	},
																	{
																		"hexValue": "20455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5407:22:8",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5380:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5439:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5451:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5462:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5439:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5207:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5221:4:8",
														"type": ""
													}
												],
												"src": "5056:416:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5651:250:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5668:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5661:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5713:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5698:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5718:2:8",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5691:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5752:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5757:34:8",
																		"type": "",
																		"value": "ABOAT::claim: Already claimed yo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5730:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5730:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5730:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5812:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5823:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5808:18:8"
																	},
																	{
																		"hexValue": "75722063757272656e746c7920656c696769626c6520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5828:30:8",
																		"type": "",
																		"value": "ur currently eligible tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5801:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5801:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5868:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5891:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5868:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5628:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5642:4:8",
														"type": ""
													}
												],
												"src": "5477:424:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6080:302:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6097:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6108:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6090:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6131:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6142:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6147:2:8",
																		"type": "",
																		"value": "72"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6120:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6166:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a77686974656c6973743a20596f752063616e27742061646420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6186:34:8",
																		"type": "",
																		"value": "ABOAT::whitelist: You can't add "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6159:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6159:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6241:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6252:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6237:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6237:18:8"
																	},
																	{
																		"hexValue": "6d6f7265207468616e2031303020616464726573736573206174207468652073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6257:34:8",
																		"type": "",
																		"value": "more than 100 addresses at the s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6230:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6230:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6312:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6323:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6308:19:8"
																	},
																	{
																		"hexValue": "616d652074696d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6329:10:8",
																		"type": "",
																		"value": "ame time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6301:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6349:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6361:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6372:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6357:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6349:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6057:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6071:4:8",
														"type": ""
													}
												],
												"src": "5906:476:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6561:300:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6571:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6623:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:8",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6651:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6662:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6647:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6647:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6667:34:8",
																		"type": "",
																		"value": "ABOAT::updateRewardToken: New re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6640:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6722:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6733:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6718:18:8"
																	},
																	{
																		"hexValue": "776172642073686f756c6420626520646966666572656e742066726f6d206375",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6738:34:8",
																		"type": "",
																		"value": "ward should be different from cu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6711:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6711:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6804:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:19:8"
																	},
																	{
																		"hexValue": "7272656e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6810:8:8",
																		"type": "",
																		"value": "rrent."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:37:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6828:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6840:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6851:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6836:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6828:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6538:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6552:4:8",
														"type": ""
													}
												],
												"src": "6387:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7040:323:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7057:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7068:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7087:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7107:2:8",
																		"type": "",
																		"value": "93"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7130:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7141:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7126:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7126:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7146:34:8",
																		"type": "",
																		"value": "ABOAT::claim: The percentage of "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7119:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7119:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7212:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:18:8"
																	},
																	{
																		"hexValue": "746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7217:34:8",
																		"type": "",
																		"value": "token you can claim is currently"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7272:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7283:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7268:19:8"
																	},
																	{
																		"hexValue": "207a65726f2e20506c656173652074727920616761696e206c61746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7289:31:8",
																		"type": "",
																		"value": " zero. Please try again later"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7261:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7330:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7342:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7353:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7330:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7017:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7031:4:8",
														"type": ""
													}
												],
												"src": "6866:497:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7542:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7559:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7570:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7552:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7593:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7604:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7582:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7582:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7582:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7643:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:18:8"
																	},
																	{
																		"hexValue": "436c61696d20697320616c7265616479206f70656e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7648:25:8",
																		"type": "",
																		"value": "Claim is already opened"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7621:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7621:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7683:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7695:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7691:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7683:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95cc7d1782db5a79158bd18cfdf2b7fa2f1c2ac2e9205229b2bb4779d3aa903b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7519:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7533:4:8",
														"type": ""
													}
												],
												"src": "7368:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7894:390:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7911:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7922:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7904:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7904:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7945:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7941:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7961:3:8",
																		"type": "",
																		"value": "119"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7934:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7934:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7985:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7996:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7981:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7981:18:8"
																	},
																	{
																		"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8001:34:8",
																		"type": "",
																		"value": "ABOAT::updateRewardToken: The co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7974:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7974:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7974:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8056:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8067:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8052:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8052:18:8"
																	},
																	{
																		"hexValue": "6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8072:34:8",
																		"type": "",
																		"value": "ntract should contain atleast th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8045:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8045:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8127:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8138:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:19:8"
																	},
																	{
																		"hexValue": "652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8144:34:8",
																		"type": "",
																		"value": "e same amount of tokens as from "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:63:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8199:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8210:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8195:19:8"
																	},
																	{
																		"hexValue": "7468652063757272656e7420726577617264546f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8216:25:8",
																		"type": "",
																		"value": "the current rewardToken"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8188:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8251:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8263:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8274:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8259:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8251:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7871:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7885:4:8",
														"type": ""
													}
												],
												"src": "7720:564:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8463:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8480:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8491:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8473:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8525:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8510:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8530:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8503:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8503:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8503:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8553:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8564:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8549:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8569:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8542:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8542:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8613:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8625:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8636:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8621:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8613:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8440:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8454:4:8",
														"type": ""
													}
												],
												"src": "8289:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8824:235:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8841:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8834:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8834:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8834:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8886:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8871:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8891:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8914:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8925:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8910:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8930:34:8",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8903:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8985:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8996:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8981:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8981:18:8"
																	},
																	{
																		"hexValue": "616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9001:15:8",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8974:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9026:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9038:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9049:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9034:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9026:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8801:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8815:4:8",
														"type": ""
													}
												],
												"src": "8650:409:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9165:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9175:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9187:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9217:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9228:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9210:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9210:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9210:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9134:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9145:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9156:4:8",
														"type": ""
													}
												],
												"src": "9064:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9291:230:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9301:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9317:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9311:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9301:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9329:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9351:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "9367:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9373:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9363:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9363:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9382:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9378:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9378:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9359:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9333:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9462:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9464:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9464:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9464:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9405:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9417:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9402:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9402:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9441:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9453:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9438:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9438:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9399:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:62:8"
															},
															"nodeType": "YulIf",
															"src": "9396:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9500:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9504:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9493:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9493:22:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9271:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9280:6:8",
														"type": ""
													}
												],
												"src": "9246:275:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9595:114:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9639:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9641:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9641:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9641:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9611:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9619:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9608:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9608:30:8"
															},
															"nodeType": "YulIf",
															"src": "9605:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9670:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9686:1:8",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9689:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9682:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9682:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9698:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9678:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:25:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9670:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9575:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9586:4:8",
														"type": ""
													}
												],
												"src": "9526:183:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9762:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9789:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9791:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9791:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9791:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9778:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9785:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9781:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9781:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9775:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9775:13:8"
															},
															"nodeType": "YulIf",
															"src": "9772:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9820:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9831:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9834:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9745:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9748:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9754:3:8",
														"type": ""
													}
												],
												"src": "9714:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9893:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9924:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9945:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9952:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9957:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9948:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9948:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9938:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9938:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9938:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9989:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9992:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9982:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9982:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9982:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10017:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10020:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10010:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10010:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10010:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9913:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:9:8"
															},
															"nodeType": "YulIf",
															"src": "9903:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10044:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10053:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10056:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10044:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9878:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9881:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9887:1:8",
														"type": ""
													}
												],
												"src": "9847:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10121:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10180:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10182:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10182:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10182:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10152:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10145:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10145:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10138:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10138:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10160:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10171:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10167:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10167:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10175:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10163:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10163:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10157:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10157:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10134:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:45:8"
															},
															"nodeType": "YulIf",
															"src": "10131:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10211:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10226:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10229:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10222:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10222:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10211:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10100:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10103:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10109:7:8",
														"type": ""
													}
												],
												"src": "10069:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10291:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10313:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10315:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10315:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10315:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10307:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10310:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10304:8:8"
															},
															"nodeType": "YulIf",
															"src": "10301:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10344:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10356:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10359:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10352:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10352:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10344:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10273:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10276:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10282:4:8",
														"type": ""
													}
												],
												"src": "10242:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10419:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10450:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10452:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10452:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10452:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10435:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10446:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10442:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10432:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:17:8"
															},
															"nodeType": "YulIf",
															"src": "10429:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10481:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10492:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10401:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10411:3:8",
														"type": ""
													}
												],
												"src": "10372:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10544:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10561:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10568:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10573:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10564:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10554:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10554:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10554:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10601:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10604:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10594:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10594:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10594:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10625:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10628:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10618:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10618:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10512:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10676:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10693:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10700:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10705:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10696:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10686:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10686:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10686:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10733:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10726:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10726:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10757:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10760:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10750:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10750:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10644:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10808:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10825:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10832:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10837:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10828:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10828:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10818:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10865:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10868:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10858:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10858:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10889:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10892:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10882:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10776:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10953:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11017:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11026:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11029:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11019:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11019:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11019:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10987:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11002:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11007:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "10998:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10998:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11011:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "10994:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10994:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10983:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10983:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10973:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10973:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10966:50:8"
															},
															"nodeType": "YulIf",
															"src": "10963:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10942:5:8",
														"type": ""
													}
												],
												"src": "10908:131:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$181(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2cfa6bb7f699bf0b54e2028bc433131deb9fd37eb35ddb2c040e70796ddb61b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ABOAT::claim: Claim is not open \")\n        mstore(add(headStart, 96), \"yet!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransferETH:\")\n        mstore(add(headStart, 96), \" ETH transfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"ABOAT::claim: Already claimed yo\")\n        mstore(add(headStart, 96), \"ur currently eligible tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"ABOAT::whitelist: You can't add \")\n        mstore(add(headStart, 96), \"more than 100 addresses at the s\")\n        mstore(add(headStart, 128), \"ame time\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"ABOAT::updateRewardToken: New re\")\n        mstore(add(headStart, 96), \"ward should be different from cu\")\n        mstore(add(headStart, 128), \"rrent.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 93)\n        mstore(add(headStart, 64), \"ABOAT::claim: The percentage of \")\n        mstore(add(headStart, 96), \"token you can claim is currently\")\n        mstore(add(headStart, 128), \" zero. Please try again later\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_95cc7d1782db5a79158bd18cfdf2b7fa2f1c2ac2e9205229b2bb4779d3aa903b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Claim is already opened\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 119)\n        mstore(add(headStart, 64), \"ABOAT::updateRewardToken: The co\")\n        mstore(add(headStart, 96), \"ntract should contain atleast th\")\n        mstore(add(headStart, 128), \"e same amount of tokens as from \")\n        mstore(add(headStart, 160), \"the current rewardToken\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80639c92431b116100ad578063ef78d4fd11610071578063ef78d4fd14610246578063f2fde38b1461024e578063f3739e0514610261578063f7c618c11461028a578063f8cf31cb1461029d57600080fd5b80639c92431b146101ec578063a5ebf835146101f4578063a960c65f146101fc578063c884ef831461021c578063ec18c9871461023c57600080fd5b80635372a58e116100f45780635372a58e1461016f578063667022fd14610182578063715018a6146101a2578063856734c4146101aa5780638da5cb5b146101c757600080fd5b8063151bad0a14610131578063293cdbf11461014c5780632f661946146101565780634b8bcb581461015e5780634e71d92d14610167575b600080fd5b61013960c881565b6040519081526020015b60405180910390f35b6101546102b0565b005b610139600081565b61013960025481565b610154610364565b61015461017d366004610f91565b610631565b610139610190366004610f74565b60046020526000908152604090205481565b610154610857565b6003546101b79060ff1681565b6040519015158152602001610143565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610143565b61013961088d565b610139606481565b61013961020a366004610f74565b60066020526000908152604090205481565b61013961022a366004610f74565b60056020526000908152604090205481565b6101396201518081565b610139601e81565b61015461025c366004610f74565b610918565b6101d461026f366004610f74565b6007602052600090815260409020546001600160a01b031681565b6001546101d4906001600160a01b031681565b6101546102ab366004610f74565b6109b3565b6000546001600160a01b031633146102e35760405162461bcd60e51b81526004016102da906110d0565b60405180910390fd5b600254156103335760405162461bcd60e51b815260206004820152601760248201527f436c61696d20697320616c7265616479206f70656e656400000000000000000060448201526064016102da565b4260028190556040517f7d425ef8bc8f854f0bddfa263a1a52ae42adbddd9c9c95ad3f21b1e2d311c4ca90600090a2565b6002546103bf5760405162461bcd60e51b8152602060048201526024808201527f41424f41543a3a636c61696d3a20436c61696d206973206e6f74206f70656e206044820152637965742160e01b60648201526084016102da565b60006103c961088d565b9050600081116104675760405162461bcd60e51b815260206004820152605d60248201527f41424f41543a3a636c61696d3a205468652070657263656e74616765206f662060448201527f746f6b656e20796f752063616e20636c61696d2069732063757272656e746c7960648201527f207a65726f2e20506c656173652074727920616761696e206c61746572000000608482015260a4016102da565b600154336000908152600760205260409020546001600160a01b039081169116146104d25760015433600090815260076020908152604080832080546001600160a01b0319166001600160a01b03909516949094179093556005815282822082905560069052908120555b3360009081526005602052604090205481116105565760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f60448201527f75722063757272656e746c7920656c696769626c6520746f6b656e730000000060648201526084016102da565b3360009081526005602052604081208054908390559061059b6103e861059561057f8686610c6b565b3360009081526004602052604090205490610c7e565b90610c8a565b336000908152600660205260409020549091506105b89082610c96565b336000908152600660205260409020556001546001600160a01b0316156105f5576001546105f0906001600160a01b03163383610ca2565b6105ff565b6105ff3382610dd3565b604051819033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90600090a3505050565b6000546001600160a01b0316331461065b5760405162461bcd60e51b81526004016102da906110d0565b6064825111156106e45760405162461bcd60e51b815260206004820152604860248201527f41424f41543a3a77686974656c6973743a20596f752063616e2774206164642060448201527f6d6f7265207468616e2031303020616464726573736573206174207468652073606482015267616d652074696d6560c01b608482015260a4016102da565b60005b82518110156108275761075a828281518110610705576107056111fb565b602002602001015160046000868581518110610723576107236111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054610c9690919063ffffffff16565b60046000858481518110610770576107706111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550600160009054906101000a90046001600160a01b0316600760008584815181106107c8576107c86111fb565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808061081f906111ca565b9150506106e7565b5081516040517f6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd590600090a25050565b6000546001600160a01b031633146108815760405162461bcd60e51b81526004016102da906110d0565b61088b6000610eb2565b565b6000806108a66000600254610c9690919063ffffffff16565b905060008190506000806002541180156108bf57508142115b6108ca5760646108fb565b6108fb60646108f560c86108ef6108e562015180601e611194565b6105954289610c6b565b90610c7e565b90610c96565b90506103e8811161090c5780610910565b6103e85b935050505090565b6000546001600160a01b031633146109425760405162461bcd60e51b81526004016102da906110d0565b6001600160a01b0381166109a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b6109b081610eb2565b50565b6000546001600160a01b031633146109dd5760405162461bcd60e51b81526004016102da906110d0565b6001546001600160a01b0382811691161415610a705760405162461bcd60e51b815260206004820152604660248201527f41424f41543a3a757064617465526577617264546f6b656e3a204e657720726560448201527f776172642073686f756c6420626520646966666572656e742066726f6d206375606482015265393932b73a1760d11b608482015260a4016102da565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb919061107c565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610b2a57600080fd5b505afa158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b62919061107c565b14610c215760405162461bcd60e51b815260206004820152607760248201527f41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f60448201527f6e74726163742073686f756c6420636f6e7461696e2061746c6561737420746860648201527f652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d2060848201527f7468652063757272656e7420726577617264546f6b656e00000000000000000060a482015260c4016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f8390600090a250565b6000610c7782846111b3565b9392505050565b6000610c778284611194565b6000610c778284611172565b6000610c77828461115a565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610cfe9190611095565b6000604051808303816000865af19150503d8060008114610d3b576040519150601f19603f3d011682016040523d82523d6000602084013e610d40565b606091505b5091509150818015610d6a575080511580610d6a575080806020019051810190610d6a919061105a565b610dcc5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016102da565b5050505050565b604080516000808252602082019092526001600160a01b038416908390604051610dfd9190611095565b60006040518083038185875af1925050503d8060008114610e3a576040519150601f19603f3d011682016040523d82523d6000602084013e610e3f565b606091505b5050905080610ead5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016102da565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610f1357600080fd5b81356020610f28610f2383611136565b611105565b80838252828201915082860187848660051b8901011115610f4857600080fd5b60005b85811015610f6757813584529284019290840190600101610f4b565b5090979650505050505050565b600060208284031215610f8657600080fd5b8135610c7781611227565b60008060408385031215610fa457600080fd5b823567ffffffffffffffff80821115610fbc57600080fd5b818501915085601f830112610fd057600080fd5b81356020610fe0610f2383611136565b8083825282820191508286018a848660051b890101111561100057600080fd5b600096505b8487101561102c57803561101881611227565b835260019690960195918301918301611005565b509650508601359250508082111561104357600080fd5b5061105085828601610f02565b9150509250929050565b60006020828403121561106c57600080fd5b81518015158114610c7757600080fd5b60006020828403121561108e57600080fd5b5051919050565b6000825160005b818110156110b6576020818601810151858301520161109c565b818111156110c5576000828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561112e5761112e611211565b604052919050565b600067ffffffffffffffff82111561115057611150611211565b5060051b60200190565b6000821982111561116d5761116d6111e5565b500190565b60008261118f57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156111ae576111ae6111e5565b500290565b6000828210156111c5576111c56111e5565b500390565b60006000198214156111de576111de6111e5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109b057600080fdfea26469706673582212202ffbe92f2acbb764df3a54ea87459123c6729cc54406eacd6262891f059a7b8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C92431B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEF78D4FD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF3739E05 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9C92431B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xA5EBF835 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xA960C65F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xEC18C987 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5372A58E GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5372A58E EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x667022FD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x856734C4 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x151BAD0A EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x293CDBF1 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2F661946 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x4B8BCB58 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x364 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x139 PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x1E DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD ISZERO PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20697320616C7265616479206F70656E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7D425EF8BC8F854F0BDDFA263A1A52AE42ADBDDD9C9C95AD3F21B1E2D311C4CA SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20436C61696D206973206E6F74206F70656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x79657421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C9 PUSH2 0x88D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x207A65726F2E20506C656173652074727920616761696E206C61746572000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4D2 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x6 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75722063757272656E746C7920656C696769626C6520746F6B656E7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 PUSH2 0x59B PUSH2 0x3E8 PUSH2 0x595 PUSH2 0x57F DUP7 DUP7 PUSH2 0xC6B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP1 PUSH2 0xC8A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x5B8 SWAP1 DUP3 PUSH2 0xC96 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x1 SLOAD PUSH2 0x5F0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x5FF CALLER DUP3 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x64 DUP3 MLOAD GT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A77686974656C6973743A20596F752063616E27742061646420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E2031303020616464726573736573206174207468652073 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x616D652074696D65 PUSH1 0xC0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x827 JUMPI PUSH2 0x75A DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH2 0x705 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x723 JUMPI PUSH2 0x723 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH2 0x770 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x81F SWAP1 PUSH2 0x11CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6E7 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x88B PUSH1 0x0 PUSH2 0xEB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A6 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH2 0xC96 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD GT DUP1 ISZERO PUSH2 0x8BF JUMPI POP DUP2 TIMESTAMP GT JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x64 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x8FB PUSH1 0x64 PUSH2 0x8F5 PUSH1 0xC8 PUSH2 0x8EF PUSH2 0x8E5 PUSH3 0x15180 PUSH1 0x1E PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x595 TIMESTAMP DUP10 PUSH2 0xC6B JUMP JUMPDEST SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT PUSH2 0x90C JUMPI DUP1 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x9B0 DUP2 PUSH2 0xEB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776172642073686F756C6420626520646966666572656E742066726F6D206375 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x393932B73A17 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x107C JUMP JUMPDEST EQ PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x7468652063757272656E7420726577617264546F6B656E000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x11B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 DUP3 DUP5 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xD6A JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xD6A JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF28 PUSH2 0xF23 DUP4 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x1105 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF67 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF4B JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC77 DUP2 PUSH2 0x1227 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFE0 PUSH2 0xF23 DUP4 PUSH2 0x1136 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP11 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x102C JUMPI DUP1 CALLDATALOAD PUSH2 0x1018 DUP2 PUSH2 0x1227 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1005 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xF02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x109C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x112E JUMPI PUSH2 0x112E PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1150 JUMPI PUSH2 0x1150 PUSH2 0x1211 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x116D JUMPI PUSH2 0x116D PUSH2 0x11E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11AE JUMPI PUSH2 0x11AE PUSH2 0x11E5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11C5 PUSH2 0x11E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x11E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xFB 0xE9 0x2F 0x2A 0xCB 0xB7 PUSH5 0xDF3A54EA87 GASLIMIT SWAP2 0x23 0xC6 PUSH19 0x9CC54406EACD6262891F059A7B8364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "388:6741:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1125:49;;1171:3;1125:49;;;;;9210:25:8;;;9198:2;9183:18;1125:49:6;;;;;;;;3093:185;;;:::i;:::-;;1258:39;;1296:1;1258:39;;883:28;;;;;;5888:1239;;;:::i;4085:511::-;;;;;;:::i;:::-;;:::i;1551:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1605:92:0;;;:::i;1437:35:6:-;;;;;;;;;;;;3995:14:8;;3988:22;3970:41;;3958:2;3943:18;1437:35:6;3830:187:8;973:85:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;;-1:-1:-1;;;;;3507:32:8;;;3489:51;;3477:2;3462:18;973:85:0;3343:203:8;4925:497:6;;;:::i;998:52::-;;1047:3;998:52;;1743:48;;;;;;:::i;:::-;;;;;;;;;;;;;;1640:42;;;;;;:::i;:::-;;;;;;;;;;;;;;1379:47;;1420:6;1379:47;;917:35;;950:2;917:35;;1846:189:0;;;;;;:::i;:::-;;:::i;1839:51:6:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1839:51:6;;;838:25;;;;;-1:-1:-1;;;;;838:25:6;;;3561:513;;;;;;:::i;:::-;;:::i;3093:185::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;3149:9:6::1;::::0;:14;3141:50:::1;;;::::0;-1:-1:-1;;;3141:50:6;;7570:2:8;3141:50:6::1;::::0;::::1;7552:21:8::0;7609:2;7589:18;;;7582:30;7648:25;7628:18;;;7621:53;7691:18;;3141:50:6::1;7368:347:8::0;3141:50:6::1;3213:15;3201:9;:27:::0;;;3243:28:::1;::::0;::::1;::::0;;;::::1;3093:185::o:0;5888:1239::-;5930:9;;5922:63;;;;-1:-1:-1;;;5922:63:6;;4853:2:8;5922:63:6;;;4835:21:8;4892:2;4872:18;;;4865:30;4931:34;4911:18;;;4904:62;-1:-1:-1;;;4982:18:8;;;4975:34;5026:19;;5922:63:6;4651:400:8;5922:63:6;5995:25;6023:22;:20;:22::i;:::-;5995:50;;6083:1;6063:17;:21;6055:127;;;;-1:-1:-1;;;6055:127:6;;7068:2:8;6055:127:6;;;7050:21:8;7107:2;7087:18;;;7080:30;7146:34;7126:18;;;7119:62;7217:34;7197:18;;;7190:62;7289:31;7268:19;;;7261:60;7338:19;;6055:127:6;6866:497:8;6055:127:6;6235:11;;6212:10;6235:11;6195:28;;;:16;:28;;;;;;-1:-1:-1;;;;;6195:28:6;;;6235:11;;6195:52;6192:213;;6302:11;;6280:10;6302:11;6263:28;;;:16;:28;;;;;;;;:51;;-1:-1:-1;;;;;;6263:51:6;-1:-1:-1;;;;;6302:11:6;;;6263:51;;;;;;;6328:7;:19;;;;;:23;;;6365:13;:25;;;;;:29;6192:213;6430:10;6422:19;;;;:7;:19;;;;;;:39;-1:-1:-1;6414:112:6;;;;-1:-1:-1;;;6414:112:6;;5679:2:8;6414:112:6;;;5661:21:8;5718:2;5698:18;;;5691:30;5757:34;5737:18;;;5730:62;5828:30;5808:18;;;5801:58;5876:19;;6414:112:6;5477:424:8;6414:112:6;6576:10;6541:24;6568:19;;;:7;:19;;;;;;;6601:39;;;;6568:19;6671:73;6739:4;6671:63;6694:39;6623:17;6568:19;6694:21;:39::i;:::-;6678:10;6671:18;;;;:6;:18;;;;;;;:22;:63::i;:::-;:67;;:73::i;:::-;6800:10;6786:25;;;;:13;:25;;;;;;6654:90;;-1:-1:-1;6786:37:6;;6654:90;6786:29;:37::i;:::-;6772:10;6758:25;;;;:13;:25;;;;;:65;6848:11;;-1:-1:-1;;;;;6848:11:6;6840:34;6837:230;;6930:11;;6894:69;;-1:-1:-1;;;;;6930:11:6;6944:10;6956:6;6894:27;:69::i;:::-;6837:230;;;7002:50;7033:10;7045:6;7002:30;:50::i;:::-;7085:27;;7105:6;;7093:10;;7085:27;;;;;5912:1215;;;5888:1239::o;4085:511::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4221:3:6::1;4201:9;:16;:23;;4193:108;;;::::0;-1:-1:-1;;;4193:108:6;;6108:2:8;4193:108:6::1;::::0;::::1;6090:21:8::0;6147:2;6127:18;;;6120:30;6186:34;6166:18;;;6159:62;6257:34;6237:18;;;6230:62;-1:-1:-1;;;6308:19:8;;;6301:39;6357:19;;4193:108:6::1;5906:476:8::0;4193:108:6::1;4315:10;4311:222;4339:9;:16;4331:5;:24;4311:222;;;4407:44;4436:7;4444:5;4436:14;;;;;;;;:::i;:::-;;;;;;;4407:6;:24;4414:9;4424:5;4414:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4407:24:6::1;-1:-1:-1::0;;;;;4407:24:6::1;;;;;;;;;;;;;:28;;:44;;;;:::i;:::-;4380:6;:24;4387:9;4397:5;4387:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4380:24:6::1;-1:-1:-1::0;;;;;4380:24:6::1;;;;;;;;;;;;:71;;;;4510:11;;;;;;;;;-1:-1:-1::0;;;;;4510:11:6::1;4465:16;:34;4482:9;4492:5;4482:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;4465:34:6::1;-1:-1:-1::0;;;;;4465:34:6::1;;;;;;;;;;;;;:57;;;;;-1:-1:-1::0;;;;;4465:57:6::1;;;;;-1:-1:-1::0;;;;;4465:57:6::1;;;;;;4357:7;;;;;:::i;:::-;;;;4311:222;;;-1:-1:-1::0;4572:16:6;;4547:42:::1;::::0;::::1;::::0;;;::::1;4085:511:::0;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;4925:497:6:-;4978:7;4997:18;5018:26;1296:1;5018:9;;:13;;:26;;;;:::i;:::-;4997:47;;5054:19;5076:10;5054:32;;5096:18;5129:1;5117:9;;:13;:46;;;;;5152:11;5134:15;:29;5117:46;:244;;1047:3;5117:244;;;5174:153;1047:3;5174:112;1171:3;5174:74;5224:23;1420:6;950:2;5224:23;:::i;:::-;5174:32;:15;5194:11;5174:19;:32::i;:74::-;:91;;:112::i;:::-;:129;;:153::i;:::-;5096:265;;5391:4;5378:10;:17;:37;;5405:10;5378:37;;;5398:4;5378:37;5371:44;;;;;4925:497;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;4446:2:8;1926:73:0::1;::::0;::::1;4428:21:8::0;4485:2;4465:18;;;4458:30;4524:34;4504:18;;;4497:62;-1:-1:-1;;;4575:18:8;;;4568:36;4621:19;;1926:73:0::1;4244:402:8::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3561:513:6:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3666:11:6::1;::::0;-1:-1:-1;;;;;3647:30:6;;::::1;3666:11:::0;::::1;3647:30;;3639:113;;;::::0;-1:-1:-1;;;3639:113:6;;6589:2:8;3639:113:6::1;::::0;::::1;6571:21:8::0;6628:2;6608:18;;;6601:30;6667:34;6647:18;;;6640:62;6738:34;6718:18;;;6711:62;-1:-1:-1;;;6789:19:8;;;6782:37;6836:19;;3639:113:6::1;6387:474:8::0;3639:113:6::1;3814:11;::::0;:36:::1;::::0;-1:-1:-1;;;3814:36:6;;3844:4:::1;3814:36;::::0;::::1;3489:51:8::0;-1:-1:-1;;;;;3814:11:6;;::::1;::::0;:21:::1;::::0;3462:18:8;;3814:36:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:40;::::0;-1:-1:-1;;;3770:40:6;;3804:4:::1;3770:40;::::0;::::1;3489:51:8::0;-1:-1:-1;;;;;3770:25:6;::::1;::::0;::::1;::::0;3462:18:8;;3770:40:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:80;3762:212;;;::::0;-1:-1:-1;;;3762:212:6;;7922:2:8;3762:212:6::1;::::0;::::1;7904:21:8::0;7961:3;7941:18;;;7934:31;8001:34;7981:18;;;7974:62;8072:34;8052:18;;;8045:62;8144:34;8123:19;;;8116:63;8216:25;8195:19;;;8188:54;8259:19;;3762:212:6::1;7720:564:8::0;3762:212:6::1;3984:11;:29:::0;;-1:-1:-1;;;;;;3984:29:6::1;-1:-1:-1::0;;;;;3984:29:6;::::1;::::0;;::::1;::::0;;;4028:39:::1;::::0;::::1;::::0;-1:-1:-1;;4028:39:6::1;3561:513:::0;:::o;3039:96:5:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:5:o;3382:::-;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;210:384:7:-;382:45;;;-1:-1:-1;;;;;3743:32:8;;;382:45:7;;;3725:51:8;3792:18;;;;3785:34;;;382:45:7;;;;;;;;;;3698:18:8;;;;382:45:7;;;;;;;-1:-1:-1;;;;;382:45:7;-1:-1:-1;;;382:45:7;;;371:57;;-1:-1:-1;;;;371:10:7;;;;:57;;382:45;371:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:105;;;;459:7;:57;;;;-1:-1:-1;471:11:7;;:16;;:44;;;502:4;491:24;;;;;;;;;;;;:::i;:::-;438:149;;;;-1:-1:-1;;;438:149:7;;8852:2:8;438:149:7;;;8834:21:8;8891:2;8871:18;;;8864:30;8930:34;8910:18;;;8903:62;-1:-1:-1;;;8981:18:8;;;8974:43;9034:19;;438:149:7;8650:409:8;438:149:7;313:281;;210:384;;;:::o;1026:248::-;1138:12;;;1098;1138;;;;;;;;;-1:-1:-1;;;;;1116:7:7;;;1131:5;;1116:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:54;;;1182:7;1161:106;;;;-1:-1:-1;;;1161:106:7;;5258:2:8;1161:106:7;;;5240:21:8;5297:2;5277:18;;;5270:30;5336:34;5316:18;;;5309:62;-1:-1:-1;;;5387:18:8;;;5380:50;5447:19;;1161:106:7;5056:416:8;1161:106:7;1087:187;1026:248;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:673:8:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:163;509:2;506:1;503:9;495:163;;;566:17;;554:30;;604:12;;;;636;;;;527:1;520:9;495:163;;;-1:-1:-1;676:5:8;;14:673;-1:-1:-1;;;;;;;14:673:8:o;692:247::-;751:6;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;859:9;846:23;878:31;903:5;878:31;:::i;944:1226::-;1062:6;1070;1123:2;1111:9;1102:7;1098:23;1094:32;1091:52;;;1139:1;1136;1129:12;1091:52;1179:9;1166:23;1208:18;1249:2;1241:6;1238:14;1235:34;;;1265:1;1262;1255:12;1235:34;1303:6;1292:9;1288:22;1278:32;;1348:7;1341:4;1337:2;1333:13;1329:27;1319:55;;1370:1;1367;1360:12;1319:55;1406:2;1393:16;1428:4;1452:60;1468:43;1508:2;1468:43;:::i;1452:60::-;1534:3;1558:2;1553:3;1546:15;1586:2;1581:3;1577:12;1570:19;;1617:2;1613;1609:11;1665:7;1660:2;1654;1651:1;1647:10;1643:2;1639:19;1635:28;1632:41;1629:61;;;1686:1;1683;1676:12;1629:61;1708:1;1699:10;;1718:238;1732:2;1729:1;1726:9;1718:238;;;1803:3;1790:17;1820:31;1845:5;1820:31;:::i;:::-;1864:18;;1750:1;1743:9;;;;;1902:12;;;;1934;;1718:238;;;-1:-1:-1;1975:5:8;-1:-1:-1;;2018:18:8;;2005:32;;-1:-1:-1;;2049:16:8;;;2046:36;;;2078:1;2075;2068:12;2046:36;;2101:63;2156:7;2145:8;2134:9;2130:24;2101:63;:::i;:::-;2091:73;;;944:1226;;;;;:::o;2175:277::-;2242:6;2295:2;2283:9;2274:7;2270:23;2266:32;2263:52;;;2311:1;2308;2301:12;2263:52;2343:9;2337:16;2396:5;2389:13;2382:21;2375:5;2372:32;2362:60;;2418:1;2415;2408:12;2723:184;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;-1:-1:-1;2885:16:8;;2723:184;-1:-1:-1;2723:184:8:o;2912:426::-;3041:3;3079:6;3073:13;3104:1;3114:129;3128:6;3125:1;3122:13;3114:129;;;3226:4;3210:14;;;3206:25;;3200:32;3187:11;;;3180:53;3143:12;3114:129;;;3261:6;3258:1;3255:13;3252:48;;;3296:1;3287:6;3282:3;3278:16;3271:27;3252:48;-1:-1:-1;3316:16:8;;;;;2912:426;-1:-1:-1;;2912:426:8:o;8289:356::-;8491:2;8473:21;;;8510:18;;;8503:30;8569:34;8564:2;8549:18;;8542:62;8636:2;8621:18;;8289:356::o;9246:275::-;9317:2;9311:9;9382:2;9363:13;;-1:-1:-1;;9359:27:8;9347:40;;9417:18;9402:34;;9438:22;;;9399:62;9396:88;;;9464:18;;:::i;:::-;9500:2;9493:22;9246:275;;-1:-1:-1;9246:275:8:o;9526:183::-;9586:4;9619:18;9611:6;9608:30;9605:56;;;9641:18;;:::i;:::-;-1:-1:-1;9686:1:8;9682:14;9698:4;9678:25;;9526:183::o;9714:128::-;9754:3;9785:1;9781:6;9778:1;9775:13;9772:39;;;9791:18;;:::i;:::-;-1:-1:-1;9827:9:8;;9714:128::o;9847:217::-;9887:1;9913;9903:132;;9957:10;9952:3;9948:20;9945:1;9938:31;9992:4;9989:1;9982:15;10020:4;10017:1;10010:15;9903:132;-1:-1:-1;10049:9:8;;9847:217::o;10069:168::-;10109:7;10175:1;10171;10167:6;10163:14;10160:1;10157:21;10152:1;10145:9;10138:17;10134:45;10131:71;;;10182:18;;:::i;:::-;-1:-1:-1;10222:9:8;;10069:168::o;10242:125::-;10282:4;10310:1;10307;10304:8;10301:34;;;10315:18;;:::i;:::-;-1:-1:-1;10352:9:8;;10242:125::o;10372:135::-;10411:3;-1:-1:-1;;10432:17:8;;10429:43;;;10452:18;;:::i;:::-;-1:-1:-1;10499:1:8;10488:13;;10372:135::o;10512:127::-;10573:10;10568:3;10564:20;10561:1;10554:31;10604:4;10601:1;10594:15;10628:4;10625:1;10618:15;10644:127;10705:10;10700:3;10696:20;10693:1;10686:31;10736:4;10733:1;10726:15;10760:4;10757:1;10750:15;10776:127;10837:10;10832:3;10828:20;10825:1;10818:31;10868:4;10865:1;10858:15;10892:4;10889:1;10882:15;10908:131;-1:-1:-1;;;;;10983:31:8;;10973:42;;10963:70;;11029:1;11026;11019:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "944400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bought(address)": "2547",
								"claim()": "infinite",
								"claimOpen()": "2374",
								"claimed(address)": "2591",
								"claimedTokens(address)": "2569",
								"cliffPeriod()": "252",
								"getCurrentPercentage()": "infinite",
								"initialClaimPercentage()": "229",
								"lastClaimAddress(address)": "2618",
								"openClaim()": "27704",
								"owner()": "2431",
								"percentagePerPeriod()": "208",
								"period()": "206",
								"renounceOwnership()": "28181",
								"requireWhitelist()": "2399",
								"rewardToken()": "2425",
								"timeMultiplier()": "295",
								"transferOwnership(address)": "infinite",
								"updateRewardToken(address)": "infinite",
								"whitelistFromSAFT(address[],uint256[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 883,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 883,
									"end": 911,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1472,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1472,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2689,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2732,
									"end": 2743,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2758,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 98,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 130,
									"end": 137,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 126,
									"end": 149,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 122,
									"end": 154,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 119,
									"end": 171,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 119,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 119,
									"end": 171,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 238,
									"end": 269,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 238,
									"end": 269,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 228,
									"end": 270,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 228,
									"end": 270,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 218,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 284,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 274,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 218,
									"end": 288,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 14,
									"end": 318,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 7129,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ffbe92f2acbb764df3a54ea87459123c6729cc54406eacd6262891f059a7b8364736f6c63430008070033",
									".code": [
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "9C92431B"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "EF78D4FD"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "EF78D4FD"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "F3739E05"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "F8CF31CB"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "9C92431B"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "A5EBF835"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "A960C65F"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "C884EF83"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "EC18C987"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "5372A58E"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "5372A58E"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "667022FD"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "856734C4"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "151BAD0A"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "293CDBF1"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "2F661946"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "4B8BCB58"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 7129,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9210,
											"end": 9235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1174,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1258,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1297,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 883,
											"end": 911,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 883,
											"end": 911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 883,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 883,
											"end": 911,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 883,
											"end": 911,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 883,
											"end": 911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 883,
											"end": 911,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1592,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4009,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3988,
											"end": 4010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3958,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3830,
											"end": 4017,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3477,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3343,
											"end": 3546,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1050,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 998,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 998,
											"end": 1050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 998,
											"end": 1050,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1743,
											"end": 1791,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1379,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 1379,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 917,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 917,
											"end": 952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 838,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 838,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 838,
											"end": 863,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 838,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 838,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 838,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 838,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 838,
											"end": 863,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3163,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7570,
											"end": 7572,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7573,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7673,
											"name": "PUSH",
											"source": 8,
											"value": "436C61696D20697320616C7265616479206F70656E6564000000000000000000"
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7621,
											"end": 7674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7368,
											"end": 7715,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3228,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3201,
											"end": 3228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3228,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "7D425EF8BC8F854F0BDDFA263A1A52AE42ADBDDD9C9C95AD3F21B1E2D311C4CA"
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3271,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3278,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5939,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5930,
											"end": 5939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4965,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A636C61696D3A20436C61696D206973206E6F74206F70656E20"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79657421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 5009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4651,
											"end": 5051,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5922,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6023,
											"end": 6045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6023,
											"end": 6045,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6023,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6063,
											"end": 6084,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7071,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 8,
											"value": "5D"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7180,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620"
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7251,
											"name": "PUSH",
											"source": 8,
											"value": "746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79"
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7320,
											"name": "PUSH",
											"source": 8,
											"value": "207A65726F2E20506C656173652074727920616761696E206C61746572000000"
										},
										{
											"begin": 7268,
											"end": 7287,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7268,
											"end": 7287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7357,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 7338,
											"end": 7357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6866,
											"end": 7363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6055,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6211,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6223,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6247,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6192,
											"end": 6405,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6290,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6291,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6302,
											"end": 6313,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6314,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6335,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6351,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6390,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6394,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6405,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6192,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6440,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6429,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6422,
											"end": 6461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 8,
											"value": "3C"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5757,
											"end": 5791,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5858,
											"name": "PUSH",
											"source": 8,
											"value": "75722063757272656E746C7920656C696769626C6520746F6B656E7300000000"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5876,
											"end": 5895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5477,
											"end": 5901,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6414,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6576,
											"end": 6586,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6640,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6623,
											"end": 6640,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6694,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6688,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6671,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6671,
											"end": 6744,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6744,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6671,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6810,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6799,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6786,
											"end": 6823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6786,
											"end": 6823,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6786,
											"end": 6823,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6786,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6782,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6771,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6783,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6823,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6859,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6848,
											"end": 6859,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6848,
											"end": 6859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6874,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6894,
											"end": 6963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6944,
											"end": 6954,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6894,
											"end": 6963,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6894,
											"end": 6963,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6894,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6837,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7033,
											"end": 7043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7002,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7002,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 7127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 7127,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4224,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4217,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4224,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6110,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6127,
											"end": 6145,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6127,
											"end": 6145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6127,
											"end": 6145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6220,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A77686974656C6973743A20596F752063616E27742061646420"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6291,
											"name": "PUSH",
											"source": 8,
											"value": "6D6F7265207468616E2031303020616464726573736573206174207468652073"
										},
										{
											"begin": 6237,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6237,
											"end": 6255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6230,
											"end": 6292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616D652074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6327,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6308,
											"end": 6327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6340,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6357,
											"end": 6376,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 6357,
											"end": 6376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 5906,
											"end": 6382,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4193,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4331,
											"end": 4355,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4407,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4402,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4403,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4451,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4311,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5"
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4589,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4596,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1296,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5018,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5130,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5149,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5163,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5117,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5117,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5174,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 5174,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5224,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5174,
											"end": 5189,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5205,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5174,
											"end": 5206,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5248,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5174,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5174,
											"end": 5286,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5286,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5174,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5174,
											"end": 5327,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5174,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5378,
											"end": 5388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5415,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5402,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5415,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5371,
											"end": 5415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 5422,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4487,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4558,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4575,
											"end": 4593,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4575,
											"end": 4593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4244,
											"end": 4646,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3677,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6701,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265"
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6702,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6738,
											"end": 6772,
											"name": "PUSH",
											"source": 8,
											"value": "776172642073686F756C6420626520646966666572656E742066726F6D206375"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6773,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "393932B73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6855,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 6836,
											"end": 6855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6387,
											"end": 6861,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3639,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3814,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3770,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3850,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7922,
											"end": 7924,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7904,
											"end": 7925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8035,
											"name": "PUSH",
											"source": 8,
											"value": "41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F"
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7974,
											"end": 8036,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8106,
											"name": "PUSH",
											"source": 8,
											"value": "6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468"
										},
										{
											"begin": 8052,
											"end": 8070,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8052,
											"end": 8070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8052,
											"end": 8070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20"
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8179,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8241,
											"name": "PUSH",
											"source": 8,
											"value": "7468652063757272656E7420726577617264546F6B656E000000000000000000"
										},
										{
											"begin": 8195,
											"end": 8214,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 8195,
											"end": 8214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8195,
											"end": 8214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8278,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 8259,
											"end": 8278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7720,
											"end": 8284,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3762,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 3995,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83"
										},
										{
											"begin": 4028,
											"end": 4067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4067,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 4074,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3128,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3743,
											"end": 3775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3775,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3819,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 371,
											"end": 381,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 459,
											"end": 466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 459,
											"end": 516,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 459,
											"end": 516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 459,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 459,
											"end": 516,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 471,
											"end": 482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 471,
											"end": 487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 471,
											"end": 487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 471,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 471,
											"end": 515,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 471,
											"end": 515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 506,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 438,
											"end": 587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8834,
											"end": 8855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8891,
											"end": 8893,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8864,
											"end": 8894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8964,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8910,
											"end": 8928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8974,
											"end": 9017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8650,
											"end": 9059,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5299,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5309,
											"end": 5371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5430,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5466,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5447,
											"end": 5466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 5056,
											"end": 5472,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 687,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 14,
											"end": 687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 68,
											"end": 73,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 114,
											"end": 118,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 98,
											"end": 125,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 88,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 129,
											"end": 141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 88,
											"end": 143,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 175,
											"end": 181,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 162,
											"end": 182,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 281,
											"end": 283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 331,
											"end": 333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 319,
											"end": 334,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 359,
											"end": 361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 350,
											"end": 362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 343,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 394,
											"end": 396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 382,
											"end": 397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 446,
											"end": 449,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 435,
											"end": 437,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 438,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 416,
											"end": 439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 412,
											"end": 444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 409,
											"end": 450,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 406,
											"end": 467,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 453,
											"end": 465,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 509,
											"end": 511,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 503,
											"end": 512,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 495,
											"end": 658,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 495,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 566,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 566,
											"end": 583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 554,
											"end": 584,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 554,
											"end": 584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 604,
											"end": 616,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 604,
											"end": 616,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 604,
											"end": 616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 616,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 636,
											"end": 648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 636,
											"end": 648,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 636,
											"end": 648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 636,
											"end": 648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 527,
											"end": 528,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 495,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 495,
											"end": 658,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 495,
											"end": 658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 14,
											"end": 687,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 687,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 692,
											"end": 939,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 692,
											"end": 939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 751,
											"end": 757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 783,
											"end": 790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 779,
											"end": 802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 775,
											"end": 807,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 772,
											"end": 824,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 772,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 772,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 810,
											"end": 822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 772,
											"end": 824,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 772,
											"end": 824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 846,
											"end": 869,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 878,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 903,
											"end": 908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 878,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 878,
											"end": 909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1068,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1126,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1091,
											"end": 1143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1091,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1252,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1235,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1310,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1355,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1356,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1319,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1319,
											"end": 1374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1360,
											"end": 1372,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1319,
											"end": 1374,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1319,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1432,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1468,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1468,
											"end": 1511,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1452,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1609,
											"end": 1620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1672,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1645,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1673,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1690,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1629,
											"end": 1690,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1690,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1629,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1806,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1845,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1820,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1882,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1718,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2005,
											"end": 2037,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2005,
											"end": 2037,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2080,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2156,
											"end": 2163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2101,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2175,
											"end": 2452,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2175,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2274,
											"end": 2281,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2293,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2315,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2263,
											"end": 2315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2315,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2263,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2401,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2389,
											"end": 2402,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2403,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2362,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2362,
											"end": 2422,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2420,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2723,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2723,
											"end": 2907,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2912,
											"end": 3338,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2912,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3135,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3224,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3224,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3232,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3114,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3268,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3300,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3252,
											"end": 3300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3278,
											"end": 3294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3300,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3252,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3338,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 3338,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8289,
											"end": 8645,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8289,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8491,
											"end": 8493,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8494,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8494,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8569,
											"end": 8603,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8564,
											"end": 8566,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8621,
											"end": 8639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8645,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9246,
											"end": 9521,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9246,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9384,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9363,
											"end": 9376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9363,
											"end": 9376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9359,
											"end": 9386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9347,
											"end": 9387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9347,
											"end": 9387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9402,
											"end": 9436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9436,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9438,
											"end": 9460,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9399,
											"end": 9461,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9396,
											"end": 9484,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9396,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9396,
											"end": 9484,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9464,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9493,
											"end": 9515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9521,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9526,
											"end": 9709,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9526,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9611,
											"end": 9617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 9661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9605,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9605,
											"end": 9661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9698,
											"end": 9702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9678,
											"end": 9703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9709,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9714,
											"end": 9842,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 9714,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9754,
											"end": 9757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9786,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9775,
											"end": 9788,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9811,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9772,
											"end": 9811,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9842,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9847,
											"end": 10064,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 9847,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 9914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9903,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9903,
											"end": 10035,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9957,
											"end": 9967,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9952,
											"end": 9955,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9945,
											"end": 9946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9938,
											"end": 9969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9992,
											"end": 9996,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9989,
											"end": 9990,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9982,
											"end": 9997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10017,
											"end": 10018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10025,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9903,
											"end": 10035,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9903,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10049,
											"end": 10058,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10049,
											"end": 10058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 10064,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10069,
											"end": 10237,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10069,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10177,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10160,
											"end": 10161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10178,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10152,
											"end": 10153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10179,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10202,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10131,
											"end": 10202,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10069,
											"end": 10237,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10242,
											"end": 10367,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 10242,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10282,
											"end": 10286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10307,
											"end": 10308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10304,
											"end": 10312,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10301,
											"end": 10335,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10301,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10301,
											"end": 10335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10242,
											"end": 10367,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10372,
											"end": 10507,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 10372,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10411,
											"end": 10414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10432,
											"end": 10449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10432,
											"end": 10449,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10472,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10429,
											"end": 10472,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10488,
											"end": 10501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10372,
											"end": 10507,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10639,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10512,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10573,
											"end": 10583,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10568,
											"end": 10571,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10564,
											"end": 10584,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10561,
											"end": 10562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10594,
											"end": 10609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10628,
											"end": 10632,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10633,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10771,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 10644,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10715,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10700,
											"end": 10703,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10696,
											"end": 10716,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 10733,
											"end": 10734,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10726,
											"end": 10741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10757,
											"end": 10758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10765,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10776,
											"end": 10903,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 10776,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10847,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10828,
											"end": 10848,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10825,
											"end": 10826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10858,
											"end": 10873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10892,
											"end": 10896,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10897,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10908,
											"end": 11039,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10908,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10983,
											"end": 11014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 11014,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 11015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 11015,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10963,
											"end": 11033,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11019,
											"end": 11031,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bought(address)": "667022fd",
							"claim()": "4e71d92d",
							"claimOpen()": "4b8bcb58",
							"claimed(address)": "c884ef83",
							"claimedTokens(address)": "a960c65f",
							"cliffPeriod()": "2f661946",
							"getCurrentPercentage()": "9c92431b",
							"initialClaimPercentage()": "a5ebf835",
							"lastClaimAddress(address)": "f3739e05",
							"openClaim()": "293cdbf1",
							"owner()": "8da5cb5b",
							"percentagePerPeriod()": "151bad0a",
							"period()": "ef78d4fd",
							"renounceOwnership()": "715018a6",
							"requireWhitelist()": "856734c4",
							"rewardToken()": "f7c618c1",
							"timeMultiplier()": "ec18c987",
							"transferOwnership(address)": "f2fde38b",
							"updateRewardToken(address)": "f8cf31cb",
							"whitelistFromSAFT(address[],uint256[])": "5372a58e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddedToWhitelistFromSaft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"ChangeRewardToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimDate\",\"type\":\"uint256\"}],\"name\":\"ClaimOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedInVestingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialClaimPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentagePerPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requireWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_newRewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"whitelistFromSAFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/Vesting.sol\":{\"keccak256\":\"0x65c64878774d883462646c1098d8d315db6e806aa46a4b4bdb1a9fc770832fb0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2538c23b1deac0a8b585fd578eb6fd88583236a57464a5efe3168aa5315b3b7b\",\"dweb:/ipfs/QmSk5JWEWjoeMcRPQqN4Mxd4KbaVDAqTrH1DHSGjHxy9Un\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1057,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 1060,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "claimOpen",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1078,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "requireWhitelist",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 1082,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "bought",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1086,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "claimed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1090,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "claimedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1094,
								"contract": "contracts/Vesting.sol:Vesting",
								"label": "lastClaimAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)181": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:1095:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							722
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 723,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								722
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 181,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 181,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 181,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 181,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 181,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:1"
									},
									"scope": 181,
									"src": "2118:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 171,
									"name": "Transfer",
									"nameLocation": "2420:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2451:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:1"
									},
									"src": "2414:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 180,
									"name": "Approval",
									"nameLocation": "2651:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2660:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2683:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:1"
									},
									"src": "2645:78:1"
								}
							],
							"scope": 182,
							"src": "129:2596:1",
							"usedErrors": []
						}
					],
					"src": "33:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"IERC20": [
							181
						],
						"SafeERC20": [
							405
						]
					},
					"id": 406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 406,
							"sourceUnit": 182,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 406,
							"sourceUnit": 702,
							"src": "82:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "120:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405
							],
							"name": "SafeERC20",
							"nameLocation": "586:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "608:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "602:26:2",
									"typeName": {
										"id": 188,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "736:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "766:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 203,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "796:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 130,
																		"src": "796:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "796:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 206,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "821:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 207,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "825:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "773:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "773:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "773:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "746:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "746:86:2"
											}
										]
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "643:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "672:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "665:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "665:6:2"
													},
													"referencedDeclaration": 181,
													"src": "665:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "695:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "687:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "715:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "707:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:71:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:2"
									},
									"scope": 405,
									"src": "634:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "973:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1003:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 228,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1033:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 162,
																		"src": "1033:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1033:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 231,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1062:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "1068:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1072:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1010:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1010:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1010:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 224,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "983:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "983:96:2"
											}
										]
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "854:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "887:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "880:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "880:6:2"
													},
													"referencedDeclaration": 181,
													"src": "880:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "902:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "932:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "924:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "952:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "944:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:93:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:2"
									},
									"scope": 405,
									"src": "845:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1452:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "1701:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1710:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1701:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1700:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 258,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1741:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$405",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$405",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1733:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 256,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1733:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1733:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 260,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "1748:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 254,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "1717:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 140,
																				"src": "1717:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1717:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1760:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1717:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1716:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1700:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1776:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1679:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1872:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "1902:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 150,
																		"src": "1902:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1902:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 276,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "1935:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1879:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1879:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1879:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1852:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1852:90:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1092:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1355:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1383:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1376:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 240,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1376:6:2"
													},
													"referencedDeclaration": 181,
													"src": "1376:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1406:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1431:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1423:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:76:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:2"
									},
									"scope": 405,
									"src": "1346:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2071:194:2",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2089:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2081:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 298,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2128:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$405",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$405",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2120:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2120:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2120:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 300,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2135:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 294,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "2104:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 140,
															"src": "2104:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2104:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 302,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2146:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2104:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 309,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "2211:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 150,
																		"src": "2211:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2211:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 312,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2235:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 313,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2244:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 307,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2188:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2188:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2188:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 305,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2161:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2161:97:2"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1964:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1995:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 283,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1995:6:2"
													},
													"referencedDeclaration": 181,
													"src": "1995:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2025:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2017:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2050:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:76:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:0:2"
									},
									"scope": 405,
									"src": "1955:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2387:370:2",
										"statements": [
											{
												"id": 364,
												"nodeType": "UncheckedBlock",
												"src": "2397:354:2",
												"statements": [
													{
														"assignments": [
															329
														],
														"declarations": [
															{
																"constant": false,
																"id": 329,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2429:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 364,
																"src": "2421:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 328,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2421:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 338,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 334,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2468:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$405",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$405",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2460:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 332,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2460:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2460:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 336,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "2475:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 330,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "2444:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "2444:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2444:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2421:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 340,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "2505:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 341,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "2521:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2505:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2528:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 339,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2497:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2497:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "2497:75:2"
													},
													{
														"assignments": [
															347
														],
														"declarations": [
															{
																"constant": false,
																"id": 347,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2594:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 364,
																"src": "2586:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 346,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2586:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 351,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2609:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "2624:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2609:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2586:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 353,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "2663:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 356,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "2693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 150,
																				"src": "2693:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2693:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 359,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "2717:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 360,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2726:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 354,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2670:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2670:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2670:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 352,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2643:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2643:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 363,
														"nodeType": "ExpressionStatement",
														"src": "2643:97:2"
													}
												]
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2280:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2318:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2311:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 319,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2311:6:2"
													},
													"referencedDeclaration": 181,
													"src": "2311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2366:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2358:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:76:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:0:2"
									},
									"scope": 405,
									"src": "2271:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3210:636:2",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3572:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "3559:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3559:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3613:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 379,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "3593:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3585:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3585:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3585:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "3585:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3559:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 386,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3668:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3668:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3688:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3668:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "3664:176:2",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "3691:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 393,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "3763:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 395,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3776:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 394,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3776:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 396,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3775:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 391,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3752:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3752:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3752:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 390,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3744:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3744:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "3744:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2763:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3149:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3176:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "3169:6:2"
													},
													"referencedDeclaration": 181,
													"src": "3169:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3196:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3183:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3183:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:33:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3210:0:2"
									},
									"scope": 405,
									"src": "3140:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 406,
							"src": "578:3270:2",
							"usedErrors": []
						}
					],
					"src": "33:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 408,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nameLocation": "134:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "784:311:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "981:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:3",
														"valueSize": 1
													},
													{
														"declaration": 417,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:3",
														"valueSize": 1
													}
												],
												"id": 419,
												"nodeType": "InlineAssembly",
												"src": "1003:61:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1080:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 415,
												"id": 423,
												"nodeType": "Return",
												"src": "1073:15:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "738:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "778:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:3"
									},
									"scope": 701,
									"src": "718:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2083:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 436,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 434,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2126:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:3"
											},
											{
												"assignments": [
													445,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "2178:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 444,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 446,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "2196:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2218:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2247:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2031:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2058:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:3"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:3"
									},
									"scope": 701,
									"src": "2012:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3155:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "3185:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "3193:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 469,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															476,
															496
														],
														"referencedDeclaration": 496,
														"src": "3172:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 468,
												"id": 474,
												"nodeType": "Return",
												"src": "3165:67:3"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3088:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3104:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:3"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3141:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:3"
									},
									"scope": 701,
									"src": "3066:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "3608:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3647:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3655:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 492,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3664:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 488,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															516,
															566
														],
														"referencedDeclaration": 566,
														"src": "3625:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 487,
												"id": 494,
												"nodeType": "Return",
												"src": "3618:59:3"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3492:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3516:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3543:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3594:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:3"
									},
									"scope": 701,
									"src": "3461:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4189:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4228:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4236:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4242:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 508,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															516,
															566
														],
														"referencedDeclaration": 566,
														"src": "4206:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 514,
												"nodeType": "Return",
												"src": "4199:94:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4086:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4110:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4137:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4175:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:3"
									},
									"scope": 701,
									"src": "4046:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4727:321:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 533,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 536,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "4770:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 543,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "4847:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "4836:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:3"
											},
											{
												"assignments": [
													549,
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "4900:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 548,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "4914:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"arguments": [
														{
															"id": 556,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4967:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 552,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4941:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 554,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "4960:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "5007:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 561,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5016:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 562,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5028:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 559,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4989:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 564,
												"nodeType": "Return",
												"src": "4982:59:3"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4588:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4612:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4639:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4662:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4713:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:3"
									},
									"scope": 701,
									"src": "4548:500:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "5325:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "5361:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5369:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 576,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															618
														],
														"referencedDeclaration": 618,
														"src": "5342:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 581,
												"nodeType": "Return",
												"src": "5335:80:3"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5253:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5269:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5311:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:3"
									},
									"scope": 701,
									"src": "5225:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5764:229:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 597,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "5793:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5782:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:3"
											},
											{
												"assignments": [
													603,
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "5853:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 602,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "5867:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 604,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"id": 608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5912:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5894:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "5952:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 613,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5961:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 614,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5973:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 611,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5934:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 594,
												"id": 616,
												"nodeType": "Return",
												"src": "5927:59:3"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5643:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5667:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5694:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5750:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:3"
									},
									"scope": 701,
									"src": "5606:387:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "6269:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "6307:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "6315:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 628,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															635,
															670
														],
														"referencedDeclaration": 670,
														"src": "6286:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 627,
												"id": 633,
												"nodeType": "Return",
												"src": "6279:84:3"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6218:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:3"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6255:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:3"
									},
									"scope": 701,
									"src": "6172:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6711:233:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 649,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6740:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 648,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6729:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:3"
											},
											{
												"assignments": [
													655,
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "6802:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "6816:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 656,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "6863:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 658,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "6843:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "6903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 665,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6912:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 666,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6924:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 663,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6885:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 646,
												"id": 668,
												"nodeType": "Return",
												"src": "6878:59:3"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6595:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6619:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6646:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6697:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:3"
									},
									"scope": 701,
									"src": "6556:388:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7110:532:3",
										"statements": [
											{
												"condition": {
													"id": 681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "7181:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7265:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 695,
																"nodeType": "Block",
																"src": "7573:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "7598:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 694,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:3"
																	}
																]
															},
															"id": 696,
															"nodeType": "IfStatement",
															"src": "7261:365:3",
															"trueBody": {
																"id": 690,
																"nodeType": "Block",
																"src": "7288:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 689,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "7120:516:3",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "7133:42:3",
													"statements": [
														{
															"expression": {
																"id": 682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "7154:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 680,
															"id": 683,
															"nodeType": "Return",
															"src": "7147:17:3"
														}
													]
												}
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "6986:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7008:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7041:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7096:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:3"
									},
									"scope": 701,
									"src": "6950:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 702,
							"src": "126:7518:3",
							"usedErrors": []
						}
					],
					"src": "33:7612:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							722
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 722,
							"linearizedBaseContracts": [
								722
							],
							"name": "Context",
							"nameLocation": "572:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "648:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 708,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 707,
												"id": 710,
												"nodeType": "Return",
												"src": "658:17:4"
											}
										]
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "639:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:4"
									},
									"scope": 722,
									"src": "586:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "755:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 717,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 716,
												"id": 719,
												"nodeType": "Return",
												"src": "765:15:4"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "739:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:4"
									},
									"scope": 722,
									"src": "688:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 723,
							"src": "554:235:4",
							"usedErrors": []
						}
					],
					"src": "33:757:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1034
						]
					},
					"id": 1035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "SafeMath",
							"nameLocation": "406:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "633:140:5",
										"statements": [
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "643:124:5",
												"statements": [
													{
														"assignments": [
															738
														],
														"declarations": [
															{
																"constant": false,
																"id": 738,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 755,
																"src": "667:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 737,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 742,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 740,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 743,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "702:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "706:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 750,
														"nodeType": "IfStatement",
														"src": "698:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 736,
															"id": 749,
															"nodeType": "Return",
															"src": "709:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 752,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "754:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 753,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 736,
														"id": 754,
														"nodeType": "Return",
														"src": "740:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "573:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "584:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "618:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:5"
									},
									"scope": 1034,
									"src": "557:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "995:113:5",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1033:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 770,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "1037:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 776,
														"nodeType": "IfStatement",
														"src": "1029:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 768,
															"id": 775,
															"nodeType": "Return",
															"src": "1040:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 778,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "1085:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 779,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "1089:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 781,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 768,
														"id": 782,
														"nodeType": "Return",
														"src": "1071:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "935:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "946:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "980:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "986:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:5"
									},
									"scope": 1034,
									"src": "919:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "1332:417:5",
										"statements": [
											{
												"id": 825,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1600:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 804,
														"nodeType": "IfStatement",
														"src": "1596:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 796,
															"id": 803,
															"nodeType": "Return",
															"src": "1608:16:5"
														}
													},
													{
														"assignments": [
															806
														],
														"declarations": [
															{
																"constant": false,
																"id": 806,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 825,
																"src": "1638:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 805,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 810,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1650:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1654:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 811,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1673:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 812,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "1677:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 814,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1682:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 820,
														"nodeType": "IfStatement",
														"src": "1669:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 796,
															"id": 819,
															"nodeType": "Return",
															"src": "1685:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 822,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1730:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 823,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 796,
														"id": 824,
														"nodeType": "Return",
														"src": "1716:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1272:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1283:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1317:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:5"
									},
									"scope": 1034,
									"src": "1256:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1974:114:5",
										"statements": [
											{
												"id": 853,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 839,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "2012:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 846,
														"nodeType": "IfStatement",
														"src": "2008:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 838,
															"id": 845,
															"nodeType": "Return",
															"src": "2020:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "2065:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "2069:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 838,
														"id": 852,
														"nodeType": "Return",
														"src": "2051:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1914:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1925:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1959:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1965:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:5"
									},
									"scope": 1034,
									"src": "1898:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2323:114:5",
										"statements": [
											{
												"id": 881,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "2361:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "2357:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 866,
															"id": 873,
															"nodeType": "Return",
															"src": "2369:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 876,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "2414:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "2418:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 879,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 866,
														"id": 880,
														"nodeType": "Return",
														"src": "2400:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2263:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2274:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2308:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2314:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:5"
									},
									"scope": 1034,
									"src": "2247:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "2739:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2756:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 894,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2760:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 892,
												"id": 896,
												"nodeType": "Return",
												"src": "2749:12:5"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2685:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:5"
									},
									"scope": 1034,
									"src": "2672:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "3106:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3123:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 909,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3127:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 907,
												"id": 911,
												"nodeType": "Return",
												"src": "3116:12:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3052:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:5"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3097:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:5"
									},
									"scope": 1034,
									"src": "3039:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "3449:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3466:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 924,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3470:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 922,
												"id": 926,
												"nodeType": "Return",
												"src": "3459:12:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3395:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3406:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:5"
									},
									"scope": 1034,
									"src": "3382:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "3834:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "3851:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 939,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3855:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 937,
												"id": 941,
												"nodeType": "Return",
												"src": "3844:12:5"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3780:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3791:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3825:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:5"
									},
									"scope": 1034,
									"src": "3767:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "4383:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4400:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 954,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4404:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 956,
												"nodeType": "Return",
												"src": "4393:12:5"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4329:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:5"
									},
									"scope": 1034,
									"src": "4316:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "5001:106:5",
										"statements": [
											{
												"id": 981,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 971,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "5043:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 972,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5048:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 974,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5051:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 970,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 976,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5085:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 978,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "5089:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 969,
														"id": 980,
														"nodeType": "Return",
														"src": "5078:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4898:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4917:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4936:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4992:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:5"
									},
									"scope": 1034,
									"src": "4876:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "5716:105:5",
										"statements": [
											{
												"id": 1006,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 996,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "5758:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 999,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "5765:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 995,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1001,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "5799:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1003,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "5803:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 994,
														"id": 1005,
														"nodeType": "Return",
														"src": "5792:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5613:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5632:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:5"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5707:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:5"
									},
									"scope": 1034,
									"src": "5591:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "6592:105:5",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "6634:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1024,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "6641:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1020,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "6675:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "6679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1019,
														"id": 1030,
														"nodeType": "Return",
														"src": "6668:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6508:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6527:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1014,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6583:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:5"
									},
									"scope": 1034,
									"src": "6467:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "398:6301:5",
							"usedErrors": []
						}
					],
					"src": "33:6667:5"
				},
				"id": 5
			},
			"contracts/Vesting.sol": {
				"ast": {
					"absolutePath": "contracts/Vesting.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Context": [
							722
						],
						"IERC20": [
							181
						],
						"Ownable": [
							103
						],
						"SafeERC20": [
							405
						],
						"SafeMath": [
							1034
						],
						"TransferHelper": [
							1594
						],
						"Vesting": [
							1477
						]
					},
					"id": 1478,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 182,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 406,
							"src": "117:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 702,
							"src": "183:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 104,
							"src": "235:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 1035,
							"src": "288:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1478,
							"sourceUnit": 1595,
							"src": "346:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1043,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "408:7:6"
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "408:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1477,
							"linearizedBaseContracts": [
								1477,
								103,
								722
							],
							"name": "Vesting",
							"nameLocation": "397:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1047,
									"libraryName": {
										"id": 1045,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "428:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "422:26:6",
									"typeName": {
										"id": 1046,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "440:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1050,
									"libraryName": {
										"id": 1048,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1034,
										"src": "459:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "453:27:6",
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1054,
									"libraryName": {
										"id": 1051,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 405,
										"src": "491:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "485:27:6",
									"typeName": {
										"id": 1053,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1052,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "505:6:6"
										},
										"referencedDeclaration": 181,
										"src": "505:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1057,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "852:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "838:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1056,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1055,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "838:6:6"
										},
										"referencedDeclaration": 181,
										"src": "838:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b8bcb58",
									"id": 1060,
									"mutability": "mutable",
									"name": "claimOpen",
									"nameLocation": "898:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "883:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1058,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "883:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "910:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ef78d4fd",
									"id": 1063,
									"mutability": "constant",
									"name": "period",
									"nameLocation": "941:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "917:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "917:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1062,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "950:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a5ebf835",
									"id": 1066,
									"mutability": "constant",
									"name": "initialClaimPercentage",
									"nameLocation": "1022:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "998:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "998:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1047:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "151bad0a",
									"id": 1069,
									"mutability": "constant",
									"name": "percentagePerPeriod",
									"nameLocation": "1149:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1125:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1125:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 1068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1171:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2f661946",
									"id": 1072,
									"mutability": "constant",
									"name": "cliffPeriod",
									"nameLocation": "1282:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1258:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1070,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1258:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1071,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1296:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ec18c987",
									"id": 1075,
									"mutability": "constant",
									"name": "timeMultiplier",
									"nameLocation": "1403:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1379:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1379:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1074,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1420:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "856734c4",
									"id": 1078,
									"mutability": "mutable",
									"name": "requireWhitelist",
									"nameLocation": "1449:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1437:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1076,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1437:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1468:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "667022fd",
									"id": 1082,
									"mutability": "mutable",
									"name": "bought",
									"nameLocation": "1586:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1551:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1081,
										"keyType": {
											"id": 1079,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1559:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1551:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1080,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1570:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 1086,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "1675:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1640:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1085,
										"keyType": {
											"id": 1083,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1084,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1659:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a960c65f",
									"id": 1090,
									"mutability": "mutable",
									"name": "claimedTokens",
									"nameLocation": "1778:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1743:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1089,
										"keyType": {
											"id": 1087,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1751:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1743:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1088,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1762:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3739e05",
									"id": 1094,
									"mutability": "mutable",
									"name": "lastClaimAddress",
									"nameLocation": "1874:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1477,
									"src": "1839:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1093,
										"keyType": {
											"id": 1091,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1847:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1839:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1092,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1858:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1098,
									"name": "ClaimOpened",
									"nameLocation": "2261:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimDate",
												"nameLocation": "2289:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "2273:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:27:6"
									},
									"src": "2255:45:6"
								},
								{
									"anonymous": false,
									"id": 1104,
									"name": "Claimed",
									"nameLocation": "2311:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2335:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2319:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2358:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2342:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:47:6"
									},
									"src": "2305:61:6"
								},
								{
									"anonymous": false,
									"id": 1110,
									"name": "Bought",
									"nameLocation": "2377:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2400:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2384:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2423:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2407:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:47:6"
									},
									"src": "2371:60:6"
								},
								{
									"anonymous": false,
									"id": 1114,
									"name": "ChangeRewardToken",
									"nameLocation": "2442:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "2476:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2460:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:26:6"
									},
									"src": "2436:50:6"
								},
								{
									"anonymous": false,
									"id": 1120,
									"name": "DepositedInVestingPool",
									"nameLocation": "2497:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2520:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2559:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2543:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:47:6"
									},
									"src": "2491:76:6"
								},
								{
									"anonymous": false,
									"id": 1124,
									"name": "AddedToWhitelist",
									"nameLocation": "2578:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2611:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2595:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2594:24:6"
									},
									"src": "2572:47:6"
								},
								{
									"anonymous": false,
									"id": 1128,
									"name": "AddedToWhitelistFromSaft",
									"nameLocation": "2630:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2671:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2655:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:24:6"
									},
									"src": "2624:55:6"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "2722:43:6",
										"statements": [
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "2732:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1135,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2746:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "2732:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2732:26:6"
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "2708:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2701:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1130,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1129,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2701:6:6"
													},
													"referencedDeclaration": 181,
													"src": "2701:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:21:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2722:0:6"
									},
									"scope": 1477,
									"src": "2689:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "3131:147:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "claimOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "3149:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3162:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3149:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d20697320616c7265616479206f70656e6564",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3165:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95cc7d1782db5a79158bd18cfdf2b7fa2f1c2ac2e9205229b2bb4779d3aa903b",
																"typeString": "literal_string \"Claim is already opened\""
															},
															"value": "Claim is already opened"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95cc7d1782db5a79158bd18cfdf2b7fa2f1c2ac2e9205229b2bb4779d3aa903b",
																"typeString": "literal_string \"Claim is already opened\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3141:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3141:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "3141:50:6"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "claimOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3201:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1152,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3213:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3213:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3201:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "3201:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1157,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3255:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3255:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "ClaimOpened",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "3243:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3243:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "3238:33:6"
											}
										]
									},
									"functionSelector": "293cdbf1",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1141,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3121:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3121:9:6"
										}
									],
									"name": "openClaim",
									"nameLocation": "3102:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:2:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3131:0:6"
									},
									"scope": 1477,
									"src": "3093:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "3629:445:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "_newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3647:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1172,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "3666:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"src": "3647:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265776172642073686f756c6420626520646966666572656e742066726f6d2063757272656e742e",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3679:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da",
																"typeString": "literal_string \"ABOAT::updateRewardToken: New reward should be different from current.\""
															},
															"value": "ABOAT::updateRewardToken: New reward should be different from current."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da",
																"typeString": "literal_string \"ABOAT::updateRewardToken: New reward should be different from current.\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3639:113:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "3639:113:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1182,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3804:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Vesting_$1477",
																					"typeString": "contract Vesting"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Vesting_$1477",
																					"typeString": "contract Vesting"
																				}
																			],
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3796:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1180,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3796:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3796:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1178,
																		"name": "_newRewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "3770:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$181",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "3770:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3770:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1189,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3844:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Vesting_$1477",
																					"typeString": "contract Vesting"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Vesting_$1477",
																					"typeString": "contract Vesting"
																				}
																			],
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3836:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1187,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3836:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3836:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1185,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "3814:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$181",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "3814:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3814:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3770:80:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d207468652063757272656e7420726577617264546f6b656e",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3852:121:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f",
																"typeString": "literal_string \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\""
															},
															"value": "ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f",
																"typeString": "literal_string \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3762:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:212:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "3762:212:6"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1196,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "3984:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1197,
														"name": "_newRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3998:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "3984:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "3984:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1203,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "4054:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4046:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4046:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4046:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1200,
														"name": "ChangeRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "4028:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4028:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "EmitStatement",
												"src": "4023:44:6"
											}
										]
									},
									"functionSelector": "f8cf31cb",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1167,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3619:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3619:9:6"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "3570:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_newRewardToken",
												"nameLocation": "3595:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3588:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1163,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "3588:6:6"
													},
													"referencedDeclaration": 181,
													"src": "3588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:24:6"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3629:0:6"
									},
									"scope": 1477,
									"src": "3561:513:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "4183:413:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1220,
																	"name": "addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "4201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4201:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4221:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4201:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a77686974656c6973743a20596f752063616e277420616464206d6f7265207468616e2031303020616464726573736573206174207468652073616d652074696d65",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															},
															"value": "ABOAT::whitelist: You can't add more than 100 addresses at the same time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4193:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4193:108:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "4193:108:6"
											},
											{
												"body": {
													"id": 1266,
													"nodeType": "Block",
													"src": "4366:167:6",
													"statements": [
														{
															"expression": {
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1238,
																		"name": "bought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "4380:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1242,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1239,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "4387:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1241,
																		"indexExpression": {
																			"id": 1240,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "4397:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4387:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4380:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1249,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1214,
																				"src": "4436:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1251,
																			"indexExpression": {
																				"id": 1250,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1228,
																				"src": "4444:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4436:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1243,
																				"name": "bought",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "4407:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1247,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1244,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "4414:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1246,
																				"indexExpression": {
																					"id": 1245,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1228,
																					"src": "4424:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4414:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4407:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 898,
																		"src": "4407:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4407:44:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4380:71:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "4380:71:6"
														},
														{
															"expression": {
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1255,
																		"name": "lastClaimAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "4465:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1259,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1256,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "4482:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1258,
																		"indexExpression": {
																			"id": 1257,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "4492:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4482:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4465:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1262,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1057,
																			"src": "4510:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4502:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1260,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4502:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4502:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4465:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1265,
															"nodeType": "ExpressionStatement",
															"src": "4465:57:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "4331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1232,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "4339:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4339:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4331:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1267,
												"initializationExpression": {
													"assignments": [
														1228
													],
													"declarations": [
														{
															"constant": false,
															"id": 1228,
															"mutability": "mutable",
															"name": "index",
															"nameLocation": "4320:5:6",
															"nodeType": "VariableDeclaration",
															"scope": 1267,
															"src": "4315:10:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1227,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4315:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1230,
													"initialValue": {
														"hexValue": "30",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4328:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4315:14:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4357:7:6",
														"subExpression": {
															"id": 1235,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4357:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1237,
													"nodeType": "ExpressionStatement",
													"src": "4357:7:6"
												},
												"nodeType": "ForStatement",
												"src": "4311:222:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1269,
																"name": "addresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "4572:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4572:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "AddedToWhitelistFromSaft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "4547:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4547:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "EmitStatement",
												"src": "4542:47:6"
											}
										]
									},
									"functionSelector": "5372a58e",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1216,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4173:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4173:9:6"
										}
									],
									"name": "whitelistFromSAFT",
									"nameLocation": "4094:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "4129:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "4112:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1209,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4112:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1210,
													"nodeType": "ArrayTypeName",
													"src": "4112:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4157:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "4140:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1212,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4140:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1213,
													"nodeType": "ArrayTypeName",
													"src": "4140:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:54:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4183:0:6"
									},
									"scope": 1477,
									"src": "4085:511:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "4987:435:6",
										"statements": [
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "cliffEnded",
														"nameLocation": "5005:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "4997:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4997:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1285,
												"initialValue": {
													"arguments": [
														{
															"id": 1283,
															"name": "cliffPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "5032:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1281,
															"name": "claimOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "5018:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "5018:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5018:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4997:47:6"
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "deltaPeriod",
														"nameLocation": "5062:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "5054:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5054:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"id": 1288,
													"name": "cliffEnded",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1280,
													"src": "5076:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5054:32:6"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "percentage",
														"nameLocation": "5104:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "5096:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5096:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1292,
																"name": "claimOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5117:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5129:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5117:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1295,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5134:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5134:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1297,
																"name": "deltaPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "5152:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5134:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5117:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1316,
														"name": "initialClaimPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "5339:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5117:244:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 1314,
																"name": "initialClaimPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "5304:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1311,
																		"name": "percentagePerPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "5266:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1306,
																					"name": "period",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "5224:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1307,
																					"name": "timeMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1075,
																					"src": "5233:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5224:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1303,
																						"name": "deltaPeriod",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1287,
																						"src": "5194:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1300,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "5174:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "5174:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 913,
																					"src": "5174:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5174:32:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 943,
																			"src": "5174:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5174:74:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 928,
																	"src": "5174:91:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:112:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "5174:129:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5174:153:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5096:265:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1319,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "5378:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5391:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "5378:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1323,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5405:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5378:37:6",
													"trueExpression": {
														"hexValue": "31303030",
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5398:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1325,
												"nodeType": "Return",
												"src": "5371:44:6"
											}
										]
									},
									"functionSelector": "9c92431b",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPercentage",
									"nameLocation": "4934:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4954:2:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "4978:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4977:9:6"
									},
									"scope": 1477,
									"src": "4925:497:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "5912:1215:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1331,
																"name": "claimOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5930:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5943:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5930:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20436c61696d206973206e6f74206f70656e2079657421",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5946:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cfa6bb7f699bf0b54e2028bc433131deb9fd37eb35ddb2c040e70796ddb61b9",
																"typeString": "literal_string \"ABOAT::claim: Claim is not open yet!\""
															},
															"value": "ABOAT::claim: Claim is not open yet!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cfa6bb7f699bf0b54e2028bc433131deb9fd37eb35ddb2c040e70796ddb61b9",
																"typeString": "literal_string \"ABOAT::claim: Claim is not open yet!\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5922:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "5922:63:6"
											},
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "currentPercentage",
														"nameLocation": "6003:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "5995:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1337,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5995:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1339,
														"name": "getCurrentPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "6023:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5995:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1343,
																"name": "currentPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "6063:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6083:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6063:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79207a65726f2e20506c656173652074727920616761696e206c61746572",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6086:95:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055",
																"typeString": "literal_string \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\""
															},
															"value": "ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055",
																"typeString": "literal_string \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\""
															}
														],
														"id": 1342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6055:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6055:127:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "6055:127:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1349,
															"name": "lastClaimAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6195:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1352,
														"indexExpression": {
															"expression": {
																"id": 1350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6212:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6212:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6195:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1355,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "6235:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6227:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6227:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6227:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6195:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "6192:213:6",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "6249:156:6",
													"statements": [
														{
															"expression": {
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1358,
																		"name": "lastClaimAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "6263:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1361,
																	"indexExpression": {
																		"expression": {
																			"id": 1359,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6280:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6280:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6263:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1364,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1057,
																			"src": "6302:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6294:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1362,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6294:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6294:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6263:51:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1367,
															"nodeType": "ExpressionStatement",
															"src": "6263:51:6"
														},
														{
															"expression": {
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1368,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "6328:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1371,
																	"indexExpression": {
																		"expression": {
																			"id": 1369,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6336:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6336:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6328:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6350:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6328:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "6328:23:6"
														},
														{
															"expression": {
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1375,
																		"name": "claimedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "6365:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1378,
																	"indexExpression": {
																		"expression": {
																			"id": 1376,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6379:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6379:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6365:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6393:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6365:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "6365:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1385,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "6422:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1388,
																"indexExpression": {
																	"expression": {
																		"id": 1386,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6430:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6430:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6422:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1389,
																"name": "currentPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "6444:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6422:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f75722063757272656e746c7920656c696769626c6520746f6b656e73",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6463:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f",
																"typeString": "literal_string \"ABOAT::claim: Already claimed your currently eligible tokens\""
															},
															"value": "ABOAT::claim: Already claimed your currently eligible tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f",
																"typeString": "literal_string \"ABOAT::claim: Already claimed your currently eligible tokens\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6414:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "6414:112:6"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "currentlyClaimed",
														"nameLocation": "6549:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "6541:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6541:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"baseExpression": {
														"id": 1396,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "6568:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1399,
													"indexExpression": {
														"expression": {
															"id": 1397,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6576:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6576:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6568:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6541:46:6"
											},
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1401,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "6601:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1404,
														"indexExpression": {
															"expression": {
																"id": 1402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6609:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6609:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6601:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "currentPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "6623:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6601:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "6601:39:6"
											},
											{
												"assignments": [
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6662:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1475,
														"src": "6654:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6654:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6739:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1417,
																			"name": "currentlyClaimed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1395,
																			"src": "6716:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1415,
																			"name": "currentPercentage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "6694:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 913,
																		"src": "6694:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6694:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 1410,
																		"name": "bought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6671:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1413,
																	"indexExpression": {
																		"expression": {
																			"id": 1411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6678:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6678:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6671:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 928,
																"src": "6671:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6671:63:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "6671:67:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6671:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6654:90:6"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1424,
															"name": "claimedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "6758:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1427,
														"indexExpression": {
															"expression": {
																"id": 1425,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6772:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6772:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6758:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1433,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "6816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1428,
																	"name": "claimedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6786:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1431,
																"indexExpression": {
																	"expression": {
																		"id": 1429,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6800:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6800:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6786:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "6786:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6786:37:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6758:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "6758:65:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1439,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "6848:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6840:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6840:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6840:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6872:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6864:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1441,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6864:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6864:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6840:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "6984:83:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1462,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7033:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7033:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1464,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "7045:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1459,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "7002:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1594_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1593,
																	"src": "7002:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7002:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "7002:50:6"
														}
													]
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "6837:230:6",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "6876:102:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1451,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "6930:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$181",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$181",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6922:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1449,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6922:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6922:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1453,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6944:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6944:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1455,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "6956:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1446,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "6894:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1594_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1522,
																	"src": "6894:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6894:69:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "6894:69:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7093:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7093:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7105:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "7085:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7085:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "EmitStatement",
												"src": "7080:32:6"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "5897:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5902:2:6"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:6"
									},
									"scope": 1477,
									"src": "5888:1239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1478,
							"src": "388:6741:6",
							"usedErrors": []
						}
					],
					"src": "36:7093:6"
				},
				"id": 6
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							1594
						]
					},
					"id": 1595,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1479,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1594,
							"linearizedBaseContracts": [
								1594
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "313:281:7",
										"statements": [
											{
												"assignments": [
													1489,
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1521,
														"src": "324:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1521,
														"src": "338:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1490,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 1497,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "417:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "421:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1492,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "371:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "459:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1504,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "471:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1510,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "502:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1512,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1511,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:7",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1513,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1508,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1516,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "438:149:7"
											}
										]
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "241:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "264:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "284:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:7"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:7"
									},
									"scope": 1594,
									"src": "210:384:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "729:291:7",
										"statements": [
											{
												"assignments": [
													1534,
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "740:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "754:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1547,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1542,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "833:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1543,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "839:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "843:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1539,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1537,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "787:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1549,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "881:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1550,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1536,
																					"src": "893:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1556,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1536,
																					"src": "924:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1558,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1557,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:7",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1559,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1554,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1562,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 1548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "860:153:7"
											}
										]
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "635:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "680:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "700:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:7"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:7"
									},
									"scope": 1594,
									"src": "600:420:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "1087:187:7",
										"statements": [
											{
												"assignments": [
													1576,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "1098:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1586,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1581,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1577,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "1116:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1579,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "1131:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "1182:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 1587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:7"
											}
										]
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1051:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1063:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:7"
									},
									"scope": 1594,
									"src": "1026:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1595,
							"src": "181:1095:7",
							"usedErrors": []
						}
					],
					"src": "46:1231:7"
				},
				"id": 7
			}
		}
	}
}