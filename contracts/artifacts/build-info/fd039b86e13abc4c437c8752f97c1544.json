{
	"id": "fd039b86e13abc4c437c8752f97c1544",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PreSale.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/IMasterEntertainer.sol\";\n\ncontract PreSale is Ownable {\n    using Address for address;\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    IERC20 public rewardToken; //Aboat Token\n    IERC20 public paymentToken; //BNB\n    uint256 public pricePerToken;   //How much BNB per Aboat Token\n    uint256 public limit;   //how much can each investors spend at maximum\n    uint256 public softcap; //minimum required sell (how many tokens should be sold)\n    uint256 public soldTokens; //how many token are currently sold\n    uint256 public saleEnded = 0; //block when the sale ended (0 = still ongoing)\n    uint256 public afterDays; //after how many days can investors make their initial claim\n    uint256 constant public period = 30; //How many days are between each claim \n    uint256 constant public initialClaimPercentage = 100; //How much can investors claim directly after sale ended | 100 = 10%\n    uint256 constant public percentagePerPeriod = 50; //How much can investors claim per period after the initial claim | 100 = 10%\n    uint256 constant public cliffPeriod = 90; //How many days after initial claim before percentagePerPeriod takes place\n    \n    bool public requireWhitelist = true;    //flag to determine whether buyers have to be whitelisted or not\n    \n    mapping(address => bool) public whitelisted;\n    mapping(address => uint256) public bought;  //tracks who bought how many aboat token\n    mapping(address => uint256) public claimed; //tracks who claimed how much percentage of his tokens\n    mapping(address => uint256) public claimedTokens; //tracks who claimed how many aboat token\n    mapping(address => address) public lastClaimAddress; //In case we have to swap the token contract\n\n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event SaleEnded(uint256 indexed claimDate);\n    event Claimed(address indexed owner, uint256 indexed amount);\n    event Bought(address indexed buyer, uint256 indexed amount);\n    event ChangeRewardToken(address indexed newToken);\n    event DepositedInVestingPool(address indexed owner, uint256 indexed amount);\n    event AddedToWhitelist(uint256 indexed amount);\n    event AddedToWhitelistFromSaft(uint256 indexed amount);\n    \n    constructor(IERC20 _rewardToken, IERC20 _paymentToken, uint256 _limit, uint256 _softcap, uint256 _price) {\n        require(_price > 0, \"ABOAT::error: Price has to be higher than zero\");\n        rewardToken = _rewardToken;\n        paymentToken = _paymentToken;\n        limit = _limit;\n        softcap = _softcap;   //softcap in terms of sold tokens\n        pricePerToken = _price;\n    }\n    \n    \n    /* =====================================================================================================================\n                                                        Owner\n    ===================================================================================================================== */\n    \n    function claimAndEndSale(uint256 _afterDays) public onlyOwner {\n        require(saleEnded == 0, \"ABOAT::claimAndEndSale: Sale already ended\");\n        saleEnded = block.timestamp;\n        if(softcap <= soldTokens) {\n            //Community can claim their entry after a certain period (should be between public sale and official release (liquidity))\n            afterDays = _afterDays;\n            if(address(paymentToken) != address(0)) {\n                TransferHelper.safeTransfer(address(paymentToken), msg.sender, paymentToken.balanceOf(address(this)));\n            } else {\n                TransferHelper.safeTransferETH(msg.sender, address(this).balance);\n            } \n        } else {\n            //Community can claim their entry directly as the sale failed.\n            afterDays = 0;\n             if(address(rewardToken) != address(0)) {\n                TransferHelper.safeTransfer(address(rewardToken), msg.sender, rewardToken.balanceOf(address(this)));\n            } else {\n                TransferHelper.safeTransferETH(msg.sender,  address(this).balance);\n            }\n        }\n        emit SaleEnded(saleEnded.add(afterDays.mul(1 days)));\n    }\n    \n    function disableWhitelist() public onlyOwner {\n        require(requireWhitelist, \"ABOAT:disableWhitelist: Whitelist is already disabled\");\n        requireWhitelist = false;\n    }\n    \n    //Will only be required if the token security audit displays errors that have to be fixed\n    //which would mean a new contract has to be deployed.\n    //With this function we can ensure that early investors will still be able to get the right coin before release\n    function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {\n        require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\");\n        require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\");\n        rewardToken = _newRewardToken;\n        emit ChangeRewardToken(address(rewardToken));\n    }\n    \n    function updateAfterDays(uint256 _afterDays) public onlyOwner {\n        require(saleEnded != 0, \"ABOAT::updateAfterDays: Sale not ended\");\n        afterDays = _afterDays;\n    }    \n    \n    function whitelist(address[] memory addresses) public onlyOwner {\n        require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\");\n        for(uint index = 0; index < addresses.length; index++) {\n            whitelisted[addresses[index]] = true;\n        }\n        emit AddedToWhitelist(addresses.length);\n    }\n\n    function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {\n        require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\");\n        uint256 sumOfSoldTokens = 0;\n        for(uint index = 0; index < addresses.length; index++) {\n            whitelisted[addresses[index]] = true;\n            uint256 amountBought = amounts[index].mul(1e18).div(pricePerToken);\n            require(getRemainingBalance().sub(amountBought) > 0, \"ABOAT::buy: Amount would exceed the remaining balance\");\n            bought[addresses[index]] = bought[addresses[index]].add(amounts[index]);\n            sumOfSoldTokens = sumOfSoldTokens.add(amountBought);\n            lastClaimAddress[addresses[index]] = address(paymentToken);\n        }\n        soldTokens = soldTokens.add(sumOfSoldTokens);\n        emit AddedToWhitelistFromSaft(addresses.length);\n    }\n    \n    /* =====================================================================================================================\n                                                        General\n    ===================================================================================================================== */\n    \n    function getRemainingBalance() public view returns (uint256) {\n        if(address(rewardToken) == address(0)) {\n            return address(this).balance.sub(soldTokens);\n        } else {\n            return rewardToken.balanceOf(address(this)).sub(soldTokens);\n        }\n    }\n    \n    function getCurrentPercentage() public view returns (uint256) {\n        uint256 cliffEnded = saleEnded.add(cliffPeriod);\n        uint256 deltaPeriod = cliffEnded.add(afterDays * 1 days);\n        uint256 percentage = saleEnded > 0 && block.timestamp > deltaPeriod\n        ? block.timestamp.sub(deltaPeriod)\n            .div(period * 1 days)\n            .mul(percentagePerPeriod)\n            .add(initialClaimPercentage) \n        : initialClaimPercentage;\n        return percentage > 1000 ? 1000 : percentage;\n    }\n    \n    \n    /* =====================================================================================================================\n                                                        Investors\n    ===================================================================================================================== */\n    \n    function buy(uint256 amount) public payable {\n        require(saleEnded == 0, \"ABOAT::buy: Sale already ended!\");\n        require(whitelisted[msg.sender] || !requireWhitelist, \"ABOAT::buy: You're not whitelisted for this sale!\");\n        bool isEthToken = address(paymentToken) == address(0);\n        require(!isEthToken || msg.value == amount, \"ABOAT::buy: Sent value doesn't meet the given amount\");\n        require(bought[msg.sender].add(amount) <= limit, \"ABOAT::buy: Amount would exceed the maximum allowed limit\");\n        uint256 amountBought = amount.mul(1e18).div(pricePerToken);\n        require(getRemainingBalance().sub(amountBought) > 0, \"ABOAT::buy: Amount would exceed the remaining balance\");\n        if(!isEthToken) {\n            paymentToken.safeTransferFrom(address(msg.sender), address(this), amount);\n        }\n        bought[msg.sender] = bought[msg.sender].add(amount);\n        soldTokens = soldTokens.add(amountBought);\n        lastClaimAddress[msg.sender] = address(paymentToken);\n        emit Bought(msg.sender, amount);\n    }\n    \n    //returns the reward token if softcap is reached and owner ended the sale\n    //otherwise it returns the paid paymentToken\n    function claim() public {\n        require(saleEnded != 0, \"ABOAT::claim: Sale is not over yet!\");\n        require(block.timestamp >= saleEnded.add((afterDays.mul(1 days))), \"ABOAT::claim: Claim is not available yet.\");\n        uint256 currentPercentage = getCurrentPercentage();\n        require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\");\n        if(lastClaimAddress[msg.sender] != address(rewardToken)) {\n            lastClaimAddress[msg.sender] = address(rewardToken);\n            claimed[msg.sender] = 0;\n            claimedTokens[msg.sender] = 0;\n        }\n        require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\");\n        if(softcap <= soldTokens) {\n            uint256 currentlyClaimed = claimed[msg.sender];\n            claimed[msg.sender] = currentPercentage;\n            uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18).div(pricePerToken);\n            claimedTokens[msg.sender] = claimedTokens[msg.sender].add(amount);\n            if(address(rewardToken) != address(0)) {\n                TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount);\n            } else {\n                TransferHelper.safeTransferETH(msg.sender, amount);\n            }\n            emit Claimed(msg.sender, amount);\n        } else {\n            claimed[msg.sender] = 1000; //\n            if(address(paymentToken) != address(0)) {\n                TransferHelper.safeTransfer(address(paymentToken), msg.sender, bought[msg.sender]);\n            } else {\n                TransferHelper.safeTransferETH(msg.sender, bought[msg.sender]);\n            }\n            emit Claimed(msg.sender, bought[msg.sender]);\n        }\n    }\n}"
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\ninterface IMasterEntertainer {\n    function updatePrice() external; \n    function getBalanceOf(address _user, uint256 _vesting) external view returns (uint256);\n    function depositForUser(uint256 _pid, uint256 _amount, address _user) external;\n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":578:3848  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;578:3270:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP8 0x5C BASEFEE XOR 0xE5 PUSH30 0x374F1F5A87F87C3BE4D7F049EC3B598B2F86D22EEDAC4F109B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "578:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 578,
									"end": 3848,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037975c4818e57d374f1f5a87f87c3be4d7f049ec3b598b2f86d22eedac4f109b64736f6c63430008070033",
									".code": [
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 3848,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PreSale.sol": {
				"PreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_paymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_softcap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AddedToWhitelist",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AddedToWhitelistFromSaft",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "ChangeRewardToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedInVestingPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimDate",
									"type": "uint256"
								}
							],
							"name": "SaleEnded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "afterDays",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bought",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_afterDays",
									"type": "uint256"
								}
							],
							"name": "claimAndEndSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cliffPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRemainingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialClaimPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaimAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "limit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "percentagePerPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pricePerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requireWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleEnded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "softcap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "soldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_afterDays",
									"type": "uint256"
								}
							],
							"name": "updateAfterDays",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_newRewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "whitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "whitelistFromSAFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PreSale.sol\":434:12014  contract PreSale is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PreSale.sol\":1288:1289  0 */\n  0x00\n    /* \"contracts/PreSale.sol\":1261:1289  uint256 public saleEnded = 0 */\n  0x07\n  sstore\n    /* \"contracts/PreSale.sol\":1900:1935  bool public requireWhitelist = true */\n  0x09\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/PreSale.sol\":1931:1935  true */\n  0x01\n    /* \"contracts/PreSale.sol\":1900:1935  bool public requireWhitelist = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/PreSale.sol\":3199:3584  constructor(IERC20 _rewardToken, IERC20 _paymentToken, uint256 _limit, uint256 _softcap, uint256 _price) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/PreSale.sol\":3331:3332  0 */\n  0x00\n    /* \"contracts/PreSale.sol\":3322:3328  _price */\n  dup2\n    /* \"contracts/PreSale.sol\":3322:3332  _price > 0 */\n  gt\n    /* \"contracts/PreSale.sol\":3314:3383  require(_price > 0, \"ABOAT::error: Price has to be higher than zero\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":933:935   */\n  0x20\n    /* \"contracts/PreSale.sol\":3314:3383  require(_price > 0, \"ABOAT::error: Price has to be higher than zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":915:936   */\n  mstore\n    /* \"#utility.yul\":972:974   */\n  0x2e\n    /* \"#utility.yul\":952:970   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":945:975   */\n  mstore\n    /* \"#utility.yul\":1011:1045   */\n  0x41424f41543a3a6572726f723a2050726963652068617320746f206265206869\n    /* \"#utility.yul\":991:1009   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":984:1046   */\n  mstore\n  shl(0x90, 0x67686572207468616e207a65726f)\n    /* \"#utility.yul\":1062:1080   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1055:1099   */\n  mstore\n    /* \"#utility.yul\":1116:1135   */\n  0x84\n  add\n    /* \"contracts/PreSale.sol\":3314:3383  require(_price > 0, \"ABOAT::error: Price has to be higher than zero\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/PreSale.sol\":3393:3404  rewardToken */\n  0x01\n    /* \"contracts/PreSale.sol\":3393:3419  rewardToken = _rewardToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/PreSale.sol\":3429:3441  paymentToken */\n  0x02\n    /* \"contracts/PreSale.sol\":3429:3457  paymentToken = _paymentToken */\n  dup1\n  sload\n  swap6\n  swap1\n  swap7\n  and\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/PreSale.sol\":3467:3472  limit */\n  0x04\n    /* \"contracts/PreSale.sol\":3467:3481  limit = _limit */\n  sstore\n    /* \"contracts/PreSale.sol\":3491:3498  softcap */\n  0x05\n    /* \"contracts/PreSale.sol\":3491:3509  softcap = _softcap */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/PreSale.sol\":3555:3568  pricePerToken */\n  0x03\n    /* \"contracts/PreSale.sol\":3555:3577  pricePerToken = _price */\n  sstore\n    /* \"contracts/PreSale.sol\":434:12014  contract PreSale is Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:199   */\ntag_19:\n    /* \"#utility.yul\":101:114   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":143:174   */\n  dup2\n  and\n    /* \"#utility.yul\":133:175   */\n  dup2\n  eq\n    /* \"#utility.yul\":123:193   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":189:190   */\n  0x00\n    /* \"#utility.yul\":186:187   */\n  dup1\n    /* \"#utility.yul\":179:191   */\n  revert\n    /* \"#utility.yul\":123:193   */\ntag_21:\n    /* \"#utility.yul\":14:199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":204:726   */\ntag_3:\n    /* \"#utility.yul\":338:344   */\n  0x00\n    /* \"#utility.yul\":346:352   */\n  dup1\n    /* \"#utility.yul\":354:360   */\n  0x00\n    /* \"#utility.yul\":362:368   */\n  dup1\n    /* \"#utility.yul\":370:376   */\n  0x00\n    /* \"#utility.yul\":423:426   */\n  0xa0\n    /* \"#utility.yul\":411:420   */\n  dup7\n    /* \"#utility.yul\":402:409   */\n  dup9\n    /* \"#utility.yul\":398:421   */\n  sub\n    /* \"#utility.yul\":394:427   */\n  slt\n    /* \"#utility.yul\":391:444   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":437:438   */\n  dup1\n    /* \"#utility.yul\":430:442   */\n  revert\n    /* \"#utility.yul\":391:444   */\ntag_23:\n    /* \"#utility.yul\":463:511   */\n  tag_24\n    /* \"#utility.yul\":501:510   */\n  dup7\n    /* \"#utility.yul\":463:511   */\n  tag_19\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":453:511   */\n  swap5\n  pop\n    /* \"#utility.yul\":530:587   */\n  tag_25\n    /* \"#utility.yul\":583:585   */\n  0x20\n    /* \"#utility.yul\":572:581   */\n  dup8\n    /* \"#utility.yul\":568:586   */\n  add\n    /* \"#utility.yul\":530:587   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":627:629   */\n  0x40\n    /* \"#utility.yul\":612:630   */\n  dup8\n  add\n    /* \"#utility.yul\":606:631   */\n  mload\n    /* \"#utility.yul\":671:673   */\n  0x60\n    /* \"#utility.yul\":656:674   */\n  dup9\n  add\n    /* \"#utility.yul\":650:675   */\n  mload\n    /* \"#utility.yul\":715:718   */\n  0x80\n    /* \"#utility.yul\":700:719   */\n  swap1\n  swap9\n  add\n    /* \"#utility.yul\":694:720   */\n  mload\n    /* \"#utility.yul\":204:726   */\n  swap7\n  swap10\n    /* \"#utility.yul\":520:587   */\n  swap2\n  swap9\n  pop\n    /* \"#utility.yul\":606:631   */\n  swap7\n    /* \"#utility.yul\":650:675   */\n  swap6\n    /* \"#utility.yul\":694:720   */\n  swap5\n  pop\n    /* \"#utility.yul\":204:726   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":731:1141   */\ntag_18:\n    /* \"contracts/PreSale.sol\":434:12014  contract PreSale is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PreSale.sol\":434:12014  contract PreSale is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa4d66daf\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe754e7c4\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf3739e05\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf3739e05\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf89be593\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xe754e7c4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xef78d4fd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xefe95f51\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xc884ef83\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd6b0f484\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd936547e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xa4d66daf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa5ebf835\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa960c65f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbd8aa780\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x5ed9ebfc\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x856734c4\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x856734c4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9b8906ae\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9c92431b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x5ed9ebfc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x667022fd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7b1b1de6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2fba2c85\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x2fba2c85\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5372a58e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x0c0e0862\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x151bad0a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f661946\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PreSale.sol\":6069:6245  function updateAfterDays(uint256 _afterDays) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/PreSale.sol\":1642:1690  uint256 constant public percentagePerPeriod = 50 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n        /* \"contracts/PreSale.sol\":1688:1690  50 */\n      0x32\n        /* \"contracts/PreSale.sol\":1642:1690  uint256 constant public percentagePerPeriod = 50 */\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":14882:14907   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14870:14872   */\n      0x20\n        /* \"#utility.yul\":14855:14873   */\n      add\n        /* \"contracts/PreSale.sol\":1642:1690  uint256 constant public percentagePerPeriod = 50 */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PreSale.sol\":1774:1814  uint256 constant public cliffPeriod = 90 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_46\n        /* \"contracts/PreSale.sol\":1812:1814  90 */\n      0x5a\n        /* \"contracts/PreSale.sol\":1774:1814  uint256 constant public cliffPeriod = 90 */\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":7878:8153  function getRemainingBalance() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_46\n      tag_56\n      jump\t// in\n        /* \"contracts/PreSale.sol\":929:955  IERC20 public paymentToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x02)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3891:3923   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3873:3924   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3861:3863   */\n      0x20\n        /* \"#utility.yul\":3846:3864   */\n      add\n        /* \"contracts/PreSale.sol\":929:955  IERC20 public paymentToken */\n      tag_48\n        /* \"#utility.yul\":3727:3930   */\n      jump\n        /* \"contracts/PreSale.sol\":10200:12012  function claim() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_41\n      tag_65\n      jump\t// in\n        /* \"contracts/PreSale.sol\":6628:7549  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/PreSale.sol\":1194:1219  uint256 public soldTokens */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_46\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":2063:2104  mapping(address => uint256) public bought */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_46\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_41\n      tag_83\n      jump\t// in\n        /* \"contracts/PreSale.sol\":967:995  uint256 public pricePerToken */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_46\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":1900:1935  bool public requireWhitelist = true */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sload(0x09)\n      tag_89\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_89:\n      mload(0x40)\n        /* \"#utility.yul\":4759:4773   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4752:4774   */\n      iszero\n        /* \"#utility.yul\":4734:4775   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/PreSale.sol\":1900:1935  bool public requireWhitelist = true */\n      tag_48\n        /* \"#utility.yul\":4594:4781   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump(tag_59)\n        /* \"contracts/PreSale.sol\":1261:1289  uint256 public saleEnded = 0 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_46\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":8163:8676  function getCurrentPercentage() public view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_46\n      tag_104\n      jump\t// in\n        /* \"contracts/PreSale.sol\":1034:1054  uint256 public limit */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_46\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":1515:1567  uint256 constant public initialClaimPercentage = 100 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_46\n        /* \"contracts/PreSale.sol\":1564:1567  100 */\n      0x64\n        /* \"contracts/PreSale.sol\":1515:1567  uint256 constant public initialClaimPercentage = 100 */\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":2255:2303  mapping(address => uint256) public claimedTokens */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_46\n      tag_116\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_116:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":6259:6622  function whitelist(address[] memory addresses) public onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_41\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"contracts/PreSale.sol\":2152:2194  mapping(address => uint256) public claimed */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_46\n      tag_126\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_126:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":5090:5268  function disableWhitelist() public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_41\n      tag_131\n      jump\t// in\n        /* \"contracts/PreSale.sol\":2014:2057  mapping(address => bool) public whitelisted */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_89\n      tag_134\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_134:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":9012:10063  function buy(uint256 amount) public payable {... */\n    tag_24:\n      tag_41\n      tag_138\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"contracts/PreSale.sol\":1343:1367  uint256 public afterDays */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_46\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":1434:1469  uint256 constant public period = 30 */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_46\n        /* \"contracts/PreSale.sol\":1467:1469  30 */\n      0x1e\n        /* \"contracts/PreSale.sol\":1434:1469  uint256 constant public period = 30 */\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":3916:5080  function claimAndEndSale(uint256 _afterDays) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_41\n      tag_150\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_41\n      tag_154\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n        /* \"contracts/PreSale.sol\":2351:2402  mapping(address => address) public lastClaimAddress */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_59\n      tag_158\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_158:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":884:909  IERC20 public rewardToken */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      sload(0x01)\n      tag_59\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":1109:1131  uint256 public softcap */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_46\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/PreSale.sol\":5546:6059  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_41\n      tag_171\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_171:\n      tag_173\n      jump\t// in\n        /* \"contracts/PreSale.sol\":6069:6245  function updateAfterDays(uint256 _afterDays) public onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/PreSale.sol\":6149:6158  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":6141:6206  require(saleEnded != 0, \"ABOAT::updateAfterDays: Sale not ended\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13750:13752   */\n      0x20\n        /* \"contracts/PreSale.sol\":6141:6206  require(saleEnded != 0, \"ABOAT::updateAfterDays: Sale not ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13732:13753   */\n      mstore\n        /* \"#utility.yul\":13789:13791   */\n      0x26\n        /* \"#utility.yul\":13769:13787   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13762:13792   */\n      mstore\n        /* \"#utility.yul\":13828:13862   */\n      0x41424f41543a3a7570646174654166746572446179733a2053616c65206e6f74\n        /* \"#utility.yul\":13808:13826   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13801:13863   */\n      mstore\n      shl(0xd2, 0x08195b991959)\n        /* \"#utility.yul\":13879:13897   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13872:13908   */\n      mstore\n        /* \"#utility.yul\":13925:13944   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":6141:6206  require(saleEnded != 0, \"ABOAT::updateAfterDays: Sale not ended\") */\n      tag_179\n        /* \"#utility.yul\":13548:13950   */\n      jump\n        /* \"contracts/PreSale.sol\":6141:6206  require(saleEnded != 0, \"ABOAT::updateAfterDays: Sale not ended\") */\n    tag_182:\n        /* \"contracts/PreSale.sol\":6216:6225  afterDays */\n      0x08\n        /* \"contracts/PreSale.sol\":6216:6238  afterDays = _afterDays */\n      sstore\n        /* \"contracts/PreSale.sol\":6069:6245  function updateAfterDays(uint256 _afterDays) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PreSale.sol\":7878:8153  function getRemainingBalance() public view returns (uint256) {... */\n    tag_56:\n        /* \"contracts/PreSale.sol\":7960:7971  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":7930:7937  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":7960:7971  rewardToken */\n      and\n        /* \"contracts/PreSale.sol\":7949:8147  if(address(rewardToken) == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"contracts/PreSale.sol\":8035:8045  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":8009:8046  address(this).balance.sub(soldTokens) */\n      tag_187\n      swap1\n        /* \"contracts/PreSale.sol\":8009:8030  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/PreSale.sol\":8009:8034  address(this).balance.sub */\n      tag_188\n        /* \"contracts/PreSale.sol\":8009:8046  address(this).balance.sub(soldTokens) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/PreSale.sol\":8002:8046  return address(this).balance.sub(soldTokens) */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":7878:8153  function getRemainingBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PreSale.sol\":7949:8147  if(address(rewardToken) == address(0)) {... */\n    tag_186:\n        /* \"contracts/PreSale.sol\":8125:8135  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":8084:8095  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":8084:8120  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":8114:8118  this */\n      address\n        /* \"contracts/PreSale.sol\":8084:8120  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3924   */\n      mstore\n        /* \"contracts/PreSale.sol\":8084:8136  rewardToken.balanceOf(address(this)).sub(soldTokens) */\n      tag_187\n      swap3\n        /* \"contracts/PreSale.sol\":8125:8135  soldTokens */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":8084:8095  rewardToken */\n      and\n      swap1\n        /* \"contracts/PreSale.sol\":8084:8105  rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3846:3864   */\n      0x24\n      add\n        /* \"contracts/PreSale.sol\":8084:8120  rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/PreSale.sol\":8084:8124  rewardToken.balanceOf(address(this)).sub */\n      swap1\n      tag_188\n        /* \"contracts/PreSale.sol\":8084:8136  rewardToken.balanceOf(address(this)).sub(soldTokens) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":10200:12012  function claim() public {... */\n    tag_65:\n        /* \"contracts/PreSale.sol\":10242:10251  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":10234:10296  require(saleEnded != 0, \"ABOAT::claim: Sale is not over yet!\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12110:12112   */\n      0x20\n        /* \"contracts/PreSale.sol\":10234:10296  require(saleEnded != 0, \"ABOAT::claim: Sale is not over yet!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12092:12113   */\n      mstore\n        /* \"#utility.yul\":12149:12151   */\n      0x23\n        /* \"#utility.yul\":12129:12147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12122:12152   */\n      mstore\n        /* \"#utility.yul\":12188:12222   */\n      0x41424f41543a3a636c61696d3a2053616c65206973206e6f74206f7665722079\n        /* \"#utility.yul\":12168:12186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12161:12223   */\n      mstore\n      shl(0xe8, 0x657421)\n        /* \"#utility.yul\":12239:12257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12232:12265   */\n      mstore\n        /* \"#utility.yul\":12282:12301   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":10234:10296  require(saleEnded != 0, \"ABOAT::claim: Sale is not over yet!\") */\n      tag_179\n        /* \"#utility.yul\":11908:12307   */\n      jump\n        /* \"contracts/PreSale.sol\":10234:10296  require(saleEnded != 0, \"ABOAT::claim: Sale is not over yet!\") */\n    tag_198:\n        /* \"contracts/PreSale.sol\":10348:10357  afterDays */\n      sload(0x08)\n        /* \"contracts/PreSale.sol\":10333:10371  saleEnded.add((afterDays.mul(1 days))) */\n      tag_201\n      swap1\n        /* \"contracts/PreSale.sol\":10348:10369  afterDays.mul(1 days) */\n      tag_202\n      swap1\n        /* \"contracts/PreSale.sol\":10362:10368  1 days */\n      0x015180\n        /* \"contracts/PreSale.sol\":10348:10361  afterDays.mul */\n      tag_203\n        /* \"contracts/PreSale.sol\":10348:10369  afterDays.mul(1 days) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/PreSale.sol\":10333:10342  saleEnded */\n      sload(0x07)\n      swap1\n        /* \"contracts/PreSale.sol\":10333:10346  saleEnded.add */\n      tag_204\n        /* \"contracts/PreSale.sol\":10333:10371  saleEnded.add((afterDays.mul(1 days))) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/PreSale.sol\":10314:10329  block.timestamp */\n      timestamp\n        /* \"contracts/PreSale.sol\":10314:10371  block.timestamp >= saleEnded.add((afterDays.mul(1 days))) */\n      lt\n      iszero\n        /* \"contracts/PreSale.sol\":10306:10417  require(block.timestamp >= saleEnded.add((afterDays.mul(1 days))), \"ABOAT::claim: Claim is not available yet.\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7274:7276   */\n      0x20\n        /* \"contracts/PreSale.sol\":10306:10417  require(block.timestamp >= saleEnded.add((afterDays.mul(1 days))), \"ABOAT::claim: Claim is not available yet.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7256:7277   */\n      mstore\n        /* \"#utility.yul\":7313:7315   */\n      0x29\n        /* \"#utility.yul\":7293:7311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7286:7316   */\n      mstore\n        /* \"#utility.yul\":7352:7386   */\n      0x41424f41543a3a636c61696d3a20436c61696d206973206e6f7420617661696c\n        /* \"#utility.yul\":7332:7350   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7325:7387   */\n      mstore\n      shl(0xb9, 0x30b13632903cb2ba17)\n        /* \"#utility.yul\":7403:7421   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7396:7435   */\n      mstore\n        /* \"#utility.yul\":7452:7471   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":10306:10417  require(block.timestamp >= saleEnded.add((afterDays.mul(1 days))), \"ABOAT::claim: Claim is not available yet.\") */\n      tag_179\n        /* \"#utility.yul\":7072:7477   */\n      jump\n        /* \"contracts/PreSale.sol\":10306:10417  require(block.timestamp >= saleEnded.add((afterDays.mul(1 days))), \"ABOAT::claim: Claim is not available yet.\") */\n    tag_205:\n        /* \"contracts/PreSale.sol\":10427:10452  uint256 currentPercentage */\n      0x00\n        /* \"contracts/PreSale.sol\":10455:10477  getCurrentPercentage() */\n      tag_208\n        /* \"contracts/PreSale.sol\":10455:10475  getCurrentPercentage */\n      tag_104\n        /* \"contracts/PreSale.sol\":10455:10477  getCurrentPercentage() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/PreSale.sol\":10427:10477  uint256 currentPercentage = getCurrentPercentage() */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":10515:10516  0 */\n      0x00\n        /* \"contracts/PreSale.sol\":10495:10512  currentPercentage */\n      dup2\n        /* \"contracts/PreSale.sol\":10495:10516  currentPercentage > 0 */\n      gt\n        /* \"contracts/PreSale.sol\":10487:10614  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9898:9900   */\n      0x20\n        /* \"contracts/PreSale.sol\":10487:10614  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9880:9901   */\n      mstore\n        /* \"#utility.yul\":9937:9939   */\n      0x5d\n        /* \"#utility.yul\":9917:9935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9910:9940   */\n      mstore\n        /* \"#utility.yul\":9976:10010   */\n      0x41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620\n        /* \"#utility.yul\":9956:9974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9949:10011   */\n      mstore\n        /* \"#utility.yul\":10047:10081   */\n      0x746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79\n        /* \"#utility.yul\":10027:10045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10020:10082   */\n      mstore\n        /* \"#utility.yul\":10119:10150   */\n      0x207a65726f2e20506c656173652074727920616761696e206c61746572000000\n        /* \"#utility.yul\":10098:10117   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10091:10151   */\n      mstore\n        /* \"#utility.yul\":10168:10187   */\n      0xa4\n      add\n        /* \"contracts/PreSale.sol\":10487:10614  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n      tag_179\n        /* \"#utility.yul\":9696:10193   */\n      jump\n        /* \"contracts/PreSale.sol\":10487:10614  require(currentPercentage > 0, \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\") */\n    tag_209:\n        /* \"contracts/PreSale.sol\":10667:10678  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":10644:10654  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":10667:10678  rewardToken */\n      0x00\n        /* \"contracts/PreSale.sol\":10627:10655  lastClaimAddress[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":10627:10643  lastClaimAddress */\n      0x0e\n        /* \"contracts/PreSale.sol\":10627:10655  lastClaimAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/PreSale.sol\":10667:10678  rewardToken */\n      swap2\n      and\n        /* \"contracts/PreSale.sol\":10627:10679  lastClaimAddress[msg.sender] != address(rewardToken) */\n      eq\n        /* \"contracts/PreSale.sol\":10624:10837  if(lastClaimAddress[msg.sender] != address(rewardToken)) {... */\n      tag_212\n      jumpi\n        /* \"contracts/PreSale.sol\":10734:10745  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":10712:10722  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":10734:10745  rewardToken */\n      0x00\n        /* \"contracts/PreSale.sol\":10695:10723  lastClaimAddress[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":10695:10711  lastClaimAddress */\n      0x0e\n        /* \"contracts/PreSale.sol\":10695:10723  lastClaimAddress[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/PreSale.sol\":10695:10746  lastClaimAddress[msg.sender] = address(rewardToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":10734:10745  rewardToken */\n      swap1\n      swap6\n      and\n        /* \"contracts/PreSale.sol\":10695:10746  lastClaimAddress[msg.sender] = address(rewardToken) */\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/PreSale.sol\":10760:10767  claimed */\n      0x0c\n        /* \"contracts/PreSale.sol\":10760:10779  claimed[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/PreSale.sol\":10760:10783  claimed[msg.sender] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":10797:10810  claimedTokens */\n      0x0d\n        /* \"contracts/PreSale.sol\":10797:10822  claimedTokens[msg.sender] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/PreSale.sol\":10797:10826  claimedTokens[msg.sender] = 0 */\n      sstore\n        /* \"contracts/PreSale.sol\":10624:10837  if(lastClaimAddress[msg.sender] != address(rewardToken)) {... */\n    tag_212:\n        /* \"contracts/PreSale.sol\":10862:10872  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":10854:10873  claimed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":10854:10861  claimed */\n      0x0c\n        /* \"contracts/PreSale.sol\":10854:10873  claimed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":10854:10893  claimed[msg.sender] < currentPercentage */\n      dup2\n      gt\n        /* \"contracts/PreSale.sol\":10846:10958  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7684:7686   */\n      0x20\n        /* \"contracts/PreSale.sol\":10846:10958  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7666:7687   */\n      mstore\n        /* \"#utility.yul\":7723:7725   */\n      0x3c\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7726   */\n      mstore\n        /* \"#utility.yul\":7762:7796   */\n      0x41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f\n        /* \"#utility.yul\":7742:7760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7735:7797   */\n      mstore\n        /* \"#utility.yul\":7833:7863   */\n      0x75722063757272656e746c7920656c696769626c6520746f6b656e7300000000\n        /* \"#utility.yul\":7813:7831   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7806:7864   */\n      mstore\n        /* \"#utility.yul\":7881:7900   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":10846:10958  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n      tag_179\n        /* \"#utility.yul\":7482:7906   */\n      jump\n        /* \"contracts/PreSale.sol\":10846:10958  require(claimed[msg.sender] < currentPercentage, \"ABOAT::claim: Already claimed your currently eligible tokens\") */\n    tag_213:\n        /* \"contracts/PreSale.sol\":10982:10992  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":10971:10978  softcap */\n      sload(0x05)\n        /* \"contracts/PreSale.sol\":10971:10992  softcap <= soldTokens */\n      gt\n        /* \"contracts/PreSale.sol\":10968:12006  if(softcap <= soldTokens) {... */\n      tag_216\n      jumpi\n        /* \"contracts/PreSale.sol\":11043:11053  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11008:11032  uint256 currentlyClaimed */\n      0x00\n        /* \"contracts/PreSale.sol\":11035:11054  claimed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11035:11042  claimed */\n      0x0c\n        /* \"contracts/PreSale.sol\":11035:11054  claimed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n        /* \"contracts/PreSale.sol\":11068:11107  claimed[msg.sender] = currentPercentage */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":11226:11239  pricePerToken */\n      sload(0x03)\n        /* \"contracts/PreSale.sol\":11035:11054  claimed[msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/PreSale.sol\":11008:11032  uint256 currentlyClaimed */\n      swap1\n        /* \"contracts/PreSale.sol\":11138:11240  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18).div(pricePerToken) */\n      tag_217\n      swap1\n        /* \"contracts/PreSale.sol\":11138:11221  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18) */\n      tag_220\n        /* \"contracts/PreSale.sol\":11216:11220  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/PreSale.sol\":11138:11211  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      tag_219\n        /* \"contracts/PreSale.sol\":11206:11210  1000 */\n      0x03e8\n        /* \"contracts/PreSale.sol\":11138:11221  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18) */\n      dup4\n        /* \"contracts/PreSale.sol\":11161:11200  currentPercentage.sub(currentlyClaimed) */\n      tag_221\n        /* \"contracts/PreSale.sol\":11090:11107  currentPercentage */\n      dup11\n        /* \"contracts/PreSale.sol\":11035:11054  claimed[msg.sender] */\n      dup11\n        /* \"contracts/PreSale.sol\":11161:11182  currentPercentage.sub */\n      tag_188\n        /* \"contracts/PreSale.sol\":11161:11200  currentPercentage.sub(currentlyClaimed) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/PreSale.sol\":11145:11155  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11138:11156  bought[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11138:11144  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":11138:11156  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/PreSale.sol\":11138:11160  bought[msg.sender].mul */\n      tag_203\n        /* \"contracts/PreSale.sol\":11138:11201  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/PreSale.sol\":11138:11205  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div */\n      swap1\n      tag_222\n        /* \"contracts/PreSale.sol\":11138:11211  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/PreSale.sol\":11138:11215  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul */\n      swap1\n      tag_203\n        /* \"contracts/PreSale.sol\":11138:11221  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":11138:11240  bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18).div(pricePerToken) */\n    tag_217:\n        /* \"contracts/PreSale.sol\":11296:11306  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11282:11307  claimedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11282:11295  claimedTokens */\n      0x0d\n        /* \"contracts/PreSale.sol\":11282:11307  claimedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":11121:11240  uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18).div(pricePerToken) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/PreSale.sol\":11282:11319  claimedTokens[msg.sender].add(amount) */\n      tag_223\n      swap1\n        /* \"contracts/PreSale.sol\":11121:11240  uint256 amount = bought[msg.sender].mul(currentPercentage.sub(currentlyClaimed)).div(1000).mul(1e18).div(pricePerToken) */\n      dup3\n        /* \"contracts/PreSale.sol\":11282:11311  claimedTokens[msg.sender].add */\n      tag_204\n        /* \"contracts/PreSale.sol\":11282:11319  claimedTokens[msg.sender].add(amount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/PreSale.sol\":11268:11278  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11254:11279  claimedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11254:11267  claimedTokens */\n      0x0d\n        /* \"contracts/PreSale.sol\":11254:11279  claimedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/PreSale.sol\":11254:11319  claimedTokens[msg.sender] = claimedTokens[msg.sender].add(amount) */\n      sstore\n        /* \"contracts/PreSale.sol\":11344:11355  rewardToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/PreSale.sol\":11336:11370  address(rewardToken) != address(0) */\n      iszero\n        /* \"contracts/PreSale.sol\":11333:11563  if(address(rewardToken) != address(0)) {... */\n      tag_224\n      jumpi\n        /* \"contracts/PreSale.sol\":11426:11437  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":11390:11459  TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount) */\n      tag_225\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":11426:11437  rewardToken */\n      and\n        /* \"contracts/PreSale.sol\":11440:11450  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11452:11458  amount */\n      dup4\n        /* \"contracts/PreSale.sol\":11390:11417  TransferHelper.safeTransfer */\n      tag_226\n        /* \"contracts/PreSale.sol\":11390:11459  TransferHelper.safeTransfer(address(rewardToken), msg.sender, amount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/PreSale.sol\":11333:11563  if(address(rewardToken) != address(0)) {... */\n      jump(tag_228)\n    tag_224:\n        /* \"contracts/PreSale.sol\":11498:11548  TransferHelper.safeTransferETH(msg.sender, amount) */\n      tag_228\n        /* \"contracts/PreSale.sol\":11529:11539  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11541:11547  amount */\n      dup3\n        /* \"contracts/PreSale.sol\":11498:11528  TransferHelper.safeTransferETH */\n      tag_229\n        /* \"contracts/PreSale.sol\":11498:11548  TransferHelper.safeTransferETH(msg.sender, amount) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/PreSale.sol\":11581:11608  Claimed(msg.sender, amount) */\n      mload(0x40)\n        /* \"contracts/PreSale.sol\":11601:11607  amount */\n      dup2\n      swap1\n        /* \"contracts/PreSale.sol\":11589:11599  msg.sender */\n      caller\n      swap1\n        /* \"contracts/PreSale.sol\":11581:11608  Claimed(msg.sender, amount) */\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/PreSale.sol\":10994:11619  {... */\n      pop\n      pop\n        /* \"contracts/PreSale.sol\":10224:12012  {... */\n      pop\n        /* \"contracts/PreSale.sol\":10200:12012  function claim() public {... */\n      jump\t// out\n        /* \"contracts/PreSale.sol\":10968:12006  if(softcap <= soldTokens) {... */\n    tag_216:\n        /* \"contracts/PreSale.sol\":11647:11657  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11639:11658  claimed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11639:11646  claimed */\n      0x0c\n        /* \"contracts/PreSale.sol\":11639:11658  claimed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/PreSale.sol\":11661:11665  1000 */\n      0x03e8\n        /* \"contracts/PreSale.sol\":11639:11665  claimed[msg.sender] = 1000 */\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":11693:11705  paymentToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/PreSale.sol\":11685:11720  address(paymentToken) != address(0) */\n      iszero\n        /* \"contracts/PreSale.sol\":11682:11938  if(address(paymentToken) != address(0)) {... */\n      tag_231\n      jumpi\n        /* \"contracts/PreSale.sol\":11776:11788  paymentToken */\n      sload(0x02)\n        /* \"contracts/PreSale.sol\":11791:11801  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11776:11788  paymentToken */\n      0x00\n        /* \"contracts/PreSale.sol\":11803:11821  bought[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11803:11809  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":11803:11821  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":11740:11822  TransferHelper.safeTransfer(address(paymentToken), msg.sender, bought[msg.sender]) */\n      tag_232\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":11776:11788  paymentToken */\n      and\n      swap2\n        /* \"contracts/PreSale.sol\":11791:11801  msg.sender */\n      swap1\n        /* \"contracts/PreSale.sol\":11740:11767  TransferHelper.safeTransfer */\n      tag_226\n        /* \"contracts/PreSale.sol\":11740:11822  TransferHelper.safeTransfer(address(paymentToken), msg.sender, bought[msg.sender]) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/PreSale.sol\":11682:11938  if(address(paymentToken) != address(0)) {... */\n      jump(tag_234)\n    tag_231:\n        /* \"contracts/PreSale.sol\":11892:11902  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11904:11922  bought[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11904:11910  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":11904:11922  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":11861:11923  TransferHelper.safeTransferETH(msg.sender, bought[msg.sender]) */\n      tag_234\n      swap2\n        /* \"contracts/PreSale.sol\":11892:11902  msg.sender */\n      swap1\n        /* \"contracts/PreSale.sol\":11861:11891  TransferHelper.safeTransferETH */\n      tag_229\n        /* \"contracts/PreSale.sol\":11861:11923  TransferHelper.safeTransferETH(msg.sender, bought[msg.sender]) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/PreSale.sol\":11983:11993  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":11976:11994  bought[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":11976:11982  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":11976:11994  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":11956:11995  Claimed(msg.sender, bought[msg.sender]) */\n      swap1\n      mload\n        /* \"contracts/PreSale.sol\":11976:11994  bought[msg.sender] */\n      swap1\n      swap3\n        /* \"contracts/PreSale.sol\":11983:11993  msg.sender */\n      swap2\n        /* \"contracts/PreSale.sol\":11956:11995  Claimed(msg.sender, bought[msg.sender]) */\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n      swap2\n      log3\n        /* \"contracts/PreSale.sol\":10968:12006  if(softcap <= soldTokens) {... */\n    tag_230:\n        /* \"contracts/PreSale.sol\":10224:12012  {... */\n      pop\n        /* \"contracts/PreSale.sol\":10200:12012  function claim() public {... */\n      jump\t// out\n        /* \"contracts/PreSale.sol\":6628:7549  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_238:\n        /* \"contracts/PreSale.sol\":6764:6767  100 */\n      0x64\n        /* \"contracts/PreSale.sol\":6744:6753  addresses */\n      dup3\n        /* \"contracts/PreSale.sol\":6744:6760  addresses.length */\n      mload\n        /* \"contracts/PreSale.sol\":6744:6767  addresses.length <= 100 */\n      gt\n      iszero\n        /* \"contracts/PreSale.sol\":6736:6844  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_243\n      jump\t// in\n    tag_241:\n        /* \"contracts/PreSale.sol\":6854:6877  uint256 sumOfSoldTokens */\n      0x00\n        /* \"contracts/PreSale.sol\":6895:6905  uint index */\n      dup1\n        /* \"contracts/PreSale.sol\":6891:7432  for(uint index = 0; index < addresses.length; index++) {... */\n    tag_244:\n        /* \"contracts/PreSale.sol\":6919:6928  addresses */\n      dup4\n        /* \"contracts/PreSale.sol\":6919:6935  addresses.length */\n      mload\n        /* \"contracts/PreSale.sol\":6911:6916  index */\n      dup2\n        /* \"contracts/PreSale.sol\":6911:6935  index < addresses.length */\n      lt\n        /* \"contracts/PreSale.sol\":6891:7432  for(uint index = 0; index < addresses.length; index++) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/PreSale.sol\":6992:6996  true */\n      0x01\n        /* \"contracts/PreSale.sol\":6960:6971  whitelisted */\n      0x0a\n        /* \"contracts/PreSale.sol\":6960:6989  whitelisted[addresses[index]] */\n      0x00\n        /* \"contracts/PreSale.sol\":6972:6981  addresses */\n      dup7\n        /* \"contracts/PreSale.sol\":6982:6987  index */\n      dup5\n        /* \"contracts/PreSale.sol\":6972:6988  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":6960:6989  whitelisted[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PreSale.sol\":6960:6996  whitelisted[addresses[index]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PreSale.sol\":7010:7030  uint256 amountBought */\n      0x00\n        /* \"contracts/PreSale.sol\":7033:7076  amounts[index].mul(1e18).div(pricePerToken) */\n      tag_250\n        /* \"contracts/PreSale.sol\":7062:7075  pricePerToken */\n      sload(0x03)\n        /* \"contracts/PreSale.sol\":7033:7057  amounts[index].mul(1e18) */\n      tag_220\n        /* \"contracts/PreSale.sol\":7052:7056  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/PreSale.sol\":7033:7040  amounts */\n      dup8\n        /* \"contracts/PreSale.sol\":7041:7046  index */\n      dup7\n        /* \"contracts/PreSale.sol\":7033:7047  amounts[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_253\n      tag_249\n      jump\t// in\n    tag_253:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PreSale.sol\":7033:7051  amounts[index].mul */\n      tag_203\n      swap1\n        /* \"contracts/PreSale.sol\":7033:7057  amounts[index].mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/PreSale.sol\":7033:7076  amounts[index].mul(1e18).div(pricePerToken) */\n    tag_250:\n        /* \"contracts/PreSale.sol\":7010:7076  uint256 amountBought = amounts[index].mul(1e18).div(pricePerToken) */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":7140:7141  0 */\n      0x00\n        /* \"contracts/PreSale.sol\":7098:7137  getRemainingBalance().sub(amountBought) */\n      tag_254\n        /* \"contracts/PreSale.sol\":7124:7136  amountBought */\n      dup3\n        /* \"contracts/PreSale.sol\":7098:7119  getRemainingBalance() */\n      tag_195\n        /* \"contracts/PreSale.sol\":7098:7117  getRemainingBalance */\n      tag_56\n        /* \"contracts/PreSale.sol\":7098:7119  getRemainingBalance() */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":7098:7137  getRemainingBalance().sub(amountBought) */\n    tag_254:\n        /* \"contracts/PreSale.sol\":7098:7141  getRemainingBalance().sub(amountBought) > 0 */\n      gt\n        /* \"contracts/PreSale.sol\":7090:7199  require(getRemainingBalance().sub(amountBought) > 0, \"ABOAT::buy: Amount would exceed the remaining balance\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_258\n      jump\t// in\n    tag_256:\n        /* \"contracts/PreSale.sol\":7240:7284  bought[addresses[index]].add(amounts[index]) */\n      tag_259\n        /* \"contracts/PreSale.sol\":7269:7276  amounts */\n      dup5\n        /* \"contracts/PreSale.sol\":7277:7282  index */\n      dup4\n        /* \"contracts/PreSale.sol\":7269:7283  amounts[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_261\n      tag_249\n      jump\t// in\n    tag_261:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PreSale.sol\":7240:7246  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":7240:7264  bought[addresses[index]] */\n      0x00\n        /* \"contracts/PreSale.sol\":7247:7256  addresses */\n      dup9\n        /* \"contracts/PreSale.sol\":7257:7262  index */\n      dup7\n        /* \"contracts/PreSale.sol\":7247:7263  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_249\n      jump\t// in\n    tag_263:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":7240:7264  bought[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":7240:7268  bought[addresses[index]].add */\n      tag_204\n      swap1\n        /* \"contracts/PreSale.sol\":7240:7284  bought[addresses[index]].add(amounts[index]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/PreSale.sol\":7213:7219  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":7213:7237  bought[addresses[index]] */\n      0x00\n        /* \"contracts/PreSale.sol\":7220:7229  addresses */\n      dup8\n        /* \"contracts/PreSale.sol\":7230:7235  index */\n      dup6\n        /* \"contracts/PreSale.sol\":7220:7236  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_265\n      tag_249\n      jump\t// in\n    tag_265:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":7213:7237  bought[addresses[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/PreSale.sol\":7213:7284  bought[addresses[index]] = bought[addresses[index]].add(amounts[index]) */\n      sstore\n        /* \"contracts/PreSale.sol\":7316:7349  sumOfSoldTokens.add(amountBought) */\n      tag_266\n        /* \"contracts/PreSale.sol\":7316:7331  sumOfSoldTokens */\n      dup4\n        /* \"contracts/PreSale.sol\":7336:7348  amountBought */\n      dup3\n        /* \"contracts/PreSale.sol\":7316:7335  sumOfSoldTokens.add */\n      tag_204\n        /* \"contracts/PreSale.sol\":7316:7349  sumOfSoldTokens.add(amountBought) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/PreSale.sol\":7408:7420  paymentToken */\n      sload(0x02)\n        /* \"contracts/PreSale.sol\":7380:7396  addresses[index] */\n      dup7\n      mload\n        /* \"contracts/PreSale.sol\":7298:7349  sumOfSoldTokens = sumOfSoldTokens.add(amountBought) */\n      swap2\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":7408:7420  paymentToken */\n      and\n      swap1\n        /* \"contracts/PreSale.sol\":7363:7379  lastClaimAddress */\n      0x0e\n      swap1\n        /* \"contracts/PreSale.sol\":7408:7420  paymentToken */\n      0x00\n      swap1\n        /* \"contracts/PreSale.sol\":7380:7389  addresses */\n      dup9\n      swap1\n        /* \"contracts/PreSale.sol\":7390:7395  index */\n      dup7\n      swap1\n        /* \"contracts/PreSale.sol\":7380:7396  addresses[index] */\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_268\n      tag_249\n      jump\t// in\n    tag_268:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":7363:7397  lastClaimAddress[addresses[index]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PreSale.sol\":7363:7421  lastClaimAddress[addresses[index]] = address(paymentToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PreSale.sol\":6946:7432  {... */\n      pop\n        /* \"contracts/PreSale.sol\":6937:6944  index++ */\n      dup1\n      dup1\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"contracts/PreSale.sol\":6891:7432  for(uint index = 0; index < addresses.length; index++) {... */\n      jump(tag_244)\n    tag_245:\n      pop\n        /* \"contracts/PreSale.sol\":7454:7464  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":7454:7485  soldTokens.add(sumOfSoldTokens) */\n      tag_271\n      swap1\n        /* \"contracts/PreSale.sol\":7469:7484  sumOfSoldTokens */\n      dup3\n        /* \"contracts/PreSale.sol\":7454:7468  soldTokens.add */\n      tag_204\n        /* \"contracts/PreSale.sol\":7454:7485  soldTokens.add(sumOfSoldTokens) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/PreSale.sol\":7441:7451  soldTokens */\n      0x06\n        /* \"contracts/PreSale.sol\":7441:7485  soldTokens = soldTokens.add(sumOfSoldTokens) */\n      sstore\n        /* \"contracts/PreSale.sol\":7525:7541  addresses.length */\n      dup3\n      mload\n        /* \"contracts/PreSale.sol\":7500:7542  AddedToWhitelistFromSaft(addresses.length) */\n      mload(0x40)\n      0x6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PreSale.sol\":6726:7549  {... */\n      pop\n        /* \"contracts/PreSale.sol\":6628:7549  function whitelistFromSAFT(address[] memory addresses, uint256[] memory amounts) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PreSale.sol\":8163:8676  function getCurrentPercentage() public view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/PreSale.sol\":8216:8223  uint256 */\n      0x00\n        /* \"contracts/PreSale.sol\":8235:8253  uint256 cliffEnded */\n      dup1\n        /* \"contracts/PreSale.sol\":8256:8282  saleEnded.add(cliffPeriod) */\n      tag_282\n        /* \"contracts/PreSale.sol\":1812:1814  90 */\n      0x5a\n        /* \"contracts/PreSale.sol\":8256:8265  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":8256:8269  saleEnded.add */\n      tag_204\n      swap1\n        /* \"contracts/PreSale.sol\":8256:8282  saleEnded.add(cliffPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/PreSale.sol\":8235:8282  uint256 cliffEnded = saleEnded.add(cliffPeriod) */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":8292:8311  uint256 deltaPeriod */\n      0x00\n        /* \"contracts/PreSale.sol\":8314:8348  cliffEnded.add(afterDays * 1 days) */\n      tag_283\n        /* \"contracts/PreSale.sol\":8329:8338  afterDays */\n      sload(0x08)\n        /* \"contracts/PreSale.sol\":8341:8347  1 days */\n      0x015180\n        /* \"contracts/PreSale.sol\":8329:8347  afterDays * 1 days */\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/PreSale.sol\":8314:8324  cliffEnded */\n      dup4\n      swap1\n        /* \"contracts/PreSale.sol\":8314:8328  cliffEnded.add */\n      tag_204\n        /* \"contracts/PreSale.sol\":8314:8348  cliffEnded.add(afterDays * 1 days) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/PreSale.sol\":8292:8348  uint256 deltaPeriod = cliffEnded.add(afterDays * 1 days) */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":8358:8376  uint256 percentage */\n      0x00\n        /* \"contracts/PreSale.sol\":8391:8392  0 */\n      dup1\n        /* \"contracts/PreSale.sol\":8379:8388  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":8379:8392  saleEnded > 0 */\n      gt\n        /* \"contracts/PreSale.sol\":8379:8425  saleEnded > 0 && block.timestamp > deltaPeriod */\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n        /* \"contracts/PreSale.sol\":8414:8425  deltaPeriod */\n      dup2\n        /* \"contracts/PreSale.sol\":8396:8411  block.timestamp */\n      timestamp\n        /* \"contracts/PreSale.sol\":8396:8425  block.timestamp > deltaPeriod */\n      gt\n        /* \"contracts/PreSale.sol\":8379:8425  saleEnded > 0 && block.timestamp > deltaPeriod */\n    tag_286:\n        /* \"contracts/PreSale.sol\":8379:8615  saleEnded > 0 && block.timestamp > deltaPeriod... */\n      tag_287\n      jumpi\n        /* \"contracts/PreSale.sol\":1564:1567  100 */\n      0x64\n        /* \"contracts/PreSale.sol\":8379:8615  saleEnded > 0 && block.timestamp > deltaPeriod... */\n      jump(tag_289)\n    tag_287:\n        /* \"contracts/PreSale.sol\":8436:8581  block.timestamp.sub(deltaPeriod)... */\n      tag_289\n        /* \"contracts/PreSale.sol\":1564:1567  100 */\n      0x64\n        /* \"contracts/PreSale.sol\":8436:8540  block.timestamp.sub(deltaPeriod)... */\n      tag_290\n        /* \"contracts/PreSale.sol\":1688:1690  50 */\n      0x32\n        /* \"contracts/PreSale.sol\":8436:8502  block.timestamp.sub(deltaPeriod)... */\n      tag_219\n        /* \"contracts/PreSale.sol\":8486:8501  period * 1 days */\n      tag_292\n        /* \"contracts/PreSale.sol\":1467:1469  30 */\n      0x1e\n        /* \"contracts/PreSale.sol\":8495:8501  1 days */\n      0x015180\n        /* \"contracts/PreSale.sol\":8486:8501  period * 1 days */\n      tag_285\n      jump\t// in\n    tag_292:\n        /* \"contracts/PreSale.sol\":8436:8468  block.timestamp.sub(deltaPeriod) */\n      tag_220\n        /* \"contracts/PreSale.sol\":8436:8451  block.timestamp */\n      timestamp\n        /* \"contracts/PreSale.sol\":8456:8467  deltaPeriod */\n      dup10\n        /* \"contracts/PreSale.sol\":8436:8455  block.timestamp.sub */\n      tag_188\n        /* \"contracts/PreSale.sol\":8436:8468  block.timestamp.sub(deltaPeriod) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":8436:8540  block.timestamp.sub(deltaPeriod)... */\n    tag_290:\n        /* \"contracts/PreSale.sol\":8436:8557  block.timestamp.sub(deltaPeriod)... */\n      swap1\n      tag_204\n        /* \"contracts/PreSale.sol\":8436:8581  block.timestamp.sub(deltaPeriod)... */\n      jump\t// in\n    tag_289:\n        /* \"contracts/PreSale.sol\":8358:8615  uint256 percentage = saleEnded > 0 && block.timestamp > deltaPeriod... */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":8645:8649  1000 */\n      0x03e8\n        /* \"contracts/PreSale.sol\":8632:8642  percentage */\n      dup2\n        /* \"contracts/PreSale.sol\":8632:8649  percentage > 1000 */\n      gt\n        /* \"contracts/PreSale.sol\":8632:8669  percentage > 1000 ? 1000 : percentage */\n      tag_294\n      jumpi\n        /* \"contracts/PreSale.sol\":8659:8669  percentage */\n      dup1\n        /* \"contracts/PreSale.sol\":8632:8669  percentage > 1000 ? 1000 : percentage */\n      jump(tag_295)\n    tag_294:\n        /* \"contracts/PreSale.sol\":8652:8656  1000 */\n      0x03e8\n        /* \"contracts/PreSale.sol\":8632:8669  percentage > 1000 ? 1000 : percentage */\n    tag_295:\n        /* \"contracts/PreSale.sol\":8625:8669  return percentage > 1000 ? 1000 : percentage */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PreSale.sol\":8163:8676  function getCurrentPercentage() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PreSale.sol\":6259:6622  function whitelist(address[] memory addresses) public onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_299:\n        /* \"contracts/PreSale.sol\":6361:6364  100 */\n      0x64\n        /* \"contracts/PreSale.sol\":6341:6350  addresses */\n      dup2\n        /* \"contracts/PreSale.sol\":6341:6357  addresses.length */\n      mload\n        /* \"contracts/PreSale.sol\":6341:6364  addresses.length <= 100 */\n      gt\n      iszero\n        /* \"contracts/PreSale.sol\":6333:6441  require(addresses.length <= 100, \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_243\n      jump\t// in\n    tag_302:\n        /* \"contracts/PreSale.sol\":6455:6465  uint index */\n      0x00\n        /* \"contracts/PreSale.sol\":6451:6567  for(uint index = 0; index < addresses.length; index++) {... */\n    tag_304:\n        /* \"contracts/PreSale.sol\":6479:6488  addresses */\n      dup2\n        /* \"contracts/PreSale.sol\":6479:6495  addresses.length */\n      mload\n        /* \"contracts/PreSale.sol\":6471:6476  index */\n      dup2\n        /* \"contracts/PreSale.sol\":6471:6495  index < addresses.length */\n      lt\n        /* \"contracts/PreSale.sol\":6451:6567  for(uint index = 0; index < addresses.length; index++) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"contracts/PreSale.sol\":6552:6556  true */\n      0x01\n        /* \"contracts/PreSale.sol\":6520:6531  whitelisted */\n      0x0a\n        /* \"contracts/PreSale.sol\":6520:6549  whitelisted[addresses[index]] */\n      0x00\n        /* \"contracts/PreSale.sol\":6532:6541  addresses */\n      dup5\n        /* \"contracts/PreSale.sol\":6542:6547  index */\n      dup5\n        /* \"contracts/PreSale.sol\":6532:6548  addresses[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_249\n      jump\t// in\n    tag_308:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":6520:6549  whitelisted[addresses[index]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/PreSale.sol\":6520:6556  whitelisted[addresses[index]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":6497:6504  index++ */\n      dup1\n      tag_309\n      dup2\n      tag_270\n      jump\t// in\n    tag_309:\n      swap2\n      pop\n      pop\n        /* \"contracts/PreSale.sol\":6451:6567  for(uint index = 0; index < addresses.length; index++) {... */\n      jump(tag_304)\n    tag_305:\n      pop\n        /* \"contracts/PreSale.sol\":6598:6614  addresses.length */\n      dup1\n      mload\n        /* \"contracts/PreSale.sol\":6581:6615  AddedToWhitelist(addresses.length) */\n      mload(0x40)\n      0xf899e24720678b9547483d3c332e9a7e1eabb9c013bd2e0ff30d83806cf421f3\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PreSale.sol\":6259:6622  function whitelist(address[] memory addresses) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PreSale.sol\":5090:5268  function disableWhitelist() public onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_313:\n        /* \"contracts/PreSale.sol\":5153:5169  requireWhitelist */\n      and(0xff, sload(0x09))\n        /* \"contracts/PreSale.sol\":5145:5227  require(requireWhitelist, \"ABOAT:disableWhitelist: Whitelist is already disabled\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5598:5600   */\n      0x20\n        /* \"contracts/PreSale.sol\":5145:5227  require(requireWhitelist, \"ABOAT:disableWhitelist: Whitelist is already disabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5580:5601   */\n      mstore\n        /* \"#utility.yul\":5637:5639   */\n      0x35\n        /* \"#utility.yul\":5617:5635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5610:5640   */\n      mstore\n        /* \"#utility.yul\":5676:5710   */\n      0x41424f41543a64697361626c6557686974656c6973743a2057686974656c6973\n        /* \"#utility.yul\":5656:5674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5649:5711   */\n      mstore\n      shl(0x5a, 0x1d081a5cc8185b1c9958591e48191a5cd8589b1959)\n        /* \"#utility.yul\":5727:5745   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5720:5771   */\n      mstore\n        /* \"#utility.yul\":5788:5807   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":5145:5227  require(requireWhitelist, \"ABOAT:disableWhitelist: Whitelist is already disabled\") */\n      tag_179\n        /* \"#utility.yul\":5396:5813   */\n      jump\n        /* \"contracts/PreSale.sol\":5145:5227  require(requireWhitelist, \"ABOAT:disableWhitelist: Whitelist is already disabled\") */\n    tag_316:\n        /* \"contracts/PreSale.sol\":5237:5253  requireWhitelist */\n      0x09\n        /* \"contracts/PreSale.sol\":5237:5261  requireWhitelist = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":5090:5268  function disableWhitelist() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PreSale.sol\":9012:10063  function buy(uint256 amount) public payable {... */\n    tag_139:\n        /* \"contracts/PreSale.sol\":9074:9083  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":9074:9088  saleEnded == 0 */\n      iszero\n        /* \"contracts/PreSale.sol\":9066:9124  require(saleEnded == 0, \"ABOAT::buy: Sale already ended!\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14157:14159   */\n      0x20\n        /* \"contracts/PreSale.sol\":9066:9124  require(saleEnded == 0, \"ABOAT::buy: Sale already ended!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14139:14160   */\n      mstore\n        /* \"#utility.yul\":14196:14198   */\n      0x1f\n        /* \"#utility.yul\":14176:14194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14169:14199   */\n      mstore\n        /* \"#utility.yul\":14235:14268   */\n      0x41424f41543a3a6275793a2053616c6520616c726561647920656e6465642100\n        /* \"#utility.yul\":14215:14233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14208:14269   */\n      mstore\n        /* \"#utility.yul\":14286:14304   */\n      0x64\n      add\n        /* \"contracts/PreSale.sol\":9066:9124  require(saleEnded == 0, \"ABOAT::buy: Sale already ended!\") */\n      tag_179\n        /* \"#utility.yul\":13955:14310   */\n      jump\n        /* \"contracts/PreSale.sol\":9066:9124  require(saleEnded == 0, \"ABOAT::buy: Sale already ended!\") */\n    tag_320:\n        /* \"contracts/PreSale.sol\":9154:9164  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":9142:9165  whitelisted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":9142:9153  whitelisted */\n      0x0a\n        /* \"contracts/PreSale.sol\":9142:9165  whitelisted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/PreSale.sol\":9142:9186  whitelisted[msg.sender] || !requireWhitelist */\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/PreSale.sol\":9170:9186  requireWhitelist */\n      and(0xff, sload(0x09))\n        /* \"contracts/PreSale.sol\":9169:9186  !requireWhitelist */\n      iszero\n        /* \"contracts/PreSale.sol\":9142:9186  whitelisted[msg.sender] || !requireWhitelist */\n    tag_323:\n        /* \"contracts/PreSale.sol\":9134:9240  require(whitelisted[msg.sender] || !requireWhitelist, \"ABOAT::buy: You're not whitelisted for this sale!\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8520:8522   */\n      0x20\n        /* \"contracts/PreSale.sol\":9134:9240  require(whitelisted[msg.sender] || !requireWhitelist, \"ABOAT::buy: You're not whitelisted for this sale!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8502:8523   */\n      mstore\n        /* \"#utility.yul\":8559:8561   */\n      0x31\n        /* \"#utility.yul\":8539:8557   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8532:8562   */\n      mstore\n        /* \"#utility.yul\":8598:8632   */\n      0x41424f41543a3a6275793a20596f75277265206e6f742077686974656c697374\n        /* \"#utility.yul\":8578:8596   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8571:8633   */\n      mstore\n      shl(0x78, 0x656420666f7220746869732073616c6521)\n        /* \"#utility.yul\":8649:8667   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8642:8689   */\n      mstore\n        /* \"#utility.yul\":8706:8725   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":9134:9240  require(whitelisted[msg.sender] || !requireWhitelist, \"ABOAT::buy: You're not whitelisted for this sale!\") */\n      tag_179\n        /* \"#utility.yul\":8318:8731   */\n      jump\n        /* \"contracts/PreSale.sol\":9134:9240  require(whitelisted[msg.sender] || !requireWhitelist, \"ABOAT::buy: You're not whitelisted for this sale!\") */\n    tag_324:\n        /* \"contracts/PreSale.sol\":9276:9288  paymentToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/PreSale.sol\":9268:9303  address(paymentToken) == address(0) */\n      iszero\n        /* \"contracts/PreSale.sol\":9321:9332  !isEthToken */\n      dup1\n      iszero\n      dup1\n        /* \"contracts/PreSale.sol\":9321:9355  !isEthToken || msg.value == amount */\n      tag_327\n      jumpi\n      pop\n        /* \"contracts/PreSale.sol\":9349:9355  amount */\n      dup2\n        /* \"contracts/PreSale.sol\":9336:9345  msg.value */\n      callvalue\n        /* \"contracts/PreSale.sol\":9336:9355  msg.value == amount */\n      eq\n        /* \"contracts/PreSale.sol\":9321:9355  !isEthToken || msg.value == amount */\n    tag_327:\n        /* \"contracts/PreSale.sol\":9313:9412  require(!isEthToken || msg.value == amount, \"ABOAT::buy: Sent value doesn't meet the given amount\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14517:14519   */\n      0x20\n        /* \"contracts/PreSale.sol\":9313:9412  require(!isEthToken || msg.value == amount, \"ABOAT::buy: Sent value doesn't meet the given amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14499:14520   */\n      mstore\n        /* \"#utility.yul\":14556:14558   */\n      0x34\n        /* \"#utility.yul\":14536:14554   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14529:14559   */\n      mstore\n        /* \"#utility.yul\":14595:14629   */\n      0x41424f41543a3a6275793a2053656e742076616c756520646f65736e2774206d\n        /* \"#utility.yul\":14575:14593   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14568:14630   */\n      mstore\n      shl(0x62, 0x19595d081d1a194819da5d995b88185b5bdd5b9d)\n        /* \"#utility.yul\":14646:14664   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14639:14689   */\n      mstore\n        /* \"#utility.yul\":14706:14725   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":9313:9412  require(!isEthToken || msg.value == amount, \"ABOAT::buy: Sent value doesn't meet the given amount\") */\n      tag_179\n        /* \"#utility.yul\":14315:14731   */\n      jump\n        /* \"contracts/PreSale.sol\":9313:9412  require(!isEthToken || msg.value == amount, \"ABOAT::buy: Sent value doesn't meet the given amount\") */\n    tag_328:\n        /* \"contracts/PreSale.sol\":9464:9469  limit */\n      sload(0x04)\n        /* \"contracts/PreSale.sol\":9437:9447  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":9430:9448  bought[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":9430:9436  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":9430:9448  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":9430:9460  bought[msg.sender].add(amount) */\n      tag_331\n      swap1\n        /* \"contracts/PreSale.sol\":9453:9459  amount */\n      dup5\n        /* \"contracts/PreSale.sol\":9430:9452  bought[msg.sender].add */\n      tag_204\n        /* \"contracts/PreSale.sol\":9430:9460  bought[msg.sender].add(amount) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/PreSale.sol\":9430:9469  bought[msg.sender].add(amount) <= limit */\n      gt\n      iszero\n        /* \"contracts/PreSale.sol\":9422:9531  require(bought[msg.sender].add(amount) <= limit, \"ABOAT::buy: Amount would exceed the maximum allowed limit\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6427:6429   */\n      0x20\n        /* \"contracts/PreSale.sol\":9422:9531  require(bought[msg.sender].add(amount) <= limit, \"ABOAT::buy: Amount would exceed the maximum allowed limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6409:6430   */\n      mstore\n        /* \"#utility.yul\":6466:6468   */\n      0x39\n        /* \"#utility.yul\":6446:6464   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6439:6469   */\n      mstore\n        /* \"#utility.yul\":6505:6539   */\n      0x41424f41543a3a6275793a20416d6f756e7420776f756c642065786365656420\n        /* \"#utility.yul\":6485:6503   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6478:6540   */\n      mstore\n        /* \"#utility.yul\":6576:6603   */\n      0x746865206d6178696d756d20616c6c6f776564206c696d697400000000000000\n        /* \"#utility.yul\":6556:6574   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6549:6604   */\n      mstore\n        /* \"#utility.yul\":6621:6640   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":9422:9531  require(bought[msg.sender].add(amount) <= limit, \"ABOAT::buy: Amount would exceed the maximum allowed limit\") */\n      tag_179\n        /* \"#utility.yul\":6225:6646   */\n      jump\n        /* \"contracts/PreSale.sol\":9422:9531  require(bought[msg.sender].add(amount) <= limit, \"ABOAT::buy: Amount would exceed the maximum allowed limit\") */\n    tag_332:\n        /* \"contracts/PreSale.sol\":9585:9598  pricePerToken */\n      sload(0x03)\n        /* \"contracts/PreSale.sol\":9541:9561  uint256 amountBought */\n      0x00\n      swap1\n        /* \"contracts/PreSale.sol\":9564:9599  amount.mul(1e18).div(pricePerToken) */\n      tag_335\n      swap1\n        /* \"contracts/PreSale.sol\":9564:9580  amount.mul(1e18) */\n      tag_220\n        /* \"contracts/PreSale.sol\":9564:9570  amount */\n      dup6\n        /* \"contracts/PreSale.sol\":9575:9579  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/PreSale.sol\":9564:9574  amount.mul */\n      tag_203\n        /* \"contracts/PreSale.sol\":9564:9580  amount.mul(1e18) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":9564:9599  amount.mul(1e18).div(pricePerToken) */\n    tag_335:\n        /* \"contracts/PreSale.sol\":9541:9599  uint256 amountBought = amount.mul(1e18).div(pricePerToken) */\n      swap1\n      pop\n        /* \"contracts/PreSale.sol\":9659:9660  0 */\n      0x00\n        /* \"contracts/PreSale.sol\":9617:9656  getRemainingBalance().sub(amountBought) */\n      tag_337\n        /* \"contracts/PreSale.sol\":9643:9655  amountBought */\n      dup3\n        /* \"contracts/PreSale.sol\":9617:9638  getRemainingBalance() */\n      tag_195\n        /* \"contracts/PreSale.sol\":9617:9636  getRemainingBalance */\n      tag_56\n        /* \"contracts/PreSale.sol\":9617:9638  getRemainingBalance() */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":9617:9656  getRemainingBalance().sub(amountBought) */\n    tag_337:\n        /* \"contracts/PreSale.sol\":9617:9660  getRemainingBalance().sub(amountBought) > 0 */\n      gt\n        /* \"contracts/PreSale.sol\":9609:9718  require(getRemainingBalance().sub(amountBought) > 0, \"ABOAT::buy: Amount would exceed the remaining balance\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_258\n      jump\t// in\n    tag_339:\n        /* \"contracts/PreSale.sol\":9732:9742  isEthToken */\n      dup2\n        /* \"contracts/PreSale.sol\":9728:9842  if(!isEthToken) {... */\n      tag_342\n      jumpi\n        /* \"contracts/PreSale.sol\":9758:9770  paymentToken */\n      sload(0x02)\n        /* \"contracts/PreSale.sol\":9758:9831  paymentToken.safeTransferFrom(address(msg.sender), address(this), amount) */\n      tag_342\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":9758:9770  paymentToken */\n      and\n        /* \"contracts/PreSale.sol\":9796:9806  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":9817:9821  this */\n      address\n        /* \"contracts/PreSale.sol\":9824:9830  amount */\n      dup7\n        /* \"contracts/PreSale.sol\":9758:9787  paymentToken.safeTransferFrom */\n      tag_343\n        /* \"contracts/PreSale.sol\":9758:9831  paymentToken.safeTransferFrom(address(msg.sender), address(this), amount) */\n      jump\t// in\n    tag_342:\n        /* \"contracts/PreSale.sol\":9879:9889  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":9872:9890  bought[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":9872:9878  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":9872:9890  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PreSale.sol\":9872:9902  bought[msg.sender].add(amount) */\n      tag_344\n      swap1\n        /* \"contracts/PreSale.sol\":9895:9901  amount */\n      dup5\n        /* \"contracts/PreSale.sol\":9872:9894  bought[msg.sender].add */\n      tag_204\n        /* \"contracts/PreSale.sol\":9872:9902  bought[msg.sender].add(amount) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/PreSale.sol\":9858:9868  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":9851:9869  bought[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":9851:9857  bought */\n      0x0b\n        /* \"contracts/PreSale.sol\":9851:9869  bought[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/PreSale.sol\":9851:9902  bought[msg.sender] = bought[msg.sender].add(amount) */\n      sstore\n        /* \"contracts/PreSale.sol\":9925:9935  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":9925:9953  soldTokens.add(amountBought) */\n      tag_345\n      swap1\n        /* \"contracts/PreSale.sol\":9940:9952  amountBought */\n      dup3\n        /* \"contracts/PreSale.sol\":9925:9939  soldTokens.add */\n      tag_204\n        /* \"contracts/PreSale.sol\":9925:9953  soldTokens.add(amountBought) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/PreSale.sol\":9912:9922  soldTokens */\n      0x06\n        /* \"contracts/PreSale.sol\":9912:9953  soldTokens = soldTokens.add(amountBought) */\n      sstore\n        /* \"contracts/PreSale.sol\":10002:10014  paymentToken */\n      sload(0x02)\n        /* \"contracts/PreSale.sol\":9980:9990  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":10002:10014  paymentToken */\n      0x00\n        /* \"contracts/PreSale.sol\":9963:9991  lastClaimAddress[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":9963:9979  lastClaimAddress */\n      0x0e\n        /* \"contracts/PreSale.sol\":9963:9991  lastClaimAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/PreSale.sol\":9963:10015  lastClaimAddress[msg.sender] = address(paymentToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":10002:10014  paymentToken */\n      swap1\n      swap6\n      and\n        /* \"contracts/PreSale.sol\":9963:10015  lastClaimAddress[msg.sender] = address(paymentToken) */\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/PreSale.sol\":10030:10056  Bought(msg.sender, amount) */\n      swap2\n      mload\n        /* \"contracts/PreSale.sol\":10049:10055  amount */\n      dup6\n      swap3\n        /* \"contracts/PreSale.sol\":10030:10056  Bought(msg.sender, amount) */\n      0xc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d67\n      swap2\n      log3\n        /* \"contracts/PreSale.sol\":9056:10063  {... */\n      pop\n      pop\n        /* \"contracts/PreSale.sol\":9012:10063  function buy(uint256 amount) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/PreSale.sol\":3916:5080  function claimAndEndSale(uint256 _afterDays) public onlyOwner {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_349:\n        /* \"contracts/PreSale.sol\":3996:4005  saleEnded */\n      sload(0x07)\n        /* \"contracts/PreSale.sol\":3996:4010  saleEnded == 0 */\n      iszero\n        /* \"contracts/PreSale.sol\":3988:4057  require(saleEnded == 0, \"ABOAT::claimAndEndSale: Sale already ended\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12928:12930   */\n      0x20\n        /* \"contracts/PreSale.sol\":3988:4057  require(saleEnded == 0, \"ABOAT::claimAndEndSale: Sale already ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12910:12931   */\n      mstore\n        /* \"#utility.yul\":12967:12969   */\n      0x2a\n        /* \"#utility.yul\":12947:12965   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12940:12970   */\n      mstore\n        /* \"#utility.yul\":13006:13040   */\n      0x41424f41543a3a636c61696d416e64456e6453616c653a2053616c6520616c72\n        /* \"#utility.yul\":12986:13004   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12979:13041   */\n      mstore\n      shl(0xb2, 0x1958591e48195b991959)\n        /* \"#utility.yul\":13057:13075   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13050:13090   */\n      mstore\n        /* \"#utility.yul\":13107:13126   */\n      0x84\n      add\n        /* \"contracts/PreSale.sol\":3988:4057  require(saleEnded == 0, \"ABOAT::claimAndEndSale: Sale already ended\") */\n      tag_179\n        /* \"#utility.yul\":12726:13132   */\n      jump\n        /* \"contracts/PreSale.sol\":3988:4057  require(saleEnded == 0, \"ABOAT::claimAndEndSale: Sale already ended\") */\n    tag_352:\n        /* \"contracts/PreSale.sol\":4079:4094  block.timestamp */\n      timestamp\n        /* \"contracts/PreSale.sol\":4067:4076  saleEnded */\n      0x07\n        /* \"contracts/PreSale.sol\":4067:4094  saleEnded = block.timestamp */\n      sstore\n        /* \"contracts/PreSale.sol\":4118:4128  soldTokens */\n      sload(0x06)\n        /* \"contracts/PreSale.sol\":4107:4114  softcap */\n      sload(0x05)\n        /* \"contracts/PreSale.sol\":4107:4128  softcap <= soldTokens */\n      gt\n        /* \"contracts/PreSale.sol\":4104:5012  if(softcap <= soldTokens) {... */\n      tag_355\n      jumpi\n        /* \"contracts/PreSale.sol\":4278:4287  afterDays */\n      0x08\n        /* \"contracts/PreSale.sol\":4278:4300  afterDays = _afterDays */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/PreSale.sol\":4325:4337  paymentToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/PreSale.sol\":4317:4352  address(paymentToken) != address(0) */\n      iszero\n        /* \"contracts/PreSale.sol\":4314:4592  if(address(paymentToken) != address(0)) {... */\n      tag_356\n      jumpi\n        /* \"contracts/PreSale.sol\":4408:4420  paymentToken */\n      sload(0x02)\n        /* \"contracts/PreSale.sol\":4435:4472  paymentToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":4466:4470  this */\n      address\n        /* \"contracts/PreSale.sol\":4435:4472  paymentToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3924   */\n      mstore\n        /* \"contracts/PreSale.sol\":4372:4473  TransferHelper.safeTransfer(address(paymentToken), msg.sender, paymentToken.balanceOf(address(this))) */\n      tag_357\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":4408:4420  paymentToken */\n      and\n      swap1\n        /* \"contracts/PreSale.sol\":4423:4433  msg.sender */\n      caller\n      swap1\n        /* \"contracts/PreSale.sol\":4408:4420  paymentToken */\n      dup3\n      swap1\n        /* \"contracts/PreSale.sol\":4435:4457  paymentToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3846:3864   */\n      0x24\n      add\n        /* \"contracts/PreSale.sol\":4435:4472  paymentToken.balanceOf(address(this)) */\n    tag_358:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_359:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_362:\n        /* \"contracts/PreSale.sol\":4372:4399  TransferHelper.safeTransfer */\n      tag_226\n        /* \"contracts/PreSale.sol\":4372:4473  TransferHelper.safeTransfer(address(paymentToken), msg.sender, paymentToken.balanceOf(address(this))) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/PreSale.sol\":4104:5012  if(softcap <= soldTokens) {... */\n      jump(tag_374)\n        /* \"contracts/PreSale.sol\":4314:4592  if(address(paymentToken) != address(0)) {... */\n    tag_356:\n        /* \"contracts/PreSale.sol\":4512:4577  TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      tag_357\n        /* \"contracts/PreSale.sol\":4543:4553  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":4555:4576  address(this).balance */\n      selfbalance\n        /* \"contracts/PreSale.sol\":4512:4542  TransferHelper.safeTransferETH */\n      tag_229\n        /* \"contracts/PreSale.sol\":4512:4577  TransferHelper.safeTransferETH(msg.sender, address(this).balance) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":4104:5012  if(softcap <= soldTokens) {... */\n    tag_355:\n        /* \"contracts/PreSale.sol\":4710:4711  0 */\n      0x00\n        /* \"contracts/PreSale.sol\":4698:4707  afterDays */\n      0x08\n        /* \"contracts/PreSale.sol\":4698:4711  afterDays = 0 */\n      sstore\n        /* \"contracts/PreSale.sol\":4737:4748  rewardToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/PreSale.sol\":4729:4763  address(rewardToken) != address(0) */\n      iszero\n        /* \"contracts/PreSale.sol\":4726:5002  if(address(rewardToken) != address(0)) {... */\n      tag_366\n      jumpi\n        /* \"contracts/PreSale.sol\":4819:4830  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":4845:4881  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":4875:4879  this */\n      address\n        /* \"contracts/PreSale.sol\":4845:4881  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3924   */\n      mstore\n        /* \"contracts/PreSale.sol\":4783:4882  TransferHelper.safeTransfer(address(rewardToken), msg.sender, rewardToken.balanceOf(address(this))) */\n      tag_357\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":4819:4830  rewardToken */\n      and\n      swap1\n        /* \"contracts/PreSale.sol\":4833:4843  msg.sender */\n      caller\n      swap1\n        /* \"contracts/PreSale.sol\":4819:4830  rewardToken */\n      dup3\n      swap1\n        /* \"contracts/PreSale.sol\":4845:4866  rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3846:3864   */\n      0x24\n      add\n        /* \"contracts/PreSale.sol\":4845:4881  rewardToken.balanceOf(address(this)) */\n      tag_358\n        /* \"#utility.yul\":3727:3930   */\n      jump\n        /* \"contracts/PreSale.sol\":4726:5002  if(address(rewardToken) != address(0)) {... */\n    tag_366:\n        /* \"contracts/PreSale.sol\":4921:4987  TransferHelper.safeTransferETH(msg.sender,  address(this).balance) */\n      tag_374\n        /* \"contracts/PreSale.sol\":4952:4962  msg.sender */\n      caller\n        /* \"contracts/PreSale.sol\":4965:4986  address(this).balance */\n      selfbalance\n        /* \"contracts/PreSale.sol\":4921:4951  TransferHelper.safeTransferETH */\n      tag_229\n        /* \"contracts/PreSale.sol\":4921:4987  TransferHelper.safeTransferETH(msg.sender,  address(this).balance) */\n      jump\t// in\n    tag_374:\n        /* \"contracts/PreSale.sol\":5050:5059  afterDays */\n      sload(0x08)\n        /* \"contracts/PreSale.sol\":5036:5072  saleEnded.add(afterDays.mul(1 days)) */\n      tag_375\n      swap1\n        /* \"contracts/PreSale.sol\":5050:5071  afterDays.mul(1 days) */\n      tag_202\n      swap1\n        /* \"contracts/PreSale.sol\":5064:5070  1 days */\n      0x015180\n        /* \"contracts/PreSale.sol\":5050:5063  afterDays.mul */\n      tag_203\n        /* \"contracts/PreSale.sol\":5050:5071  afterDays.mul(1 days) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":5036:5072  saleEnded.add(afterDays.mul(1 days)) */\n    tag_375:\n        /* \"contracts/PreSale.sol\":5026:5073  SaleEnded(saleEnded.add(afterDays.mul(1 days))) */\n      mload(0x40)\n      0x94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PreSale.sol\":3916:5080  function claimAndEndSale(uint256 _afterDays) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6020:6022   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6002:6023   */\n      mstore\n        /* \"#utility.yul\":6059:6061   */\n      0x26\n        /* \"#utility.yul\":6039:6057   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6032:6062   */\n      mstore\n        /* \"#utility.yul\":6098:6132   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6078:6096   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6071:6133   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6149:6167   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6142:6178   */\n      mstore\n        /* \"#utility.yul\":6195:6214   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_179\n        /* \"#utility.yul\":5818:6220   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_383:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n        /* \"contracts/PreSale.sol\":5546:6059  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_390:\n        /* \"contracts/PreSale.sol\":5651:5662  rewardToken */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":5632:5662  _newRewardToken != rewardToken */\n      dup3\n      dup2\n      and\n        /* \"contracts/PreSale.sol\":5651:5662  rewardToken */\n      swap2\n      and\n        /* \"contracts/PreSale.sol\":5632:5662  _newRewardToken != rewardToken */\n      eq\n      iszero\n        /* \"contracts/PreSale.sol\":5624:5737  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      tag_393\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"contracts/PreSale.sol\":5624:5737  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9401:9422   */\n      mstore\n        /* \"#utility.yul\":9458:9460   */\n      0x46\n        /* \"#utility.yul\":9438:9456   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9431:9461   */\n      mstore\n        /* \"#utility.yul\":9497:9531   */\n      0x41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265\n        /* \"#utility.yul\":9477:9495   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9470:9532   */\n      mstore\n        /* \"#utility.yul\":9568:9602   */\n      0x776172642073686f756c6420626520646966666572656e742066726f6d206375\n        /* \"#utility.yul\":9548:9566   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9541:9603   */\n      mstore\n      shl(0xd1, 0x393932b73a17)\n        /* \"#utility.yul\":9619:9638   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":9612:9649   */\n      mstore\n        /* \"#utility.yul\":9666:9685   */\n      0xa4\n      add\n        /* \"contracts/PreSale.sol\":5624:5737  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n      tag_179\n        /* \"#utility.yul\":9217:9691   */\n      jump\n        /* \"contracts/PreSale.sol\":5624:5737  require(_newRewardToken != rewardToken, \"ABOAT::updateRewardToken: New reward should be different from current.\") */\n    tag_393:\n        /* \"contracts/PreSale.sol\":5799:5810  rewardToken */\n      sload(0x01)\n        /* \"contracts/PreSale.sol\":5799:5835  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":5829:5833  this */\n      address\n        /* \"contracts/PreSale.sol\":5799:5835  rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3924   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":5799:5810  rewardToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PreSale.sol\":5799:5820  rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3846:3864   */\n      0x24\n      add\n        /* \"contracts/PreSale.sol\":5799:5835  rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_397:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_399\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_399:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_400\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_400:\n        /* \"contracts/PreSale.sol\":5755:5795  _newRewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PreSale.sol\":5789:5793  this */\n      address\n        /* \"contracts/PreSale.sol\":5755:5795  _newRewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3924   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PreSale.sol\":5755:5780  _newRewardToken.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3846:3864   */\n      0x24\n      add\n        /* \"contracts/PreSale.sol\":5755:5795  _newRewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_402:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_404\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_404:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_405\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_405:\n        /* \"contracts/PreSale.sol\":5755:5835  _newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/PreSale.sol\":5747:5959  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10400:10402   */\n      0x20\n        /* \"contracts/PreSale.sol\":5747:5959  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10382:10403   */\n      mstore\n        /* \"#utility.yul\":10439:10442   */\n      0x77\n        /* \"#utility.yul\":10419:10437   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10412:10443   */\n      mstore\n        /* \"#utility.yul\":10479:10513   */\n      0x41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f\n        /* \"#utility.yul\":10459:10477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10452:10514   */\n      mstore\n        /* \"#utility.yul\":10550:10584   */\n      0x6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468\n        /* \"#utility.yul\":10530:10548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10523:10585   */\n      mstore\n        /* \"#utility.yul\":10622:10656   */\n      0x652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d20\n        /* \"#utility.yul\":10601:10620   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10594:10657   */\n      mstore\n        /* \"#utility.yul\":10694:10719   */\n      0x7468652063757272656e7420726577617264546f6b656e000000000000000000\n        /* \"#utility.yul\":10673:10692   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":10666:10720   */\n      mstore\n        /* \"#utility.yul\":10737:10756   */\n      0xc4\n      add\n        /* \"contracts/PreSale.sol\":5747:5959  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n      tag_179\n        /* \"#utility.yul\":10198:10762   */\n      jump\n        /* \"contracts/PreSale.sol\":5747:5959  require(_newRewardToken.balanceOf(address(this)) == rewardToken.balanceOf(address(this)), \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\") */\n    tag_406:\n        /* \"contracts/PreSale.sol\":5969:5980  rewardToken */\n      0x01\n        /* \"contracts/PreSale.sol\":5969:5998  rewardToken = _newRewardToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/PreSale.sol\":6013:6052  ChangeRewardToken(address(rewardToken)) */\n      mload(0x40)\n      0x3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f83\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/PreSale.sol\":5546:6059  function updateRewardToken(IERC20 _newRewardToken) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3097:3104  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3127:3128  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3124  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3116:3128  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3440:3447  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3470:3471  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3467  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_285\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2760:2761  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2757  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_417\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3855:3856  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3852  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_420\n      jump\t// in\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n    tag_226:\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4507:4539   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4489:4540   */\n      mstore\n        /* \"#utility.yul\":4556:4574   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4549:4583   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4462:4480   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":371:381  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_424\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_425\n      jump\t// in\n    tag_424:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_428\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_427)\n    tag_428:\n      0x60\n      swap2\n      pop\n    tag_427:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":323:428  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":459:466  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":459:516  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_431\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":471:482  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":471:487  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":471:515  data.length == 0 || abi.decode(data, (bool)) */\n      tag_431\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":502:506  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":491:515  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_431\n      swap2\n      swap1\n      tag_432\n      jump\t// in\n    tag_431:\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12514:12516   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12496:12517   */\n      mstore\n        /* \"#utility.yul\":12553:12555   */\n      0x2d\n        /* \"#utility.yul\":12533:12551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12526:12556   */\n      mstore\n        /* \"#utility.yul\":12592:12626   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":12572:12590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12565:12627   */\n      mstore\n      shl(0x9a, 0x185b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":12643:12661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12636:12679   */\n      mstore\n        /* \"#utility.yul\":12696:12715   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_179\n        /* \"#utility.yul\":12312:12721   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n    tag_433:\n        /* \"contracts/libraries/TransferHelper.sol\":313:594  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_229:\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1098:1110  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1123  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1131:1136  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1151  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_441\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_441:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_444\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_443)\n    tag_444:\n      0x60\n      swap2\n      pop\n    tag_443:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1097:1151  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1182:1189  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6835:6856   */\n      mstore\n        /* \"#utility.yul\":6892:6894   */\n      0x34\n        /* \"#utility.yul\":6872:6890   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6865:6895   */\n      mstore\n        /* \"#utility.yul\":6931:6965   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":6911:6929   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6904:6966   */\n      mstore\n      shl(0x62, 0x08115512081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":6982:7000   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6975:7025   */\n      mstore\n        /* \"#utility.yul\":7042:7061   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_179\n        /* \"#utility.yul\":6651:7067   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n    tag_445:\n        /* \"contracts/libraries/TransferHelper.sol\":1087:1274  {... */\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":845:1086  function safeTransferFrom(... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4193:4208   */\n      dup6\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4175:4209   */\n      mstore\n        /* \"#utility.yul\":4245:4260   */\n      dup5\n      and\n        /* \"#utility.yul\":4225:4243   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4218:4261   */\n      mstore\n        /* \"#utility.yul\":4277:4295   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4270:4304   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4110:4128   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1010:1078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":983:1079  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_450\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1003:1008  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":983:1002  _callOptionalReturn */\n      tag_453\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":983:1079  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":845:1086  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3140:3846  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_453:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3559:3582  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_455\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3613:3617  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3593:3598  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3612  address(token).functionCall */\n      and\n      tag_456\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3585:3654  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3668:3685  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3559:3654  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3668:3689  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3664:3840  if (returndata.length > 0) {... */\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3763:3773  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3752:3782  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_458\n      swap2\n      swap1\n      tag_432\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13339:13341   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13321:13342   */\n      mstore\n        /* \"#utility.yul\":13378:13380   */\n      0x2a\n        /* \"#utility.yul\":13358:13376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13351:13381   */\n      mstore\n        /* \"#utility.yul\":13417:13451   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13397:13415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13390:13452   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":13468:13486   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13461:13501   */\n      mstore\n        /* \"#utility.yul\":13518:13537   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3829  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_179\n        /* \"#utility.yul\":13137:13543   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3461:3684  function functionCall(... */\n    tag_456:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3594:3606  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3677  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_463\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3647:3653  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3655:3659  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3661:3662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3676  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3646  functionCallWithValue */\n      tag_464\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3625:3677  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3618:3677  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3461:3684  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4548:5048  function functionCallWithValue(... */\n    tag_464:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4713:4725  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4770:4775  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4745:4766  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4745:4775  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8095:8116   */\n      mstore\n        /* \"#utility.yul\":8152:8154   */\n      0x26\n        /* \"#utility.yul\":8132:8150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8125:8155   */\n      mstore\n        /* \"#utility.yul\":8191:8225   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8171:8189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8164:8226   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":8242:8260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8235:8271   */\n      mstore\n        /* \"#utility.yul\":8288:8307   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_179\n        /* \"#utility.yul\":7911:8313   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4737:4818  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_466:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1034:1054  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11752:11754   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11734:11755   */\n      mstore\n        /* \"#utility.yul\":11791:11793   */\n      0x1d\n        /* \"#utility.yul\":11771:11789   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11764:11794   */\n      mstore\n        /* \"#utility.yul\":11830:11861   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":11810:11828   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11803:11862   */\n      mstore\n        /* \"#utility.yul\":11879:11897   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n      tag_179\n        /* \"#utility.yul\":11550:11903   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4828:4888  require(isContract(target), \"Address: call to non-contract\") */\n    tag_471:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4900:4912  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4914:4937  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4947  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4952  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:4965  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4967:4971  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4941:4972  target.call{value: value}(data) */\n      mload(0x40)\n      tag_474\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_474:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_477\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_476)\n    tag_477:\n      0x60\n      swap2\n      pop\n    tag_476:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4899:4972  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5041  _verifyCallResult(success, returndata, errorMessage) */\n      tag_478\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5007:5014  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5016:5026  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5028:5040  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5006  _verifyCallResult */\n      tag_479\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4989:5041  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_478:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4982:5041  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4548:5048  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6950:7642  function _verifyCallResult(... */\n    tag_479:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7096:7108  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7124:7131  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7120:7636  if (success) {... */\n      iszero\n      tag_482\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7154:7164  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7147:7164  return returndata */\n      jump(tag_411)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7120:7636  if (success) {... */\n    tag_482:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7265:7282  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7265:7286  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7626  if (returndata.length > 0) {... */\n      tag_484\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7459:7469  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7453:7470  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7519:7534  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7506:7516  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7502:7504  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7498:7517  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7491:7535  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7626  if (returndata.length > 0) {... */\n    tag_484:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7598:7610  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7591:7611  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_487\n      jump\t// in\n        /* \"#utility.yul\":14:762   */\n    tag_489:\n        /* \"#utility.yul\":68:73   */\n      0x00\n        /* \"#utility.yul\":121:124   */\n      dup3\n        /* \"#utility.yul\":114:118   */\n      0x1f\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":102:119   */\n      add\n        /* \"#utility.yul\":98:125   */\n      slt\n        /* \"#utility.yul\":88:143   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":136:137   */\n      dup1\n        /* \"#utility.yul\":129:141   */\n      revert\n        /* \"#utility.yul\":88:143   */\n    tag_491:\n        /* \"#utility.yul\":175:181   */\n      dup2\n        /* \"#utility.yul\":162:182   */\n      calldataload\n        /* \"#utility.yul\":201:205   */\n      0x20\n        /* \"#utility.yul\":225:285   */\n      tag_492\n        /* \"#utility.yul\":241:284   */\n      tag_493\n        /* \"#utility.yul\":281:283   */\n      dup4\n        /* \"#utility.yul\":241:284   */\n      tag_494\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":225:285   */\n      tag_495\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":307:310   */\n      dup1\n        /* \"#utility.yul\":331:333   */\n      dup4\n        /* \"#utility.yul\":326:329   */\n      dup3\n        /* \"#utility.yul\":319:334   */\n      mstore\n        /* \"#utility.yul\":359:361   */\n      dup3\n        /* \"#utility.yul\":354:357   */\n      dup3\n        /* \"#utility.yul\":350:362   */\n      add\n        /* \"#utility.yul\":343:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":394:396   */\n      dup3\n        /* \"#utility.yul\":386:392   */\n      dup7\n        /* \"#utility.yul\":382:397   */\n      add\n        /* \"#utility.yul\":446:449   */\n      dup8\n        /* \"#utility.yul\":441:443   */\n      dup5\n        /* \"#utility.yul\":435:437   */\n      dup7\n        /* \"#utility.yul\":432:433   */\n      0x05\n        /* \"#utility.yul\":428:438   */\n      shl\n        /* \"#utility.yul\":420:426   */\n      dup10\n        /* \"#utility.yul\":416:439   */\n      add\n        /* \"#utility.yul\":412:444   */\n      add\n        /* \"#utility.yul\":409:450   */\n      gt\n        /* \"#utility.yul\":406:467   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":460:461   */\n      dup1\n        /* \"#utility.yul\":453:465   */\n      revert\n        /* \"#utility.yul\":406:467   */\n    tag_496:\n        /* \"#utility.yul\":485:486   */\n      0x00\n        /* \"#utility.yul\":495:733   */\n    tag_497:\n        /* \"#utility.yul\":509:511   */\n      dup6\n        /* \"#utility.yul\":506:507   */\n      dup2\n        /* \"#utility.yul\":503:512   */\n      lt\n        /* \"#utility.yul\":495:733   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":580:583   */\n      dup2\n        /* \"#utility.yul\":567:584   */\n      calldataload\n        /* \"#utility.yul\":597:628   */\n      tag_500\n        /* \"#utility.yul\":622:627   */\n      dup2\n        /* \"#utility.yul\":597:628   */\n      tag_501\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":641:659   */\n      dup5\n      mstore\n        /* \"#utility.yul\":679:691   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":711:723   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":527:528   */\n      0x01\n        /* \"#utility.yul\":520:529   */\n      add\n        /* \"#utility.yul\":495:733   */\n      jump(tag_497)\n    tag_499:\n      pop\n        /* \"#utility.yul\":751:756   */\n      swap1\n      swap8\n        /* \"#utility.yul\":14:762   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":767:1014   */\n    tag_78:\n        /* \"#utility.yul\":826:832   */\n      0x00\n        /* \"#utility.yul\":879:881   */\n      0x20\n        /* \"#utility.yul\":867:876   */\n      dup3\n        /* \"#utility.yul\":858:865   */\n      dup5\n        /* \"#utility.yul\":854:877   */\n      sub\n        /* \"#utility.yul\":850:882   */\n      slt\n        /* \"#utility.yul\":847:899   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":895:896   */\n      0x00\n        /* \"#utility.yul\":892:893   */\n      dup1\n        /* \"#utility.yul\":885:897   */\n      revert\n        /* \"#utility.yul\":847:899   */\n    tag_503:\n        /* \"#utility.yul\":934:943   */\n      dup2\n        /* \"#utility.yul\":921:944   */\n      calldataload\n        /* \"#utility.yul\":953:984   */\n      tag_411\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":953:984   */\n      tag_501\n      jump\t// in\n        /* \"#utility.yul\":1019:1367   */\n    tag_122:\n        /* \"#utility.yul\":1103:1109   */\n      0x00\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1144:1153   */\n      dup3\n        /* \"#utility.yul\":1135:1142   */\n      dup5\n        /* \"#utility.yul\":1131:1154   */\n      sub\n        /* \"#utility.yul\":1127:1159   */\n      slt\n        /* \"#utility.yul\":1124:1176   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":1172:1173   */\n      0x00\n        /* \"#utility.yul\":1169:1170   */\n      dup1\n        /* \"#utility.yul\":1162:1174   */\n      revert\n        /* \"#utility.yul\":1124:1176   */\n    tag_506:\n        /* \"#utility.yul\":1212:1221   */\n      dup2\n        /* \"#utility.yul\":1199:1222   */\n      calldataload\n        /* \"#utility.yul\":1245:1263   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1237:1243   */\n      dup2\n        /* \"#utility.yul\":1234:1264   */\n      gt\n        /* \"#utility.yul\":1231:1281   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":1277:1278   */\n      0x00\n        /* \"#utility.yul\":1274:1275   */\n      dup1\n        /* \"#utility.yul\":1267:1279   */\n      revert\n        /* \"#utility.yul\":1231:1281   */\n    tag_507:\n        /* \"#utility.yul\":1300:1361   */\n      tag_463\n        /* \"#utility.yul\":1353:1360   */\n      dup5\n        /* \"#utility.yul\":1344:1350   */\n      dup3\n        /* \"#utility.yul\":1333:1342   */\n      dup6\n        /* \"#utility.yul\":1329:1351   */\n      add\n        /* \"#utility.yul\":1300:1361   */\n      tag_489\n      jump\t// in\n        /* \"#utility.yul\":1372:2521   */\n    tag_69:\n        /* \"#utility.yul\":1490:1496   */\n      0x00\n        /* \"#utility.yul\":1498:1504   */\n      dup1\n        /* \"#utility.yul\":1551:1553   */\n      0x40\n        /* \"#utility.yul\":1539:1548   */\n      dup4\n        /* \"#utility.yul\":1530:1537   */\n      dup6\n        /* \"#utility.yul\":1526:1549   */\n      sub\n        /* \"#utility.yul\":1522:1554   */\n      slt\n        /* \"#utility.yul\":1519:1571   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1564:1565   */\n      dup1\n        /* \"#utility.yul\":1557:1569   */\n      revert\n        /* \"#utility.yul\":1519:1571   */\n    tag_510:\n        /* \"#utility.yul\":1607:1616   */\n      dup3\n        /* \"#utility.yul\":1594:1617   */\n      calldataload\n        /* \"#utility.yul\":1636:1654   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1677:1679   */\n      dup1\n        /* \"#utility.yul\":1669:1675   */\n      dup3\n        /* \"#utility.yul\":1666:1680   */\n      gt\n        /* \"#utility.yul\":1663:1697   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":1693:1694   */\n      0x00\n        /* \"#utility.yul\":1690:1691   */\n      dup1\n        /* \"#utility.yul\":1683:1695   */\n      revert\n        /* \"#utility.yul\":1663:1697   */\n    tag_511:\n        /* \"#utility.yul\":1716:1777   */\n      tag_512\n        /* \"#utility.yul\":1769:1776   */\n      dup7\n        /* \"#utility.yul\":1760:1766   */\n      dup4\n        /* \"#utility.yul\":1749:1758   */\n      dup8\n        /* \"#utility.yul\":1745:1767   */\n      add\n        /* \"#utility.yul\":1716:1777   */\n      tag_489\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1706:1777   */\n      swap4\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x20\n        /* \"#utility.yul\":1786:1798   */\n      swap2\n      pop\n        /* \"#utility.yul\":1851:1853   */\n      dup2\n        /* \"#utility.yul\":1840:1849   */\n      dup6\n        /* \"#utility.yul\":1836:1854   */\n      add\n        /* \"#utility.yul\":1823:1855   */\n      calldataload\n        /* \"#utility.yul\":1880:1882   */\n      dup2\n        /* \"#utility.yul\":1870:1878   */\n      dup2\n        /* \"#utility.yul\":1867:1883   */\n      gt\n        /* \"#utility.yul\":1864:1900   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1893:1894   */\n      dup1\n        /* \"#utility.yul\":1886:1898   */\n      revert\n        /* \"#utility.yul\":1864:1900   */\n    tag_513:\n        /* \"#utility.yul\":1919:1943   */\n      dup6\n      add\n      swap1\n      pop\n        /* \"#utility.yul\":1974:1978   */\n      0x1f\n        /* \"#utility.yul\":1966:1979   */\n      dup2\n      add\n        /* \"#utility.yul\":1962:1989   */\n      dup7\n      sgt\n        /* \"#utility.yul\":1952:2007   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":2003:2004   */\n      0x00\n        /* \"#utility.yul\":2000:2001   */\n      dup1\n        /* \"#utility.yul\":1993:2005   */\n      revert\n        /* \"#utility.yul\":1952:2007   */\n    tag_514:\n        /* \"#utility.yul\":2039:2041   */\n      dup1\n        /* \"#utility.yul\":2026:2042   */\n      calldataload\n        /* \"#utility.yul\":2062:2122   */\n      tag_515\n        /* \"#utility.yul\":2078:2121   */\n      tag_493\n        /* \"#utility.yul\":2118:2120   */\n      dup3\n        /* \"#utility.yul\":2078:2121   */\n      tag_494\n      jump\t// in\n        /* \"#utility.yul\":2062:2122   */\n    tag_515:\n        /* \"#utility.yul\":2144:2147   */\n      dup1\n        /* \"#utility.yul\":2168:2170   */\n      dup3\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2171   */\n      mstore\n        /* \"#utility.yul\":2196:2198   */\n      dup5\n        /* \"#utility.yul\":2191:2194   */\n      dup3\n        /* \"#utility.yul\":2187:2199   */\n      add\n        /* \"#utility.yul\":2180:2199   */\n      swap2\n      pop\n        /* \"#utility.yul\":2227:2229   */\n      dup5\n        /* \"#utility.yul\":2223:2225   */\n      dup5\n        /* \"#utility.yul\":2219:2230   */\n      add\n        /* \"#utility.yul\":2275:2282   */\n      dup10\n        /* \"#utility.yul\":2270:2272   */\n      dup7\n        /* \"#utility.yul\":2264:2266   */\n      dup6\n        /* \"#utility.yul\":2261:2262   */\n      0x05\n        /* \"#utility.yul\":2257:2267   */\n      shl\n        /* \"#utility.yul\":2253:2255   */\n      dup8\n        /* \"#utility.yul\":2249:2268   */\n      add\n        /* \"#utility.yul\":2245:2273   */\n      add\n        /* \"#utility.yul\":2242:2283   */\n      gt\n        /* \"#utility.yul\":2239:2300   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":2296:2297   */\n      0x00\n        /* \"#utility.yul\":2293:2294   */\n      dup1\n        /* \"#utility.yul\":2286:2298   */\n      revert\n        /* \"#utility.yul\":2239:2300   */\n    tag_517:\n        /* \"#utility.yul\":2318:2319   */\n      0x00\n        /* \"#utility.yul\":2309:2319   */\n      swap5\n      pop\n        /* \"#utility.yul\":2328:2491   */\n    tag_518:\n        /* \"#utility.yul\":2342:2344   */\n      dup4\n        /* \"#utility.yul\":2339:2340   */\n      dup6\n        /* \"#utility.yul\":2336:2345   */\n      lt\n        /* \"#utility.yul\":2328:2491   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":2399:2416   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2387:2417   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2360:2361   */\n      0x01\n        /* \"#utility.yul\":2353:2362   */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"#utility.yul\":2437:2449   */\n      swap2\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":2469:2481   */\n      dup6\n      add\n        /* \"#utility.yul\":2328:2491   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":2332:2335   */\n      pop\n        /* \"#utility.yul\":2510:2515   */\n      dup1\n        /* \"#utility.yul\":2500:2515   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1372:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2803   */\n    tag_432:\n        /* \"#utility.yul\":2593:2599   */\n      0x00\n        /* \"#utility.yul\":2646:2648   */\n      0x20\n        /* \"#utility.yul\":2634:2643   */\n      dup3\n        /* \"#utility.yul\":2625:2632   */\n      dup5\n        /* \"#utility.yul\":2621:2644   */\n      sub\n        /* \"#utility.yul\":2617:2649   */\n      slt\n        /* \"#utility.yul\":2614:2666   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":2662:2663   */\n      0x00\n        /* \"#utility.yul\":2659:2660   */\n      dup1\n        /* \"#utility.yul\":2652:2664   */\n      revert\n        /* \"#utility.yul\":2614:2666   */\n    tag_522:\n        /* \"#utility.yul\":2694:2703   */\n      dup2\n        /* \"#utility.yul\":2688:2704   */\n      mload\n        /* \"#utility.yul\":2747:2752   */\n      dup1\n        /* \"#utility.yul\":2740:2753   */\n      iszero\n        /* \"#utility.yul\":2733:2754   */\n      iszero\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2723:2755   */\n      eq\n        /* \"#utility.yul\":2713:2773   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":3074:3254   */\n    tag_43:\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3186:3188   */\n      0x20\n        /* \"#utility.yul\":3174:3183   */\n      dup3\n        /* \"#utility.yul\":3165:3172   */\n      dup5\n        /* \"#utility.yul\":3161:3184   */\n      sub\n        /* \"#utility.yul\":3157:3189   */\n      slt\n        /* \"#utility.yul\":3154:3206   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3199:3200   */\n      dup1\n        /* \"#utility.yul\":3192:3204   */\n      revert\n        /* \"#utility.yul\":3154:3206   */\n    tag_528:\n      pop\n        /* \"#utility.yul\":3225:3248   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3074:3254   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3259:3443   */\n    tag_196:\n        /* \"#utility.yul\":3329:3335   */\n      0x00\n        /* \"#utility.yul\":3382:3384   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3361:3368   */\n      dup5\n        /* \"#utility.yul\":3357:3380   */\n      sub\n        /* \"#utility.yul\":3353:3385   */\n      slt\n        /* \"#utility.yul\":3350:3402   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":3398:3399   */\n      0x00\n        /* \"#utility.yul\":3395:3396   */\n      dup1\n        /* \"#utility.yul\":3388:3400   */\n      revert\n        /* \"#utility.yul\":3350:3402   */\n    tag_530:\n      pop\n        /* \"#utility.yul\":3421:3437   */\n      mload\n      swap2\n        /* \"#utility.yul\":3259:3443   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3722   */\n    tag_425:\n        /* \"#utility.yul\":3577:3580   */\n      0x00\n        /* \"#utility.yul\":3615:3621   */\n      dup3\n        /* \"#utility.yul\":3609:3622   */\n      mload\n        /* \"#utility.yul\":3631:3684   */\n      tag_532\n        /* \"#utility.yul\":3677:3683   */\n      dup2\n        /* \"#utility.yul\":3672:3675   */\n      dup5\n        /* \"#utility.yul\":3665:3669   */\n      0x20\n        /* \"#utility.yul\":3657:3663   */\n      dup8\n        /* \"#utility.yul\":3653:3670   */\n      add\n        /* \"#utility.yul\":3631:3684   */\n      tag_533\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3700:3716   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3448:3722   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5008:5391   */\n    tag_487:\n        /* \"#utility.yul\":5157:5159   */\n      0x20\n        /* \"#utility.yul\":5146:5155   */\n      dup2\n        /* \"#utility.yul\":5139:5160   */\n      mstore\n        /* \"#utility.yul\":5120:5124   */\n      0x00\n        /* \"#utility.yul\":5189:5195   */\n      dup3\n        /* \"#utility.yul\":5183:5196   */\n      mload\n        /* \"#utility.yul\":5232:5238   */\n      dup1\n        /* \"#utility.yul\":5227:5229   */\n      0x20\n        /* \"#utility.yul\":5216:5225   */\n      dup5\n        /* \"#utility.yul\":5212:5230   */\n      add\n        /* \"#utility.yul\":5205:5239   */\n      mstore\n        /* \"#utility.yul\":5248:5314   */\n      tag_540\n        /* \"#utility.yul\":5307:5313   */\n      dup2\n        /* \"#utility.yul\":5302:5304   */\n      0x40\n        /* \"#utility.yul\":5291:5300   */\n      dup6\n        /* \"#utility.yul\":5287:5305   */\n      add\n        /* \"#utility.yul\":5282:5284   */\n      0x20\n        /* \"#utility.yul\":5274:5280   */\n      dup8\n        /* \"#utility.yul\":5270:5285   */\n      add\n        /* \"#utility.yul\":5248:5314   */\n      tag_533\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":5375:5377   */\n      0x1f\n        /* \"#utility.yul\":5354:5369   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5350:5379   */\n      and\n        /* \"#utility.yul\":5335:5380   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5382:5384   */\n      0x40\n        /* \"#utility.yul\":5331:5385   */\n      add\n      swap3\n        /* \"#utility.yul\":5008:5391   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8736:9212   */\n    tag_243:\n        /* \"#utility.yul\":8938:8940   */\n      0x20\n        /* \"#utility.yul\":8920:8941   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8977:8979   */\n      0x48\n        /* \"#utility.yul\":8957:8975   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8950:8980   */\n      mstore\n        /* \"#utility.yul\":9016:9050   */\n      0x41424f41543a3a77686974656c6973743a20596f752063616e27742061646420\n        /* \"#utility.yul\":9011:9013   */\n      0x40\n        /* \"#utility.yul\":8996:9014   */\n      dup3\n      add\n        /* \"#utility.yul\":8989:9051   */\n      mstore\n        /* \"#utility.yul\":9087:9121   */\n      0x6d6f7265207468616e2031303020616464726573736573206174207468652073\n        /* \"#utility.yul\":9082:9084   */\n      0x60\n        /* \"#utility.yul\":9067:9085   */\n      dup3\n      add\n        /* \"#utility.yul\":9060:9122   */\n      mstore\n      shl(0xc0, 0x616d652074696d65)\n        /* \"#utility.yul\":9153:9156   */\n      0x80\n        /* \"#utility.yul\":9138:9157   */\n      dup3\n      add\n        /* \"#utility.yul\":9131:9170   */\n      mstore\n        /* \"#utility.yul\":9202:9205   */\n      0xa0\n        /* \"#utility.yul\":9187:9206   */\n      add\n      swap1\n        /* \"#utility.yul\":8736:9212   */\n      jump\t// out\n        /* \"#utility.yul\":10767:11123   */\n    tag_180:\n        /* \"#utility.yul\":10969:10971   */\n      0x20\n        /* \"#utility.yul\":10951:10972   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10988:11006   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10981:11011   */\n      mstore\n        /* \"#utility.yul\":11047:11081   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11042:11044   */\n      0x40\n        /* \"#utility.yul\":11027:11045   */\n      dup3\n      add\n        /* \"#utility.yul\":11020:11082   */\n      mstore\n        /* \"#utility.yul\":11114:11116   */\n      0x60\n        /* \"#utility.yul\":11099:11117   */\n      add\n      swap1\n        /* \"#utility.yul\":10767:11123   */\n      jump\t// out\n        /* \"#utility.yul\":11128:11545   */\n    tag_258:\n        /* \"#utility.yul\":11330:11332   */\n      0x20\n        /* \"#utility.yul\":11312:11333   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11369:11371   */\n      0x35\n        /* \"#utility.yul\":11349:11367   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11342:11372   */\n      mstore\n        /* \"#utility.yul\":11408:11442   */\n      0x41424f41543a3a6275793a20416d6f756e7420776f756c642065786365656420\n        /* \"#utility.yul\":11403:11405   */\n      0x40\n        /* \"#utility.yul\":11388:11406   */\n      dup3\n      add\n        /* \"#utility.yul\":11381:11443   */\n      mstore\n      shl(0x58, 0x7468652072656d61696e696e672062616c616e6365)\n        /* \"#utility.yul\":11474:11476   */\n      0x60\n        /* \"#utility.yul\":11459:11477   */\n      dup3\n      add\n        /* \"#utility.yul\":11452:11503   */\n      mstore\n        /* \"#utility.yul\":11535:11538   */\n      0x80\n        /* \"#utility.yul\":11520:11539   */\n      add\n      swap1\n        /* \"#utility.yul\":11128:11545   */\n      jump\t// out\n        /* \"#utility.yul\":14918:15193   */\n    tag_495:\n        /* \"#utility.yul\":14989:14991   */\n      0x40\n        /* \"#utility.yul\":14983:14992   */\n      mload\n        /* \"#utility.yul\":15054:15056   */\n      0x1f\n        /* \"#utility.yul\":15035:15048   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15031:15058   */\n      and\n        /* \"#utility.yul\":15019:15059   */\n      dup2\n      add\n        /* \"#utility.yul\":15089:15107   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15074:15108   */\n      dup2\n      gt\n        /* \"#utility.yul\":15110:15132   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":15071:15133   */\n      or\n        /* \"#utility.yul\":15068:15156   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":15136:15154   */\n      tag_566\n      tag_439\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15172:15174   */\n      0x40\n        /* \"#utility.yul\":15165:15187   */\n      mstore\n        /* \"#utility.yul\":14918:15193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15381   */\n    tag_494:\n        /* \"#utility.yul\":15258:15262   */\n      0x00\n        /* \"#utility.yul\":15291:15309   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15283:15289   */\n      dup3\n        /* \"#utility.yul\":15280:15310   */\n      gt\n        /* \"#utility.yul\":15277:15333   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":15313:15331   */\n      tag_569\n      tag_439\n      jump\t// in\n    tag_569:\n      pop\n        /* \"#utility.yul\":15358:15359   */\n      0x05\n        /* \"#utility.yul\":15354:15368   */\n      shl\n        /* \"#utility.yul\":15370:15374   */\n      0x20\n        /* \"#utility.yul\":15350:15375   */\n      add\n      swap1\n        /* \"#utility.yul\":15198:15381   */\n      jump\t// out\n        /* \"#utility.yul\":15386:15514   */\n    tag_417:\n        /* \"#utility.yul\":15426:15429   */\n      0x00\n        /* \"#utility.yul\":15457:15458   */\n      dup3\n        /* \"#utility.yul\":15453:15459   */\n      not\n        /* \"#utility.yul\":15450:15451   */\n      dup3\n        /* \"#utility.yul\":15447:15460   */\n      gt\n        /* \"#utility.yul\":15444:15483   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":15463:15481   */\n      tag_572\n      tag_573\n      jump\t// in\n    tag_572:\n      pop\n        /* \"#utility.yul\":15499:15508   */\n      add\n      swap1\n        /* \"#utility.yul\":15386:15514   */\n      jump\t// out\n        /* \"#utility.yul\":15519:15736   */\n    tag_420:\n        /* \"#utility.yul\":15559:15560   */\n      0x00\n        /* \"#utility.yul\":15585:15586   */\n      dup3\n        /* \"#utility.yul\":15575:15707   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":15629:15639   */\n      0x4e487b71\n        /* \"#utility.yul\":15624:15627   */\n      0xe0\n        /* \"#utility.yul\":15620:15640   */\n      shl\n        /* \"#utility.yul\":15617:15618   */\n      0x00\n        /* \"#utility.yul\":15610:15641   */\n      mstore\n        /* \"#utility.yul\":15664:15668   */\n      0x12\n        /* \"#utility.yul\":15661:15662   */\n      0x04\n        /* \"#utility.yul\":15654:15669   */\n      mstore\n        /* \"#utility.yul\":15692:15696   */\n      0x24\n        /* \"#utility.yul\":15689:15690   */\n      0x00\n        /* \"#utility.yul\":15682:15697   */\n      revert\n        /* \"#utility.yul\":15575:15707   */\n    tag_575:\n      pop\n        /* \"#utility.yul\":15721:15730   */\n      div\n      swap1\n        /* \"#utility.yul\":15519:15736   */\n      jump\t// out\n        /* \"#utility.yul\":15741:15909   */\n    tag_285:\n        /* \"#utility.yul\":15781:15788   */\n      0x00\n        /* \"#utility.yul\":15847:15848   */\n      dup2\n        /* \"#utility.yul\":15843:15844   */\n      0x00\n        /* \"#utility.yul\":15839:15845   */\n      not\n        /* \"#utility.yul\":15835:15849   */\n      div\n        /* \"#utility.yul\":15832:15833   */\n      dup4\n        /* \"#utility.yul\":15829:15850   */\n      gt\n        /* \"#utility.yul\":15824:15825   */\n      dup3\n        /* \"#utility.yul\":15817:15826   */\n      iszero\n        /* \"#utility.yul\":15810:15827   */\n      iszero\n        /* \"#utility.yul\":15806:15851   */\n      and\n        /* \"#utility.yul\":15803:15874   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":15854:15872   */\n      tag_578\n      tag_573\n      jump\t// in\n    tag_578:\n      pop\n        /* \"#utility.yul\":15894:15903   */\n      mul\n      swap1\n        /* \"#utility.yul\":15741:15909   */\n      jump\t// out\n        /* \"#utility.yul\":15914:16039   */\n    tag_412:\n        /* \"#utility.yul\":15954:15958   */\n      0x00\n        /* \"#utility.yul\":15982:15983   */\n      dup3\n        /* \"#utility.yul\":15979:15980   */\n      dup3\n        /* \"#utility.yul\":15976:15984   */\n      lt\n        /* \"#utility.yul\":15973:16007   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":15987:16005   */\n      tag_581\n      tag_573\n      jump\t// in\n    tag_581:\n      pop\n        /* \"#utility.yul\":16024:16033   */\n      sub\n      swap1\n        /* \"#utility.yul\":15914:16039   */\n      jump\t// out\n        /* \"#utility.yul\":16044:16302   */\n    tag_533:\n        /* \"#utility.yul\":16116:16117   */\n      0x00\n        /* \"#utility.yul\":16126:16239   */\n    tag_583:\n        /* \"#utility.yul\":16140:16146   */\n      dup4\n        /* \"#utility.yul\":16137:16138   */\n      dup2\n        /* \"#utility.yul\":16134:16147   */\n      lt\n        /* \"#utility.yul\":16126:16239   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":16216:16227   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16210:16228   */\n      mload\n        /* \"#utility.yul\":16197:16208   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":16190:16229   */\n      mstore\n        /* \"#utility.yul\":16162:16164   */\n      0x20\n        /* \"#utility.yul\":16155:16165   */\n      add\n        /* \"#utility.yul\":16126:16239   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":16257:16263   */\n      dup4\n        /* \"#utility.yul\":16254:16255   */\n      dup2\n        /* \"#utility.yul\":16251:16264   */\n      gt\n        /* \"#utility.yul\":16248:16296   */\n      iszero\n      tag_450\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":16292:16293   */\n      0x00\n        /* \"#utility.yul\":16274:16290   */\n      swap2\n      add\n        /* \"#utility.yul\":16267:16294   */\n      mstore\n        /* \"#utility.yul\":16044:16302   */\n      jump\t// out\n        /* \"#utility.yul\":16307:16442   */\n    tag_270:\n        /* \"#utility.yul\":16346:16349   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":16367:16384   */\n      dup3\n      eq\n        /* \"#utility.yul\":16364:16407   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":16387:16405   */\n      tag_589\n      tag_573\n      jump\t// in\n    tag_589:\n      pop\n        /* \"#utility.yul\":16434:16435   */\n      0x01\n        /* \"#utility.yul\":16423:16436   */\n      add\n      swap1\n        /* \"#utility.yul\":16307:16442   */\n      jump\t// out\n        /* \"#utility.yul\":16447:16574   */\n    tag_573:\n        /* \"#utility.yul\":16508:16518   */\n      0x4e487b71\n        /* \"#utility.yul\":16503:16506   */\n      0xe0\n        /* \"#utility.yul\":16499:16519   */\n      shl\n        /* \"#utility.yul\":16496:16497   */\n      0x00\n        /* \"#utility.yul\":16489:16520   */\n      mstore\n        /* \"#utility.yul\":16539:16543   */\n      0x11\n        /* \"#utility.yul\":16536:16537   */\n      0x04\n        /* \"#utility.yul\":16529:16544   */\n      mstore\n        /* \"#utility.yul\":16563:16567   */\n      0x24\n        /* \"#utility.yul\":16560:16561   */\n      0x00\n        /* \"#utility.yul\":16553:16568   */\n      revert\n        /* \"#utility.yul\":16579:16706   */\n    tag_249:\n        /* \"#utility.yul\":16640:16650   */\n      0x4e487b71\n        /* \"#utility.yul\":16635:16638   */\n      0xe0\n        /* \"#utility.yul\":16631:16651   */\n      shl\n        /* \"#utility.yul\":16628:16629   */\n      0x00\n        /* \"#utility.yul\":16621:16652   */\n      mstore\n        /* \"#utility.yul\":16671:16675   */\n      0x32\n        /* \"#utility.yul\":16668:16669   */\n      0x04\n        /* \"#utility.yul\":16661:16676   */\n      mstore\n        /* \"#utility.yul\":16695:16699   */\n      0x24\n        /* \"#utility.yul\":16692:16693   */\n      0x00\n        /* \"#utility.yul\":16685:16700   */\n      revert\n        /* \"#utility.yul\":16711:16838   */\n    tag_439:\n        /* \"#utility.yul\":16772:16782   */\n      0x4e487b71\n        /* \"#utility.yul\":16767:16770   */\n      0xe0\n        /* \"#utility.yul\":16763:16783   */\n      shl\n        /* \"#utility.yul\":16760:16761   */\n      0x00\n        /* \"#utility.yul\":16753:16784   */\n      mstore\n        /* \"#utility.yul\":16803:16807   */\n      0x41\n        /* \"#utility.yul\":16800:16801   */\n      0x04\n        /* \"#utility.yul\":16793:16808   */\n      mstore\n        /* \"#utility.yul\":16827:16831   */\n      0x24\n        /* \"#utility.yul\":16824:16825   */\n      0x00\n        /* \"#utility.yul\":16817:16832   */\n      revert\n        /* \"#utility.yul\":16843:16974   */\n    tag_501:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16918:16949   */\n      dup2\n      and\n        /* \"#utility.yul\":16908:16950   */\n      dup2\n      eq\n        /* \"#utility.yul\":16898:16968   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":16964:16965   */\n      0x00\n        /* \"#utility.yul\":16961:16962   */\n      dup1\n        /* \"#utility.yul\":16954:16966   */\n      revert\n\n    auxdata: 0xa2646970667358221220740bdcaf50cb2d0f996efe8b066170e7a5a7446e5eb776c4c91712070986d38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1186": {
									"entryPoint": null,
									"id": 1186,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 255,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_contract_IERC20_fromMemory": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IERC20_$181t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_stringliteral_60dd7cd83306b5085c89490e01907f9bd2fb3ee19520475e650b92e9b2f0dc2f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1143:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "82:117:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "92:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "107:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "177:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "186:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "147:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "162:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "167:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "158:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "158:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "171:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "154:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "154:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "143:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "143:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "133:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "133:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "126:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "126:50:9"
															},
															"nodeType": "YulIf",
															"src": "123:70:9"
														}
													]
												},
												"name": "abi_decode_contract_IERC20_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "61:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "72:5:9",
														"type": ""
													}
												],
												"src": "14:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:345:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "437:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "430:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "430:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "430:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "402:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "411:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "398:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "398:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "423:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "394:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:33:9"
															},
															"nodeType": "YulIf",
															"src": "391:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "453:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "501:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_IERC20_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "463:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "463:48:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "453:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "520:67:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "572:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "583:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "568:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_IERC20_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "530:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "530:57:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "596:35:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "606:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:25:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "596:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "640:35:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "660:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "671:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "656:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "650:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:25:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "684:36:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "704:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "715:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "700:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "700:19:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:26:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "684:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IERC20_$181t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "315:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "326:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "338:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "346:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "354:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "362:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "370:6:9",
														"type": ""
													}
												],
												"src": "204:522:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "915:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "956:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "967:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "952:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "972:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "945:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "995:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1006:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6572726f723a2050726963652068617320746f206265206869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1011:34:9",
																		"type": "",
																		"value": "ABOAT::error: Price has to be hi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "984:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1077:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:18:9"
																	},
																	{
																		"hexValue": "67686572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1082:16:9",
																		"type": "",
																		"value": "gher than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1055:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1055:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1108:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1120:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1108:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60dd7cd83306b5085c89490e01907f9bd2fb3ee19520475e650b92e9b2f0dc2f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "882:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "896:4:9",
														"type": ""
													}
												],
												"src": "731:410:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_contract_IERC20_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IERC20_$181t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_contract_IERC20_fromMemory(headStart)\n        value1 := abi_decode_contract_IERC20_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_60dd7cd83306b5085c89490e01907f9bd2fb3ee19520475e650b92e9b2f0dc2f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ABOAT::error: Price has to be hi\")\n        mstore(add(headStart, 96), \"gher than zero\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006007556009805460ff191660011790553480156200002357600080fd5b50604051620023c5380380620023c583398101604081905262000046916200016c565b6200005133620000ff565b60008111620000bd5760405162461bcd60e51b815260206004820152602e60248201527f41424f41543a3a6572726f723a2050726963652068617320746f20626520686960448201526d67686572207468616e207a65726f60901b606482015260840160405180910390fd5b600180546001600160a01b039687166001600160a01b0319918216179091556002805495909616941693909317909355600455600591909155600355620001bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200016757600080fd5b919050565b600080600080600060a086880312156200018557600080fd5b62000190866200014f565b9450620001a0602087016200014f565b6040870151606088015160809098015196999198509695945092505050565b6121f680620001cf6000396000f3fe6080604052600436106101d85760003560e01c8063a4d66daf11610102578063e754e7c411610095578063f3739e0511610064578063f3739e0514610507578063f7c618c11461053d578063f89be5931461055d578063f8cf31cb1461057357600080fd5b8063e754e7c41461049c578063ef78d4fd146104b2578063efe95f51146104c7578063f2fde38b146104e757600080fd5b8063c884ef83116100d1578063c884ef8314610417578063d6b0f48414610444578063d936547e14610459578063d96a094a1461048957600080fd5b8063a4d66daf1461039f578063a5ebf835146103b5578063a960c65f146103ca578063bd8aa780146103f757600080fd5b80635ed9ebfc1161017a578063856734c411610149578063856734c41461032c5780638da5cb5b146103565780639b8906ae146103745780639c92431b1461038a57600080fd5b80635ed9ebfc146102be578063667022fd146102d4578063715018a6146103015780637b1b1de61461031657600080fd5b80632fba2c85116101b65780632fba2c851461023c5780633013ce29146102515780634e71d92d146102895780635372a58e1461029e57600080fd5b80630c0e0862146101dd578063151bad0a146101ff5780632f66194614610227575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611ee4565b610593565b005b34801561020b57600080fd5b50610214603281565b6040519081526020015b60405180910390f35b34801561023357600080fd5b50610214605a81565b34801561024857600080fd5b50610214610629565b34801561025d57600080fd5b50600254610271906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b34801561029557600080fd5b506101fd6106d6565b3480156102aa57600080fd5b506101fd6102b9366004611e00565b610aed565b3480156102ca57600080fd5b5061021460065481565b3480156102e057600080fd5b506102146102ef366004611dae565b600b6020526000908152604090205481565b34801561030d57600080fd5b506101fd610d7f565b34801561032257600080fd5b5061021460035481565b34801561033857600080fd5b506009546103469060ff1681565b604051901515815260200161021e565b34801561036257600080fd5b506000546001600160a01b0316610271565b34801561038057600080fd5b5061021460075481565b34801561039657600080fd5b50610214610db5565b3480156103ab57600080fd5b5061021460045481565b3480156103c157600080fd5b50610214606481565b3480156103d657600080fd5b506102146103e5366004611dae565b600d6020526000908152604090205481565b34801561040357600080fd5b506101fd610412366004611dcb565b610e54565b34801561042357600080fd5b50610214610432366004611dae565b600c6020526000908152604090205481565b34801561045057600080fd5b506101fd610f37565b34801561046557600080fd5b50610346610474366004611dae565b600a6020526000908152604090205460ff1681565b6101fd610497366004611ee4565b610fdd565b3480156104a857600080fd5b5061021460085481565b3480156104be57600080fd5b50610214601e81565b3480156104d357600080fd5b506101fd6104e2366004611ee4565b6112c4565b3480156104f357600080fd5b506101fd610502366004611dae565b6114a2565b34801561051357600080fd5b50610271610522366004611dae565b600e602052600090815260409020546001600160a01b031681565b34801561054957600080fd5b50600154610271906001600160a01b031681565b34801561056957600080fd5b5061021460055481565b34801561057f57600080fd5b506101fd61058e366004611dae565b61153a565b6000546001600160a01b031633146105c65760405162461bcd60e51b81526004016105bd90611fd3565b60405180910390fd5b6007546106245760405162461bcd60e51b815260206004820152602660248201527f41424f41543a3a7570646174654166746572446179733a2053616c65206e6f7460448201526508195b99195960d21b60648201526084016105bd565b600855565b6001546000906001600160a01b031661064f5760065461064a9047906117f2565b905090565b6006546001546040516370a0823160e01b815230600482015261064a92916001600160a01b0316906370a082319060240160206040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190611efd565b906117f2565b6007546107315760405162461bcd60e51b815260206004820152602360248201527f41424f41543a3a636c61696d3a2053616c65206973206e6f74206f766572207960448201526265742160e81b60648201526084016105bd565b60085461074e906107459062015180611805565b60075490611811565b4210156107af5760405162461bcd60e51b815260206004820152602960248201527f41424f41543a3a636c61696d3a20436c61696d206973206e6f7420617661696c60448201526830b13632903cb2ba1760b91b60648201526084016105bd565b60006107b9610db5565b9050600081116108575760405162461bcd60e51b815260206004820152605d60248201527f41424f41543a3a636c61696d3a205468652070657263656e74616765206f662060448201527f746f6b656e20796f752063616e20636c61696d2069732063757272656e746c7960648201527f207a65726f2e20506c656173652074727920616761696e206c61746572000000608482015260a4016105bd565b600154336000908152600e60205260409020546001600160a01b039081169116146108c257600154336000908152600e6020908152604080832080546001600160a01b0319166001600160a01b0390951694909417909355600c8152828220829055600d9052908120555b336000908152600c602052604090205481116109465760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f60448201527f75722063757272656e746c7920656c696769626c6520746f6b656e730000000060648201526084016105bd565b60065460055411610a4557336000908152600c602052604081208054908390556003549091906109af906109a3670de0b6b3a76400006109a96103e88361098d8a8a6117f2565b336000908152600b602052604090205490611805565b9061181d565b90611805565b336000908152600d60205260409020549091506109cc9082611811565b336000908152600d60205260409020556001546001600160a01b031615610a0957600154610a04906001600160a01b03163383611829565b610a13565b610a13338261195a565b604051819033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90600090a3505050565b336000908152600c602052604090206103e890556002546001600160a01b031615610a9657600254336000818152600b6020526040902054610a91926001600160a01b03169190611829565b610ab0565b336000818152600b6020526040902054610ab0919061195a565b336000818152600b60205260408082205490519092917fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91a35b50565b6000546001600160a01b03163314610b175760405162461bcd60e51b81526004016105bd90611fd3565b606482511115610b395760405162461bcd60e51b81526004016105bd90611f65565b6000805b8351811015610d3e576001600a6000868481518110610b5e57610b5e61217f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506000610bd96003546109a3670de0b6b3a7640000878681518110610bc357610bc361217f565b602002602001015161180590919063ffffffff16565b90506000610be9826106d0610629565b11610c065760405162461bcd60e51b81526004016105bd90612008565b610c70848381518110610c1b57610c1b61217f565b6020026020010151600b6000888681518110610c3957610c3961217f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205461181190919063ffffffff16565b600b6000878581518110610c8657610c8661217f565b6020908102919091018101516001600160a01b0316825281019190915260400160002055610cb48382611811565b60025486519194506001600160a01b031690600e90600090889086908110610cde57610cde61217f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550508080610d369061214e565b915050610b3d565b50600654610d4c9082611811565b60065582516040517f6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd590600090a2505050565b6000546001600160a01b03163314610da95760405162461bcd60e51b81526004016105bd90611fd3565b610db36000611a39565b565b600080610dce605a60075461181190919063ffffffff16565b90506000610ded60085462015180610de691906120ec565b8390611811565b9050600080600754118015610e0157508142115b610e0c576064610e37565b610e376064610e3160326109a9610e27601e620151806120ec565b6109a342896117f2565b90611811565b90506103e88111610e485780610e4c565b6103e85b935050505090565b6000546001600160a01b03163314610e7e5760405162461bcd60e51b81526004016105bd90611fd3565b606481511115610ea05760405162461bcd60e51b81526004016105bd90611f65565b60005b8151811015610f08576001600a6000848481518110610ec457610ec461217f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610f008161214e565b915050610ea3565b5080516040517ff899e24720678b9547483d3c332e9a7e1eabb9c013bd2e0ff30d83806cf421f390600090a250565b6000546001600160a01b03163314610f615760405162461bcd60e51b81526004016105bd90611fd3565b60095460ff16610fd15760405162461bcd60e51b815260206004820152603560248201527f41424f41543a64697361626c6557686974656c6973743a2057686974656c69736044820152741d081a5cc8185b1c9958591e48191a5cd8589b1959605a1b60648201526084016105bd565b6009805460ff19169055565b6007541561102d5760405162461bcd60e51b815260206004820152601f60248201527f41424f41543a3a6275793a2053616c6520616c726561647920656e646564210060448201526064016105bd565b336000908152600a602052604090205460ff168061104e575060095460ff16155b6110b45760405162461bcd60e51b815260206004820152603160248201527f41424f41543a3a6275793a20596f75277265206e6f742077686974656c697374604482015270656420666f7220746869732073616c652160781b60648201526084016105bd565b6002546001600160a01b0316158015806110cd57508134145b6111365760405162461bcd60e51b815260206004820152603460248201527f41424f41543a3a6275793a2053656e742076616c756520646f65736e2774206d60448201527319595d081d1a194819da5d995b88185b5bdd5b9d60621b60648201526084016105bd565b600454336000908152600b60205260409020546111539084611811565b11156111c75760405162461bcd60e51b815260206004820152603960248201527f41424f41543a3a6275793a20416d6f756e7420776f756c64206578636565642060448201527f746865206d6178696d756d20616c6c6f776564206c696d69740000000000000060648201526084016105bd565b6003546000906111e3906109a385670de0b6b3a7640000611805565b905060006111f3826106d0610629565b116112105760405162461bcd60e51b81526004016105bd90612008565b8161122d5760025461122d906001600160a01b0316333086611a89565b336000908152600b60205260409020546112479084611811565b336000908152600b60205260409020556006546112649082611811565b600655600254336000818152600e602052604080822080546001600160a01b0319166001600160a01b0390951694909417909355915185927fc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d6791a3505050565b6000546001600160a01b031633146112ee5760405162461bcd60e51b81526004016105bd90611fd3565b600754156113515760405162461bcd60e51b815260206004820152602a60248201527f41424f41543a3a636c61696d416e64456e6453616c653a2053616c6520616c726044820152691958591e48195b99195960b21b60648201526084016105bd565b426007556006546005541161140c5760088190556002546001600160a01b031615611402576002546040516370a0823160e01b81523060048201526113fd916001600160a01b031690339082906370a08231906024015b60206040518083038186803b1580156113c057600080fd5b505afa1580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f89190611efd565b611829565b611462565b6113fd334761195a565b60006008556001546001600160a01b031615611458576001546040516370a0823160e01b81523060048201526113fd916001600160a01b031690339082906370a08231906024016113a8565b611462334761195a565b600854611476906107459062015180611805565b6040517f94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a90600090a250565b6000546001600160a01b031633146114cc5760405162461bcd60e51b81526004016105bd90611fd3565b6001600160a01b0381166115315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bd565b610aea81611a39565b6000546001600160a01b031633146115645760405162461bcd60e51b81526004016105bd90611fd3565b6001546001600160a01b03828116911614156115f75760405162461bcd60e51b815260206004820152604660248201527f41424f41543a3a757064617465526577617264546f6b656e3a204e657720726560448201527f776172642073686f756c6420626520646966666572656e742066726f6d206375606482015265393932b73a1760d11b608482015260a4016105bd565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561163a57600080fd5b505afa15801561164e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116729190611efd565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156116b157600080fd5b505afa1580156116c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e99190611efd565b146117a85760405162461bcd60e51b815260206004820152607760248201527f41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f60448201527f6e74726163742073686f756c6420636f6e7461696e2061746c6561737420746860648201527f652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d2060848201527f7468652063757272656e7420726577617264546f6b656e00000000000000000060a482015260c4016105bd565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f8390600090a250565b60006117fe828461210b565b9392505050565b60006117fe82846120ec565b60006117fe82846120b2565b60006117fe82846120ca565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118859190611f16565b6000604051808303816000865af19150503d80600081146118c2576040519150601f19603f3d011682016040523d82523d6000602084013e6118c7565b606091505b50915091508180156118f15750805115806118f15750808060200190518101906118f19190611ec2565b6119535760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016105bd565b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040516119849190611f16565b60006040518083038185875af1925050503d80600081146119c1576040519150601f19603f3d011682016040523d82523d6000602084013e6119c6565b606091505b5050905080611a345760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016105bd565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ae3908590611ae9565b50505050565b6000611b3e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bbb9092919063ffffffff16565b805190915015611a345780806020019051810190611b5c9190611ec2565b611a345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105bd565b6060611bca8484600085611bd2565b949350505050565b606082471015611c335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105bd565b843b611c815760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bd565b600080866001600160a01b03168587604051611c9d9190611f16565b60006040518083038185875af1925050503d8060008114611cda576040519150601f19603f3d011682016040523d82523d6000602084013e611cdf565b606091505b5091509150611cef828286611cfa565b979650505050505050565b60608315611d095750816117fe565b825115611d195782518084602001fd5b8160405162461bcd60e51b81526004016105bd9190611f32565b600082601f830112611d4457600080fd5b81356020611d59611d548361208e565b61205d565b80838252828201915082860187848660051b8901011115611d7957600080fd5b60005b85811015611da1578135611d8f816121ab565b84529284019290840190600101611d7c565b5090979650505050505050565b600060208284031215611dc057600080fd5b81356117fe816121ab565b600060208284031215611ddd57600080fd5b813567ffffffffffffffff811115611df457600080fd5b611bca84828501611d33565b60008060408385031215611e1357600080fd5b823567ffffffffffffffff80821115611e2b57600080fd5b611e3786838701611d33565b9350602091508185013581811115611e4e57600080fd5b85019050601f81018613611e6157600080fd5b8035611e6f611d548261208e565b80828252848201915084840189868560051b8701011115611e8f57600080fd5b600094505b83851015611eb2578035835260019490940193918501918501611e94565b5080955050505050509250929050565b600060208284031215611ed457600080fd5b815180151581146117fe57600080fd5b600060208284031215611ef657600080fd5b5035919050565b600060208284031215611f0f57600080fd5b5051919050565b60008251611f28818460208701612122565b9190910192915050565b6020815260008251806020840152611f51816040850160208701612122565b601f01601f19169190910160400192915050565b60208082526048908201527f41424f41543a3a77686974656c6973743a20596f752063616e2774206164642060408201527f6d6f7265207468616e2031303020616464726573736573206174207468652073606082015267616d652074696d6560c01b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526035908201527f41424f41543a3a6275793a20416d6f756e7420776f756c6420657863656564206040820152747468652072656d61696e696e672062616c616e636560581b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561208657612086612195565b604052919050565b600067ffffffffffffffff8211156120a8576120a8612195565b5060051b60200190565b600082198211156120c5576120c5612169565b500190565b6000826120e757634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561210657612106612169565b500290565b60008282101561211d5761211d612169565b500390565b60005b8381101561213d578181015183820152602001612125565b83811115611ae35750506000910152565b600060001982141561216257612162612169565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610aea57600080fdfea2646970667358221220740bdcaf50cb2d0f996efe8b066170e7a5a7446e5eb776c4c91712070986d38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x23C5 CODESIZE SUB DUP1 PUSH3 0x23C5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x46 SWAP2 PUSH3 0x16C JUMP JUMPDEST PUSH3 0x51 CALLER PUSH3 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0xBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6572726F723A2050726963652068617320746F206265206869 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x67686572207468616E207A65726F PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP6 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SSTORE PUSH3 0x1BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x190 DUP7 PUSH3 0x14F JUMP JUMPDEST SWAP5 POP PUSH3 0x1A0 PUSH1 0x20 DUP8 ADD PUSH3 0x14F JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD SWAP7 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21F6 DUP1 PUSH3 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4D66DAF GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE754E7C4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF3739E05 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF3739E05 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF89BE593 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE754E7C4 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xEFE95F51 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xD6B0F484 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4D66DAF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA5EBF835 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA960C65F EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBD8AA780 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5ED9EBFC GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x856734C4 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x856734C4 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9B8906AE EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x9C92431B EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5ED9EBFC EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x667022FD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7B1B1DE6 EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FBA2C85 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2FBA2C85 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x5372A58E EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0E0862 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x151BAD0A EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2F661946 EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x5A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x629 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x271 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x6D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xD7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x346 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x271 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0xDB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xF37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x1E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x12C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x271 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7570646174654166746572446179733A2053616C65206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x8195B991959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64F JUMPI PUSH1 0x6 SLOAD PUSH2 0x64A SWAP1 SELFBALANCE SWAP1 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x64A SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A2053616C65206973206E6F74206F7665722079 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x74E SWAP1 PUSH2 0x745 SWAP1 PUSH3 0x15180 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1811 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20436C61696D206973206E6F7420617661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x30B13632903CB2BA17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x207A65726F2E20506C656173652074727920616761696E206C61746572000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x8C2 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xC DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xD SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75722063757272656E746C7920656C696769626C6520746F6B656E7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0xA45 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x9A3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9A9 PUSH2 0x3E8 DUP4 PUSH2 0x98D DUP11 DUP11 PUSH2 0x17F2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP1 PUSH2 0x1805 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x9CC SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA09 JUMPI PUSH1 0x1 SLOAD PUSH2 0xA04 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xA13 CALLER DUP3 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3E8 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA96 JUMPI PUSH1 0x2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA91 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x64 DUP3 MLOAD GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB5E JUMPI PUSH2 0xB5E PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xBD9 PUSH1 0x3 SLOAD PUSH2 0x9A3 PUSH8 0xDE0B6B3A7640000 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xBC3 JUMPI PUSH2 0xBC3 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBE9 DUP3 PUSH2 0x6D0 PUSH2 0x629 JUMP JUMPDEST GT PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0xC70 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1B JUMPI PUSH2 0xC1B PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC39 JUMPI PUSH2 0xC39 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1811 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC86 JUMPI PUSH2 0xC86 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xCB4 DUP4 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 MLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xE SWAP1 PUSH1 0x0 SWAP1 DUP9 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0xD36 SWAP1 PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB3D JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xD4C SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xDB3 PUSH1 0x0 PUSH2 0x1A39 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDCE PUSH1 0x5A PUSH1 0x7 SLOAD PUSH2 0x1811 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDED PUSH1 0x8 SLOAD PUSH3 0x15180 PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0xE01 JUMPI POP DUP2 TIMESTAMP GT JUMPDEST PUSH2 0xE0C JUMPI PUSH1 0x64 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE37 PUSH1 0x64 PUSH2 0xE31 PUSH1 0x32 PUSH2 0x9A9 PUSH2 0xE27 PUSH1 0x1E PUSH3 0x15180 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x9A3 TIMESTAMP DUP10 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT PUSH2 0xE48 JUMPI DUP1 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x64 DUP2 MLOAD GT ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xF00 DUP2 PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA3 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x40 MLOAD PUSH32 0xF899E24720678B9547483D3C332E9A7E1EABB9C013BD2E0FF30D83806CF421F3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A64697361626C6557686974656C6973743A2057686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1D081A5CC8185B1C9958591E48191A5CD8589B1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A2053616C6520616C726561647920656E6465642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x104E JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20596F75277265206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x656420666F7220746869732073616C6521 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO DUP1 PUSH2 0x10CD JUMPI POP DUP2 CALLVALUE EQ JUMPDEST PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A2053656E742076616C756520646F65736E2774206D PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x19595D081D1A194819DA5D995B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1153 SWAP1 DUP5 PUSH2 0x1811 JUMP JUMPDEST GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206D6178696D756D20616C6C6F776564206C696D697400000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11E3 SWAP1 PUSH2 0x9A3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11F3 DUP3 PUSH2 0x6D0 PUSH2 0x629 JUMP JUMPDEST GT PUSH2 0x1210 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x2008 JUMP JUMPDEST DUP2 PUSH2 0x122D JUMPI PUSH1 0x2 SLOAD PUSH2 0x122D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1A89 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1247 SWAP1 DUP5 PUSH2 0x1811 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD PUSH2 0x1264 SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP6 SWAP3 PUSH32 0xC55650CCDA1011E1CDC769B1FBF546EBB8C97800B6072B49E06CD560305B1D67 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D416E64456E6453616C653A2053616C6520616C72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1958591E48195B991959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST TIMESTAMP PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x140C JUMPI PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1402 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x13FD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x13FD CALLER SELFBALANCE PUSH2 0x195A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1458 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x13FD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x1462 CALLER SELFBALANCE PUSH2 0x195A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1476 SWAP1 PUSH2 0x745 SWAP1 PUSH3 0x15180 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x94BB74A9473AE4063EC1E73DC3E35FD4B5ABE9CC1E43AD0DB84E5358559CCD5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776172642073686F756C6420626520646966666572656E742066726F6D206375 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x393932B73A17 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1672 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E9 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST EQ PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x7468652063757272656E7420726577617264546F6B656E000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x210B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1885 SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x18F1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x18F1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1984 SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1AE3 SWAP1 DUP6 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1A34 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x1A34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BCA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1BD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1C9D SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CDA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CEF DUP3 DUP3 DUP7 PUSH2 0x1CFA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1D09 JUMPI POP DUP2 PUSH2 0x17FE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1D19 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1D59 PUSH2 0x1D54 DUP4 PUSH2 0x208E JUMP JUMPDEST PUSH2 0x205D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1DA1 JUMPI DUP2 CALLDATALOAD PUSH2 0x1D8F DUP2 PUSH2 0x21AB JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D7C JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17FE DUP2 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCA DUP5 DUP3 DUP6 ADD PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E37 DUP7 DUP4 DUP8 ADD PUSH2 0x1D33 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1E61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1E6F PUSH2 0x1D54 DUP3 PUSH2 0x208E JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x1E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1EB2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x1E94 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F28 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F51 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A77686974656C6973743A20596F752063616E27742061646420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E2031303020616464726573736573206174207468652073 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x616D652074696D65 PUSH1 0xC0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x7468652072656D61696E696E672062616C616E6365 PUSH1 0x58 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2086 JUMPI PUSH2 0x2086 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20A8 JUMPI PUSH2 0x20A8 PUSH2 0x2195 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C5 PUSH2 0x2169 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2106 PUSH2 0x2169 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x2169 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x213D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AE3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2162 JUMPI PUSH2 0x2162 PUSH2 0x2169 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xBDCAF50CB2D0F996EFE8B066170E7A5A7446E5EB7 PUSH23 0xC4C91712070986D38F64736F6C63430008070033000000 ",
							"sourceMap": "434:11580:6:-:0;;;1288:1;1261:28;;1900:35;;;-1:-1:-1;;1900:35:6;1931:4;1900:35;;;3199:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:4;867:9:0;:23::i;:::-;3331:1:6;3322:6;:10;3314:69;;;;-1:-1:-1;;;3314:69:6;;933:2:9;3314:69:6;;;915:21:9;972:2;952:18;;;945:30;1011:34;991:18;;;984:62;-1:-1:-1;;;1062:18:9;;;1055:44;1116:19;;3314:69:6;;;;;;;;3393:11;:26;;-1:-1:-1;;;;;3393:26:6;;;-1:-1:-1;;;;;;3393:26:6;;;;;;;3429:12;:28;;;;;;;;;;;;;;;3467:5;:14;3491:7;:18;;;;3555:13;:22;434:11580;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:185:9:-;101:13;;-1:-1:-1;;;;;143:31:9;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:522::-;338:6;346;354;362;370;423:3;411:9;402:7;398:23;394:33;391:53;;;440:1;437;430:12;391:53;463:48;501:9;463:48;:::i;:::-;453:58;;530:57;583:2;572:9;568:18;530:57;:::i;:::-;627:2;612:18;;606:25;671:2;656:18;;650:25;715:3;700:19;;;694:26;204:522;;520:67;;-1:-1:-1;606:25:9;650;694:26;-1:-1:-1;204:522:9;-1:-1:-1;;;204:522:9:o;731:410::-;434:11580:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_404": {
									"entryPoint": 6889,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 6713,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_verifyCallResult_700": {
									"entryPoint": 7418,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@add_898": {
									"entryPoint": 6161,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@afterDays_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bought_1097": {
									"entryPoint": null,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_1784": {
									"entryPoint": 4061,
									"id": 1784,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAndEndSale_1314": {
									"entryPoint": 4804,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_2014": {
									"entryPoint": 1750,
									"id": 2014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimedTokens_1105": {
									"entryPoint": null,
									"id": 1105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cliffPeriod_1086": {
									"entryPoint": null,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@disableWhitelist_1329": {
									"entryPoint": 3895,
									"id": 1329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_943": {
									"entryPoint": 6173,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_566": {
									"entryPoint": 7122,
									"id": 566,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_496": {
									"entryPoint": 7099,
									"id": 496,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getCurrentPercentage_1648": {
									"entryPoint": 3509,
									"id": 1648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainingBalance_1590": {
									"entryPoint": 1577,
									"id": 1590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialClaimPercentage_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastClaimAddress_1109": {
									"entryPoint": null,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@limit_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_928": {
									"entryPoint": 6149,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@percentagePerPeriod_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@period_1077": {
									"entryPoint": null,
									"id": 1077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pricePerToken_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 3455,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requireWhitelist_1089": {
									"entryPoint": null,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1058": {
									"entryPoint": null,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_2155": {
									"entryPoint": 6490,
									"id": 2155,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_238": {
									"entryPoint": 6793,
									"id": 238,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2084": {
									"entryPoint": 6185,
									"id": 2084,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saleEnded_1072": {
									"entryPoint": null,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@softcap_1067": {
									"entryPoint": null,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@soldTokens_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_913": {
									"entryPoint": 6130,
									"id": 913,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 5282,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateAfterDays_1394": {
									"entryPoint": 1427,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_1375": {
									"entryPoint": 5434,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelistFromSAFT_1552": {
									"entryPoint": 2797,
									"id": 1552,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@whitelist_1437": {
									"entryPoint": 3668,
									"id": 1437,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelisted_1093": {
									"entryPoint": null,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 7475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$181": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_190425b621cd0917f901d475559f5b5f4907d9bd007efefdf1c38142b73fc846__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_381934fd8e3537d618054e1cdd896b2699077774bd75b61e814d5bc15cd4fdd5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5259ad519682c3909bbda56553acf825a6fac261a533fe61e29e9dae37ec77f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5860cae0068b83961f7ac97471bc52ec93fbafb2e22612e016894525ffbff9d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce962428896ce93b68ffaa1006ed91be0e5f0b040a85b3e71da3db046ac7d335__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbf504c10217341d1855cad0edfa02b8afc7c010295b8c6040565196419e6fd8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e729ea7bc20689f9b8b7bee880661ff8353a38a7c244a8fb91e624df3acfaebe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f805a4d8e4faa04b6d70860d5d9f7a495cbfa53dfee97f8ef85439ca16646051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_feb0cc47c5ad597177363405a6ffd2e717b6506c208940c9b41452af066cf2ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16976:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:684:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:9"
															},
															"nodeType": "YulIf",
															"src": "88:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "175:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "162:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "191:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "201:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "195:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "214:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "281:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "241:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "225:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "218:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "294:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "307:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "298:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "331:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "319:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "319:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "354:3:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "394:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "375:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "451:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "463:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "453:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "453:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "432:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "435:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "428:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "428:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "416:23:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "441:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "412:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "446:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "409:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:41:9"
															},
															"nodeType": "YulIf",
															"src": "406:61:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "485:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "480:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:193:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "554:30:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "580:3:9"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "567:12:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "567:17:9"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "558:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "622:5:9"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "597:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:9"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "653:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "641:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "641:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "641:18:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "672:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "683:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "688:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "679:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "679:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "704:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "715:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "720:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "711:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "711:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "506:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "509:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "503:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "513:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "515:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "524:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "520:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "515:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "499:3:9",
																"statements": []
															},
															"src": "495:238:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "742:14:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "751:5:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "742:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:9",
														"type": ""
													}
												],
												"src": "14:748:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "837:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "883:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "892:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "895:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "885:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "885:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "885:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "858:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "867:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "879:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "850:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:32:9"
															},
															"nodeType": "YulIf",
															"src": "847:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "908:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "921:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "912:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "953:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "803:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "814:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "826:6:9",
														"type": ""
													}
												],
												"src": "767:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:253:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1169:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1172:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:9"
															},
															"nodeType": "YulIf",
															"src": "1124:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1185:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1199:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1189:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1265:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1274:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1277:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1267:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1267:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1267:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1237:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1234:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:30:9"
															},
															"nodeType": "YulIf",
															"src": "1231:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1290:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1333:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1344:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1329:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1353:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1300:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1091:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1103:6:9",
														"type": ""
													}
												],
												"src": "1019:348:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:1012:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1555:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1564:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1567:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1557:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1557:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1557:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1530:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1539:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1526:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1526:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:32:9"
															},
															"nodeType": "YulIf",
															"src": "1519:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1580:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1584:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1626:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1636:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1630:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1681:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1690:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1693:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1683:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1683:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1683:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1669:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1677:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1666:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:14:9"
															},
															"nodeType": "YulIf",
															"src": "1663:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1706:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1749:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1760:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1769:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1716:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1786:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1796:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1790:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1807:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1851:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1836:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1823:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1811:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1884:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1893:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1886:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1886:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1886:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1870:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1880:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1867:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:16:9"
															},
															"nodeType": "YulIf",
															"src": "1864:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1909:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1923:9:9"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1934:8:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1919:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:24:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1913:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1991:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2000:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1993:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1993:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1993:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1970:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1974:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1966:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1966:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:35:9"
															},
															"nodeType": "YulIf",
															"src": "1952:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2016:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2039:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2026:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2020:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2051:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2118:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2078:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2078:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2062:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2062:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2055:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2131:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2144:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2135:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2168:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2180:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2191:3:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2196:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2208:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2223:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2227:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2212:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2284:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2293:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2286:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2286:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2286:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2253:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2261:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2264:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2257:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2257:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2249:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2249:19:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2270:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2245:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2245:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2275:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2242:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:41:9"
															},
															"nodeType": "YulIf",
															"src": "2239:61:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2309:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2318:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2313:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2394:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2412:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2399:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2399:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2387:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2387:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2387:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2430:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2441:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2446:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2437:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2437:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2462:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2473:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2478:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2469:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2469:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2462:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2339:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2342:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2336:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2346:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2348:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2357:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2360:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2353:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2332:3:9",
																"statements": []
															},
															"src": "2328:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2500:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2510:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2500:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1467:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1478:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1498:6:9",
														"type": ""
													}
												],
												"src": "1372:1149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2604:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2650:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2659:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2662:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2652:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2652:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2652:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2625:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2621:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2617:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2617:32:9"
															},
															"nodeType": "YulIf",
															"src": "2614:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2675:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2694:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2688:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2679:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2747:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2740:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2740:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2733:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:40:9"
															},
															"nodeType": "YulIf",
															"src": "2713:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2782:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2792:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2782:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2570:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2581:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2593:6:9",
														"type": ""
													}
												],
												"src": "2526:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2892:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2938:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2947:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2950:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2940:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2940:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2940:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2913:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2922:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2905:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:32:9"
															},
															"nodeType": "YulIf",
															"src": "2902:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2963:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2989:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2976:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2967:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3033:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3008:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3048:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3058:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2858:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2869:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2881:6:9",
														"type": ""
													}
												],
												"src": "2808:261:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3144:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3190:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3192:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3165:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3161:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3157:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:32:9"
															},
															"nodeType": "YulIf",
															"src": "3154:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3238:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3225:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3110:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3121:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3133:6:9",
														"type": ""
													}
												],
												"src": "3074:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3386:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3395:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3398:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3388:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3388:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3388:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:32:9"
															},
															"nodeType": "YulIf",
															"src": "3350:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3411:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3421:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3306:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3317:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3329:6:9",
														"type": ""
													}
												],
												"src": "3259:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3595:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3615:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3609:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3599:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3657:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3653:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3672:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3677:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3631:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3631:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3693:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3704:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3709:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3561:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3566:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3577:3:9",
														"type": ""
													}
												],
												"src": "3448:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3828:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3838:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3850:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3838:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3880:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3895:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3911:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3916:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3907:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3907:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3920:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3903:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3903:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3873:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3797:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3808:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3819:4:9",
														"type": ""
													}
												],
												"src": "3727:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4102:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4114:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4125:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4110:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4102:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4137:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4155:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4160:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4164:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4141:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4182:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4197:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4193:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4193:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4229:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4240:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4225:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4225:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4257:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4218:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4218:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4281:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4292:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4297:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4270:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4045:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4056:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4064:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4072:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4083:4:9",
														"type": ""
													}
												],
												"src": "3935:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4444:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4454:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4466:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4477:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4462:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4462:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4454:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4511:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4527:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4532:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4523:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4523:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4536:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4519:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4519:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4560:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4571:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4576:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4549:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4405:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4416:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4424:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4435:4:9",
														"type": ""
													}
												],
												"src": "4315:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4741:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4766:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4759:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4759:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4752:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4734:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4658:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4669:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4680:4:9",
														"type": ""
													}
												],
												"src": "4594:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4901:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4911:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4923:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4919:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4919:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4911:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4953:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4968:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4984:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4989:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4980:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4980:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4993:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4976:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4976:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4946:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4946:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4870:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4881:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4892:4:9",
														"type": ""
													}
												],
												"src": "4786:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5129:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5146:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5157:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5139:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5169:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5189:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5183:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5173:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5216:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5227:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5212:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5212:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5232:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5205:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5205:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5205:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5274:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5282:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5307:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5248:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5248:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5323:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5339:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5358:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5366:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5354:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5354:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5375:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5371:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5371:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5350:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5350:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5323:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5098:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5109:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5120:4:9",
														"type": ""
													}
												],
												"src": "5008:383:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:243:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5587:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5580:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5580:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:9",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5610:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5660:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5671:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5656:18:9"
																	},
																	{
																		"hexValue": "41424f41543a64697361626c6557686974656c6973743a2057686974656c6973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5676:34:9",
																		"type": "",
																		"value": "ABOAT:disableWhitelist: Whitelis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5649:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5742:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5727:18:9"
																	},
																	{
																		"hexValue": "7420697320616c72656164792064697361626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5747:23:9",
																		"type": "",
																		"value": "t is already disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5720:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5780:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5792:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5803:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5788:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5780:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_190425b621cd0917f901d475559f5b5f4907d9bd007efefdf1c38142b73fc846__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5547:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5561:4:9",
														"type": ""
													}
												],
												"src": "5396:417:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5992:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6009:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6020:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6002:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6002:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6054:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6039:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6059:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6032:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6093:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6078:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6078:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6098:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6071:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6153:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6149:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6169:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6142:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6142:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6187:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6199:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6210:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6195:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6187:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5969:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5983:4:9",
														"type": ""
													}
												],
												"src": "5818:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6399:247:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6416:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6409:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6450:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6461:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6446:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6446:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6466:2:9",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6439:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6439:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6489:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6500:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6485:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a20416d6f756e7420776f756c642065786365656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6505:34:9",
																		"type": "",
																		"value": "ABOAT::buy: Amount would exceed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6478:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6478:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6560:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6571:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6556:18:9"
																	},
																	{
																		"hexValue": "746865206d6178696d756d20616c6c6f776564206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6576:27:9",
																		"type": "",
																		"value": "the maximum allowed limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6549:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6613:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6625:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6636:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6621:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6613:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_381934fd8e3537d618054e1cdd896b2699077774bd75b61e814d5bc15cd4fdd5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6376:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6390:4:9",
														"type": ""
													}
												],
												"src": "6225:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6825:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6842:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6835:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6887:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6865:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6865:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6915:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6926:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6911:18:9"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6931:34:9",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6904:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6997:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6982:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6982:18:9"
																	},
																	{
																		"hexValue": "20455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7002:22:9",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7034:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7046:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7057:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7042:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7042:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7034:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6802:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6816:4:9",
														"type": ""
													}
												],
												"src": "6651:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7246:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7263:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7274:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7256:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7308:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7293:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7293:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7347:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20436c61696d206973206e6f7420617661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7352:34:9",
																		"type": "",
																		"value": "ABOAT::claim: Claim is not avail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7325:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7325:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7407:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:18:9"
																	},
																	{
																		"hexValue": "61626c65207965742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7423:11:9",
																		"type": "",
																		"value": "able yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7396:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7444:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7456:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7467:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7452:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7452:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7444:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5259ad519682c3909bbda56553acf825a6fac261a533fe61e29e9dae37ec77f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7223:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7237:4:9",
														"type": ""
													}
												],
												"src": "7072:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7656:250:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7666:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:2:9",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7746:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7757:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7742:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7762:34:9",
																		"type": "",
																		"value": "ABOAT::claim: Already claimed yo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7735:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7735:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7735:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7828:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7813:18:9"
																	},
																	{
																		"hexValue": "75722063757272656e746c7920656c696769626c6520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7833:30:9",
																		"type": "",
																		"value": "ur currently eligible tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7806:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7885:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7881:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7873:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7633:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7647:4:9",
														"type": ""
													}
												],
												"src": "7482:424:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8095:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8147:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8132:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8125:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8186:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8171:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8191:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8164:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8164:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8257:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8262:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8280:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8292:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8303:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8288:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8280:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8062:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8076:4:9",
														"type": ""
													}
												],
												"src": "7911:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8492:239:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8509:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8520:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8502:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8543:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8554:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8539:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8539:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8559:2:9",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8532:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8532:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8593:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8578:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a20596f75277265206e6f742077686974656c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8598:34:9",
																		"type": "",
																		"value": "ABOAT::buy: You're not whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8571:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8571:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8571:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8653:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8664:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:18:9"
																	},
																	{
																		"hexValue": "656420666f7220746869732073616c6521",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8669:19:9",
																		"type": "",
																		"value": "ed for this sale!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8698:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8710:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8721:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8706:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8706:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8698:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5860cae0068b83961f7ac97471bc52ec93fbafb2e22612e016894525ffbff9d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8469:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8483:4:9",
														"type": ""
													}
												],
												"src": "8318:413:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:302:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8927:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8920:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8972:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8957:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:9",
																		"type": "",
																		"value": "72"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8950:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9000:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8996:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8996:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a77686974656c6973743a20596f752063616e27742061646420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9016:34:9",
																		"type": "",
																		"value": "ABOAT::whitelist: You can't add "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8989:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8989:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8989:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9071:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9082:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9067:18:9"
																	},
																	{
																		"hexValue": "6d6f7265207468616e2031303020616464726573736573206174207468652073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9087:34:9",
																		"type": "",
																		"value": "more than 100 addresses at the s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9060:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9060:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9060:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9153:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9138:19:9"
																	},
																	{
																		"hexValue": "616d652074696d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9159:10:9",
																		"type": "",
																		"value": "ame time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9131:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9131:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9179:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9191:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9179:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8887:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8901:4:9",
														"type": ""
													}
												],
												"src": "8736:476:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9391:300:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9401:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9442:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9453:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9438:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9438:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9458:2:9",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9431:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9481:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9492:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9477:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9497:34:9",
																		"type": "",
																		"value": "ABOAT::updateRewardToken: New re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9470:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9470:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9470:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9552:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9563:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9548:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9548:18:9"
																	},
																	{
																		"hexValue": "776172642073686f756c6420626520646966666572656e742066726f6d206375",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9568:34:9",
																		"type": "",
																		"value": "ward should be different from cu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9541:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9541:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9541:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9623:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9634:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9619:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9619:19:9"
																	},
																	{
																		"hexValue": "7272656e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9640:8:9",
																		"type": "",
																		"value": "rrent."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9612:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9612:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9658:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9670:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9681:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9666:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9666:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9658:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9368:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9382:4:9",
														"type": ""
													}
												],
												"src": "9217:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9870:323:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9887:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9898:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9880:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9880:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9921:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9932:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9917:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9917:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9937:2:9",
																		"type": "",
																		"value": "93"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9910:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9910:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9960:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9971:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9956:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9976:34:9",
																		"type": "",
																		"value": "ABOAT::claim: The percentage of "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9949:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9949:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10042:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10027:18:9"
																	},
																	{
																		"hexValue": "746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10047:34:9",
																		"type": "",
																		"value": "token you can claim is currently"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10020:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10102:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10113:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10098:19:9"
																	},
																	{
																		"hexValue": "207a65726f2e20506c656173652074727920616761696e206c61746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10119:31:9",
																		"type": "",
																		"value": " zero. Please try again later"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10091:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10160:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10172:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10183:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10168:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10160:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9847:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9861:4:9",
														"type": ""
													}
												],
												"src": "9696:497:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10372:390:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10389:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10400:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10382:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10382:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10423:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10434:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10419:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10419:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10439:3:9",
																		"type": "",
																		"value": "119"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10412:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10412:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10463:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10474:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10459:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10479:34:9",
																		"type": "",
																		"value": "ABOAT::updateRewardToken: The co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10452:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10452:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10534:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10545:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10530:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10530:18:9"
																	},
																	{
																		"hexValue": "6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10550:34:9",
																		"type": "",
																		"value": "ntract should contain atleast th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10523:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10523:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10605:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10616:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10601:19:9"
																	},
																	{
																		"hexValue": "652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10622:34:9",
																		"type": "",
																		"value": "e same amount of tokens as from "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10594:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10594:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10594:63:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10677:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10688:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10673:19:9"
																	},
																	{
																		"hexValue": "7468652063757272656e7420726577617264546f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10694:25:9",
																		"type": "",
																		"value": "the current rewardToken"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10666:54:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10729:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10752:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10737:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10729:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10349:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10363:4:9",
														"type": ""
													}
												],
												"src": "10198:564:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10941:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10958:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10951:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10951:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10992:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10988:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10988:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11008:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10981:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10981:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10981:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11042:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11027:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11047:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11020:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11091:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11103:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11099:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11091:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10918:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10932:4:9",
														"type": ""
													}
												],
												"src": "10767:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11302:243:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11312:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11312:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11312:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11364:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11349:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11369:2:9",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11342:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11342:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11392:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11403:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11388:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11388:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a20416d6f756e7420776f756c642065786365656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11408:34:9",
																		"type": "",
																		"value": "ABOAT::buy: Amount would exceed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11381:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11381:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11381:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11463:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11474:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:18:9"
																	},
																	{
																		"hexValue": "7468652072656d61696e696e672062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11479:23:9",
																		"type": "",
																		"value": "the remaining balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11452:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11452:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11452:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11512:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11524:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11535:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11520:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11512:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11279:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11293:4:9",
														"type": ""
													}
												],
												"src": "11128:417:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11724:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11752:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11734:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11734:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11775:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11786:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11771:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11771:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11791:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11764:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11814:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11825:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11810:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11810:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11830:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11803:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11803:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11871:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11883:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11894:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11879:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11879:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11871:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11701:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11715:4:9",
														"type": ""
													}
												],
												"src": "11550:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12082:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12099:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12110:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12092:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12133:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12144:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12122:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12172:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12183:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12168:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12168:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a2053616c65206973206e6f74206f7665722079",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12188:34:9",
																		"type": "",
																		"value": "ABOAT::claim: Sale is not over y"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12161:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12161:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12161:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12243:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12254:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12239:18:9"
																	},
																	{
																		"hexValue": "657421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12259:5:9",
																		"type": "",
																		"value": "et!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12232:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12232:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12274:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12286:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12297:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12282:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12282:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12274:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce962428896ce93b68ffaa1006ed91be0e5f0b040a85b3e71da3db046ac7d335__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12059:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12073:4:9",
														"type": ""
													}
												],
												"src": "11908:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12486:235:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12503:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12537:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12548:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12533:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12533:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12553:2:9",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12576:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12587:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12572:18:9"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12592:34:9",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12565:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12565:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12565:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12658:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12643:18:9"
																	},
																	{
																		"hexValue": "616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12663:15:9",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12636:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12636:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12636:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12688:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12700:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12711:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12696:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12696:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12688:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12463:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12477:4:9",
														"type": ""
													}
												],
												"src": "12312:409:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12900:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12917:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12928:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12910:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12951:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12962:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12947:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12947:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12940:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12940:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12940:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12990:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13001:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12986:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12986:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d416e64456e6453616c653a2053616c6520616c72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13006:34:9",
																		"type": "",
																		"value": "ABOAT::claimAndEndSale: Sale alr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12979:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12979:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13061:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13072:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13057:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13057:18:9"
																	},
																	{
																		"hexValue": "6561647920656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13077:12:9",
																		"type": "",
																		"value": "eady ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13050:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13050:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13099:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13111:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13122:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13107:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13099:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbf504c10217341d1855cad0edfa02b8afc7c010295b8c6040565196419e6fd8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12877:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12891:4:9",
														"type": ""
													}
												],
												"src": "12726:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13311:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13328:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13339:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13321:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13321:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13321:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13362:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13373:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13358:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13378:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13351:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13351:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13401:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13412:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13397:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13417:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13390:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13390:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13472:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13483:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13468:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13488:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13461:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13461:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13461:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13510:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13522:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13533:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13518:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13518:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13510:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13288:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13302:4:9",
														"type": ""
													}
												],
												"src": "13137:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13722:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13739:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13750:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13732:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13732:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13732:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13773:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13784:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13769:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13769:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13789:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13762:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13762:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13762:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13812:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13823:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13808:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13808:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a7570646174654166746572446179733a2053616c65206e6f74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13828:34:9",
																		"type": "",
																		"value": "ABOAT::updateAfterDays: Sale not"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13801:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13801:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13883:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13894:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13879:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13879:18:9"
																	},
																	{
																		"hexValue": "20656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13899:8:9",
																		"type": "",
																		"value": " ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13872:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13872:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13872:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13917:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13929:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13940:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13925:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13925:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13917:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e729ea7bc20689f9b8b7bee880661ff8353a38a7c244a8fb91e624df3acfaebe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13699:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13713:4:9",
														"type": ""
													}
												],
												"src": "13548:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14129:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14146:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14157:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14139:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14180:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14191:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14176:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14176:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14196:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14169:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14169:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14219:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14230:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14215:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a2053616c6520616c726561647920656e64656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14235:33:9",
																		"type": "",
																		"value": "ABOAT::buy: Sale already ended!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14208:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14208:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14208:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14278:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14290:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14301:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14286:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14286:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14278:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f805a4d8e4faa04b6d70860d5d9f7a495cbfa53dfee97f8ef85439ca16646051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14106:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14120:4:9",
														"type": ""
													}
												],
												"src": "13955:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14489:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14506:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14517:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14499:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14499:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14499:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14540:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14551:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14536:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14536:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14556:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14529:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14529:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14529:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14579:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14590:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14575:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14575:18:9"
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a2053656e742076616c756520646f65736e2774206d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14595:34:9",
																		"type": "",
																		"value": "ABOAT::buy: Sent value doesn't m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14568:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14568:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14568:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14650:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14661:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14646:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14646:18:9"
																	},
																	{
																		"hexValue": "6565742074686520676976656e20616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14666:22:9",
																		"type": "",
																		"value": "eet the given amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14639:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14639:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14698:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14710:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14721:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14706:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14706:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14698:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_feb0cc47c5ad597177363405a6ffd2e717b6506c208940c9b41452af066cf2ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14466:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14480:4:9",
														"type": ""
													}
												],
												"src": "14315:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14837:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14847:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14859:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14870:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14855:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14855:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14847:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14889:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14900:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14882:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14882:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14806:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14817:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14828:4:9",
														"type": ""
													}
												],
												"src": "14736:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14963:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14973:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14989:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14983:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "14973:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15001:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "15023:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "15039:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15045:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15035:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15035:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15054:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15050:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15019:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "15005:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15134:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15136:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15136:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15136:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15077:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15089:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15074:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15074:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15113:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15125:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15110:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15110:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15071:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:62:9"
															},
															"nodeType": "YulIf",
															"src": "15068:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15172:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "15176:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15165:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15165:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14943:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14952:6:9",
														"type": ""
													}
												],
												"src": "14918:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15267:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15311:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15313:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15313:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15313:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15283:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15291:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15280:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15280:30:9"
															},
															"nodeType": "YulIf",
															"src": "15277:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15342:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15358:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15361:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15354:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15370:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15350:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15350:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15342:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15247:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15258:4:9",
														"type": ""
													}
												],
												"src": "15198:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15434:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15461:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15463:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15463:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15463:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15450:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15457:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15453:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15453:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15447:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15447:13:9"
															},
															"nodeType": "YulIf",
															"src": "15444:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15492:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15503:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15506:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15499:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15499:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15492:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15417:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15420:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15426:3:9",
														"type": ""
													}
												],
												"src": "15386:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15565:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15596:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15617:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15624:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15629:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15620:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15620:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15610:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15610:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15610:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15661:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15664:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15654:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15654:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15654:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15689:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15692:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15682:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15682:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15682:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15585:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15578:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15578:9:9"
															},
															"nodeType": "YulIf",
															"src": "15575:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15716:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15725:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15728:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15721:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15721:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15716:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15550:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15553:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15559:1:9",
														"type": ""
													}
												],
												"src": "15519:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15793:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15852:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15854:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15854:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15854:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15824:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15817:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15817:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15810:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15810:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15832:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15843:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15839:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15839:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15847:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15835:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15835:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15829:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15829:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15806:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15806:45:9"
															},
															"nodeType": "YulIf",
															"src": "15803:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15883:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15898:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15901:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15894:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15894:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15883:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15772:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15775:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15781:7:9",
														"type": ""
													}
												],
												"src": "15741:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15963:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15985:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15987:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15987:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15987:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15979:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15982:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15976:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15976:8:9"
															},
															"nodeType": "YulIf",
															"src": "15973:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16016:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16028:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16031:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16024:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16024:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16016:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15945:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15948:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15954:4:9",
														"type": ""
													}
												],
												"src": "15914:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16097:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16107:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16116:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16111:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16176:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16201:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16206:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16197:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16197:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16220:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16225:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16216:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16216:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16210:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16210:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16190:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16190:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16190:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16137:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16140:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16134:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16134:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16148:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16150:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16159:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16162:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16155:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16155:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16150:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16130:3:9",
																"statements": []
															},
															"src": "16126:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16265:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16278:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16283:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16274:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16274:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16292:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16267:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16267:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16267:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16254:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16257:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16251:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16251:13:9"
															},
															"nodeType": "YulIf",
															"src": "16248:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16075:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16080:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16085:6:9",
														"type": ""
													}
												],
												"src": "16044:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16354:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16385:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16387:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16387:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16387:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16370:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16381:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16377:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16367:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16367:17:9"
															},
															"nodeType": "YulIf",
															"src": "16364:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16416:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16427:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16423:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16423:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16416:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16336:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16346:3:9",
														"type": ""
													}
												],
												"src": "16307:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16479:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16496:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16503:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16508:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16499:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16489:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16489:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16536:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16539:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16529:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16529:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16560:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16563:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16553:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16553:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16553:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16447:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16611:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16628:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16635:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16640:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16631:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16631:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16621:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16621:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16621:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16668:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16671:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16661:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16661:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16661:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16692:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16695:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16685:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16685:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16579:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16743:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16760:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16767:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16772:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16763:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16763:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16753:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16753:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16753:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16800:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16803:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16793:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16793:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16824:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16827:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16817:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16817:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16817:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16711:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16888:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16952:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16961:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16964:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16954:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16954:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16954:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16911:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16922:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16937:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16942:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16933:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16933:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16946:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16929:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16929:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16918:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16918:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16908:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16908:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16901:50:9"
															},
															"nodeType": "YulIf",
															"src": "16898:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16877:5:9",
														"type": ""
													}
												],
												"src": "16843:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let src := add(_3, _2)\n        if gt(add(add(_3, shl(5, _4)), _2), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$181(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$181__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_190425b621cd0917f901d475559f5b5f4907d9bd007efefdf1c38142b73fc846__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ABOAT:disableWhitelist: Whitelis\")\n        mstore(add(headStart, 96), \"t is already disabled\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_381934fd8e3537d618054e1cdd896b2699077774bd75b61e814d5bc15cd4fdd5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ABOAT::buy: Amount would exceed \")\n        mstore(add(headStart, 96), \"the maximum allowed limit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransferETH:\")\n        mstore(add(headStart, 96), \" ETH transfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5259ad519682c3909bbda56553acf825a6fac261a533fe61e29e9dae37ec77f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ABOAT::claim: Claim is not avail\")\n        mstore(add(headStart, 96), \"able yet.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"ABOAT::claim: Already claimed yo\")\n        mstore(add(headStart, 96), \"ur currently eligible tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5860cae0068b83961f7ac97471bc52ec93fbafb2e22612e016894525ffbff9d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ABOAT::buy: You're not whitelist\")\n        mstore(add(headStart, 96), \"ed for this sale!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 72)\n        mstore(add(headStart, 64), \"ABOAT::whitelist: You can't add \")\n        mstore(add(headStart, 96), \"more than 100 addresses at the s\")\n        mstore(add(headStart, 128), \"ame time\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"ABOAT::updateRewardToken: New re\")\n        mstore(add(headStart, 96), \"ward should be different from cu\")\n        mstore(add(headStart, 128), \"rrent.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 93)\n        mstore(add(headStart, 64), \"ABOAT::claim: The percentage of \")\n        mstore(add(headStart, 96), \"token you can claim is currently\")\n        mstore(add(headStart, 128), \" zero. Please try again later\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 119)\n        mstore(add(headStart, 64), \"ABOAT::updateRewardToken: The co\")\n        mstore(add(headStart, 96), \"ntract should contain atleast th\")\n        mstore(add(headStart, 128), \"e same amount of tokens as from \")\n        mstore(add(headStart, 160), \"the current rewardToken\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ABOAT::buy: Amount would exceed \")\n        mstore(add(headStart, 96), \"the remaining balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce962428896ce93b68ffaa1006ed91be0e5f0b040a85b3e71da3db046ac7d335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ABOAT::claim: Sale is not over y\")\n        mstore(add(headStart, 96), \"et!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dbf504c10217341d1855cad0edfa02b8afc7c010295b8c6040565196419e6fd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ABOAT::claimAndEndSale: Sale alr\")\n        mstore(add(headStart, 96), \"eady ended\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e729ea7bc20689f9b8b7bee880661ff8353a38a7c244a8fb91e624df3acfaebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ABOAT::updateAfterDays: Sale not\")\n        mstore(add(headStart, 96), \" ended\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f805a4d8e4faa04b6d70860d5d9f7a495cbfa53dfee97f8ef85439ca16646051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ABOAT::buy: Sale already ended!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_feb0cc47c5ad597177363405a6ffd2e717b6506c208940c9b41452af066cf2ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ABOAT::buy: Sent value doesn't m\")\n        mstore(add(headStart, 96), \"eet the given amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101d85760003560e01c8063a4d66daf11610102578063e754e7c411610095578063f3739e0511610064578063f3739e0514610507578063f7c618c11461053d578063f89be5931461055d578063f8cf31cb1461057357600080fd5b8063e754e7c41461049c578063ef78d4fd146104b2578063efe95f51146104c7578063f2fde38b146104e757600080fd5b8063c884ef83116100d1578063c884ef8314610417578063d6b0f48414610444578063d936547e14610459578063d96a094a1461048957600080fd5b8063a4d66daf1461039f578063a5ebf835146103b5578063a960c65f146103ca578063bd8aa780146103f757600080fd5b80635ed9ebfc1161017a578063856734c411610149578063856734c41461032c5780638da5cb5b146103565780639b8906ae146103745780639c92431b1461038a57600080fd5b80635ed9ebfc146102be578063667022fd146102d4578063715018a6146103015780637b1b1de61461031657600080fd5b80632fba2c85116101b65780632fba2c851461023c5780633013ce29146102515780634e71d92d146102895780635372a58e1461029e57600080fd5b80630c0e0862146101dd578063151bad0a146101ff5780632f66194614610227575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004611ee4565b610593565b005b34801561020b57600080fd5b50610214603281565b6040519081526020015b60405180910390f35b34801561023357600080fd5b50610214605a81565b34801561024857600080fd5b50610214610629565b34801561025d57600080fd5b50600254610271906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b34801561029557600080fd5b506101fd6106d6565b3480156102aa57600080fd5b506101fd6102b9366004611e00565b610aed565b3480156102ca57600080fd5b5061021460065481565b3480156102e057600080fd5b506102146102ef366004611dae565b600b6020526000908152604090205481565b34801561030d57600080fd5b506101fd610d7f565b34801561032257600080fd5b5061021460035481565b34801561033857600080fd5b506009546103469060ff1681565b604051901515815260200161021e565b34801561036257600080fd5b506000546001600160a01b0316610271565b34801561038057600080fd5b5061021460075481565b34801561039657600080fd5b50610214610db5565b3480156103ab57600080fd5b5061021460045481565b3480156103c157600080fd5b50610214606481565b3480156103d657600080fd5b506102146103e5366004611dae565b600d6020526000908152604090205481565b34801561040357600080fd5b506101fd610412366004611dcb565b610e54565b34801561042357600080fd5b50610214610432366004611dae565b600c6020526000908152604090205481565b34801561045057600080fd5b506101fd610f37565b34801561046557600080fd5b50610346610474366004611dae565b600a6020526000908152604090205460ff1681565b6101fd610497366004611ee4565b610fdd565b3480156104a857600080fd5b5061021460085481565b3480156104be57600080fd5b50610214601e81565b3480156104d357600080fd5b506101fd6104e2366004611ee4565b6112c4565b3480156104f357600080fd5b506101fd610502366004611dae565b6114a2565b34801561051357600080fd5b50610271610522366004611dae565b600e602052600090815260409020546001600160a01b031681565b34801561054957600080fd5b50600154610271906001600160a01b031681565b34801561056957600080fd5b5061021460055481565b34801561057f57600080fd5b506101fd61058e366004611dae565b61153a565b6000546001600160a01b031633146105c65760405162461bcd60e51b81526004016105bd90611fd3565b60405180910390fd5b6007546106245760405162461bcd60e51b815260206004820152602660248201527f41424f41543a3a7570646174654166746572446179733a2053616c65206e6f7460448201526508195b99195960d21b60648201526084016105bd565b600855565b6001546000906001600160a01b031661064f5760065461064a9047906117f2565b905090565b6006546001546040516370a0823160e01b815230600482015261064a92916001600160a01b0316906370a082319060240160206040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190611efd565b906117f2565b6007546107315760405162461bcd60e51b815260206004820152602360248201527f41424f41543a3a636c61696d3a2053616c65206973206e6f74206f766572207960448201526265742160e81b60648201526084016105bd565b60085461074e906107459062015180611805565b60075490611811565b4210156107af5760405162461bcd60e51b815260206004820152602960248201527f41424f41543a3a636c61696d3a20436c61696d206973206e6f7420617661696c60448201526830b13632903cb2ba1760b91b60648201526084016105bd565b60006107b9610db5565b9050600081116108575760405162461bcd60e51b815260206004820152605d60248201527f41424f41543a3a636c61696d3a205468652070657263656e74616765206f662060448201527f746f6b656e20796f752063616e20636c61696d2069732063757272656e746c7960648201527f207a65726f2e20506c656173652074727920616761696e206c61746572000000608482015260a4016105bd565b600154336000908152600e60205260409020546001600160a01b039081169116146108c257600154336000908152600e6020908152604080832080546001600160a01b0319166001600160a01b0390951694909417909355600c8152828220829055600d9052908120555b336000908152600c602052604090205481116109465760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f60448201527f75722063757272656e746c7920656c696769626c6520746f6b656e730000000060648201526084016105bd565b60065460055411610a4557336000908152600c602052604081208054908390556003549091906109af906109a3670de0b6b3a76400006109a96103e88361098d8a8a6117f2565b336000908152600b602052604090205490611805565b9061181d565b90611805565b336000908152600d60205260409020549091506109cc9082611811565b336000908152600d60205260409020556001546001600160a01b031615610a0957600154610a04906001600160a01b03163383611829565b610a13565b610a13338261195a565b604051819033907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a90600090a3505050565b336000908152600c602052604090206103e890556002546001600160a01b031615610a9657600254336000818152600b6020526040902054610a91926001600160a01b03169190611829565b610ab0565b336000818152600b6020526040902054610ab0919061195a565b336000818152600b60205260408082205490519092917fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91a35b50565b6000546001600160a01b03163314610b175760405162461bcd60e51b81526004016105bd90611fd3565b606482511115610b395760405162461bcd60e51b81526004016105bd90611f65565b6000805b8351811015610d3e576001600a6000868481518110610b5e57610b5e61217f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506000610bd96003546109a3670de0b6b3a7640000878681518110610bc357610bc361217f565b602002602001015161180590919063ffffffff16565b90506000610be9826106d0610629565b11610c065760405162461bcd60e51b81526004016105bd90612008565b610c70848381518110610c1b57610c1b61217f565b6020026020010151600b6000888681518110610c3957610c3961217f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205461181190919063ffffffff16565b600b6000878581518110610c8657610c8661217f565b6020908102919091018101516001600160a01b0316825281019190915260400160002055610cb48382611811565b60025486519194506001600160a01b031690600e90600090889086908110610cde57610cde61217f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550508080610d369061214e565b915050610b3d565b50600654610d4c9082611811565b60065582516040517f6074084f4dbd9879d266f074be61eb039a0db2aa46e98e700223ad5c2bef5bd590600090a2505050565b6000546001600160a01b03163314610da95760405162461bcd60e51b81526004016105bd90611fd3565b610db36000611a39565b565b600080610dce605a60075461181190919063ffffffff16565b90506000610ded60085462015180610de691906120ec565b8390611811565b9050600080600754118015610e0157508142115b610e0c576064610e37565b610e376064610e3160326109a9610e27601e620151806120ec565b6109a342896117f2565b90611811565b90506103e88111610e485780610e4c565b6103e85b935050505090565b6000546001600160a01b03163314610e7e5760405162461bcd60e51b81526004016105bd90611fd3565b606481511115610ea05760405162461bcd60e51b81526004016105bd90611f65565b60005b8151811015610f08576001600a6000848481518110610ec457610ec461217f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610f008161214e565b915050610ea3565b5080516040517ff899e24720678b9547483d3c332e9a7e1eabb9c013bd2e0ff30d83806cf421f390600090a250565b6000546001600160a01b03163314610f615760405162461bcd60e51b81526004016105bd90611fd3565b60095460ff16610fd15760405162461bcd60e51b815260206004820152603560248201527f41424f41543a64697361626c6557686974656c6973743a2057686974656c69736044820152741d081a5cc8185b1c9958591e48191a5cd8589b1959605a1b60648201526084016105bd565b6009805460ff19169055565b6007541561102d5760405162461bcd60e51b815260206004820152601f60248201527f41424f41543a3a6275793a2053616c6520616c726561647920656e646564210060448201526064016105bd565b336000908152600a602052604090205460ff168061104e575060095460ff16155b6110b45760405162461bcd60e51b815260206004820152603160248201527f41424f41543a3a6275793a20596f75277265206e6f742077686974656c697374604482015270656420666f7220746869732073616c652160781b60648201526084016105bd565b6002546001600160a01b0316158015806110cd57508134145b6111365760405162461bcd60e51b815260206004820152603460248201527f41424f41543a3a6275793a2053656e742076616c756520646f65736e2774206d60448201527319595d081d1a194819da5d995b88185b5bdd5b9d60621b60648201526084016105bd565b600454336000908152600b60205260409020546111539084611811565b11156111c75760405162461bcd60e51b815260206004820152603960248201527f41424f41543a3a6275793a20416d6f756e7420776f756c64206578636565642060448201527f746865206d6178696d756d20616c6c6f776564206c696d69740000000000000060648201526084016105bd565b6003546000906111e3906109a385670de0b6b3a7640000611805565b905060006111f3826106d0610629565b116112105760405162461bcd60e51b81526004016105bd90612008565b8161122d5760025461122d906001600160a01b0316333086611a89565b336000908152600b60205260409020546112479084611811565b336000908152600b60205260409020556006546112649082611811565b600655600254336000818152600e602052604080822080546001600160a01b0319166001600160a01b0390951694909417909355915185927fc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d6791a3505050565b6000546001600160a01b031633146112ee5760405162461bcd60e51b81526004016105bd90611fd3565b600754156113515760405162461bcd60e51b815260206004820152602a60248201527f41424f41543a3a636c61696d416e64456e6453616c653a2053616c6520616c726044820152691958591e48195b99195960b21b60648201526084016105bd565b426007556006546005541161140c5760088190556002546001600160a01b031615611402576002546040516370a0823160e01b81523060048201526113fd916001600160a01b031690339082906370a08231906024015b60206040518083038186803b1580156113c057600080fd5b505afa1580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f89190611efd565b611829565b611462565b6113fd334761195a565b60006008556001546001600160a01b031615611458576001546040516370a0823160e01b81523060048201526113fd916001600160a01b031690339082906370a08231906024016113a8565b611462334761195a565b600854611476906107459062015180611805565b6040517f94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a90600090a250565b6000546001600160a01b031633146114cc5760405162461bcd60e51b81526004016105bd90611fd3565b6001600160a01b0381166115315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bd565b610aea81611a39565b6000546001600160a01b031633146115645760405162461bcd60e51b81526004016105bd90611fd3565b6001546001600160a01b03828116911614156115f75760405162461bcd60e51b815260206004820152604660248201527f41424f41543a3a757064617465526577617264546f6b656e3a204e657720726560448201527f776172642073686f756c6420626520646966666572656e742066726f6d206375606482015265393932b73a1760d11b608482015260a4016105bd565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561163a57600080fd5b505afa15801561164e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116729190611efd565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156116b157600080fd5b505afa1580156116c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e99190611efd565b146117a85760405162461bcd60e51b815260206004820152607760248201527f41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f60448201527f6e74726163742073686f756c6420636f6e7461696e2061746c6561737420746860648201527f652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d2060848201527f7468652063757272656e7420726577617264546f6b656e00000000000000000060a482015260c4016105bd565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f3fcfc24a3384ca156092d9242cb0f84abaf442146d91b8c93bea526561b83f8390600090a250565b60006117fe828461210b565b9392505050565b60006117fe82846120ec565b60006117fe82846120b2565b60006117fe82846120ca565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916118859190611f16565b6000604051808303816000865af19150503d80600081146118c2576040519150601f19603f3d011682016040523d82523d6000602084013e6118c7565b606091505b50915091508180156118f15750805115806118f15750808060200190518101906118f19190611ec2565b6119535760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016105bd565b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040516119849190611f16565b60006040518083038185875af1925050503d80600081146119c1576040519150601f19603f3d011682016040523d82523d6000602084013e6119c6565b606091505b5050905080611a345760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016105bd565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ae3908590611ae9565b50505050565b6000611b3e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bbb9092919063ffffffff16565b805190915015611a345780806020019051810190611b5c9190611ec2565b611a345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105bd565b6060611bca8484600085611bd2565b949350505050565b606082471015611c335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105bd565b843b611c815760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bd565b600080866001600160a01b03168587604051611c9d9190611f16565b60006040518083038185875af1925050503d8060008114611cda576040519150601f19603f3d011682016040523d82523d6000602084013e611cdf565b606091505b5091509150611cef828286611cfa565b979650505050505050565b60608315611d095750816117fe565b825115611d195782518084602001fd5b8160405162461bcd60e51b81526004016105bd9190611f32565b600082601f830112611d4457600080fd5b81356020611d59611d548361208e565b61205d565b80838252828201915082860187848660051b8901011115611d7957600080fd5b60005b85811015611da1578135611d8f816121ab565b84529284019290840190600101611d7c565b5090979650505050505050565b600060208284031215611dc057600080fd5b81356117fe816121ab565b600060208284031215611ddd57600080fd5b813567ffffffffffffffff811115611df457600080fd5b611bca84828501611d33565b60008060408385031215611e1357600080fd5b823567ffffffffffffffff80821115611e2b57600080fd5b611e3786838701611d33565b9350602091508185013581811115611e4e57600080fd5b85019050601f81018613611e6157600080fd5b8035611e6f611d548261208e565b80828252848201915084840189868560051b8701011115611e8f57600080fd5b600094505b83851015611eb2578035835260019490940193918501918501611e94565b5080955050505050509250929050565b600060208284031215611ed457600080fd5b815180151581146117fe57600080fd5b600060208284031215611ef657600080fd5b5035919050565b600060208284031215611f0f57600080fd5b5051919050565b60008251611f28818460208701612122565b9190910192915050565b6020815260008251806020840152611f51816040850160208701612122565b601f01601f19169190910160400192915050565b60208082526048908201527f41424f41543a3a77686974656c6973743a20596f752063616e2774206164642060408201527f6d6f7265207468616e2031303020616464726573736573206174207468652073606082015267616d652074696d6560c01b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526035908201527f41424f41543a3a6275793a20416d6f756e7420776f756c6420657863656564206040820152747468652072656d61696e696e672062616c616e636560581b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561208657612086612195565b604052919050565b600067ffffffffffffffff8211156120a8576120a8612195565b5060051b60200190565b600082198211156120c5576120c5612169565b500190565b6000826120e757634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561210657612106612169565b500290565b60008282101561211d5761211d612169565b500390565b60005b8381101561213d578181015183820152602001612125565b83811115611ae35750506000910152565b600060001982141561216257612162612169565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610aea57600080fdfea2646970667358221220740bdcaf50cb2d0f996efe8b066170e7a5a7446e5eb776c4c91712070986d38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA4D66DAF GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE754E7C4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF3739E05 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF3739E05 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xF89BE593 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE754E7C4 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xEFE95F51 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC884EF83 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xD6B0F484 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4D66DAF EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xA5EBF835 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xA960C65F EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBD8AA780 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5ED9EBFC GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x856734C4 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x856734C4 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x9B8906AE EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x9C92431B EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5ED9EBFC EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x667022FD EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7B1B1DE6 EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FBA2C85 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2FBA2C85 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x5372A58E EQ PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0E0862 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x151BAD0A EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x2F661946 EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x5A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x629 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x271 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x6D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xD7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x346 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x271 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0xDB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x64 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xF37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x346 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x1E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x12C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x271 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAE JUMP JUMPDEST PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7570646174654166746572446179733A2053616C65206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x8195B991959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64F JUMPI PUSH1 0x6 SLOAD PUSH2 0x64A SWAP1 SELFBALANCE SWAP1 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x64A SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 PUSH2 0x17F2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A2053616C65206973206E6F74206F7665722079 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x74E SWAP1 PUSH2 0x745 SWAP1 PUSH3 0x15180 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1811 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20436C61696D206973206E6F7420617661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x30B13632903CB2BA17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x207A65726F2E20506C656173652074727920616761696E206C61746572000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x8C2 JUMPI PUSH1 0x1 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xC DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xD SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75722063757272656E746C7920656C696769626C6520746F6B656E7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0xA45 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x9AF SWAP1 PUSH2 0x9A3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9A9 PUSH2 0x3E8 DUP4 PUSH2 0x98D DUP11 DUP11 PUSH2 0x17F2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1805 JUMP JUMPDEST SWAP1 PUSH2 0x181D JUMP JUMPDEST SWAP1 PUSH2 0x1805 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x9CC SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA09 JUMPI PUSH1 0x1 SLOAD PUSH2 0xA04 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0xA13 CALLER DUP3 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 CALLER SWAP1 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3E8 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA96 JUMPI PUSH1 0x2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA91 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 LOG3 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x64 DUP3 MLOAD GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB5E JUMPI PUSH2 0xB5E PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xBD9 PUSH1 0x3 SLOAD PUSH2 0x9A3 PUSH8 0xDE0B6B3A7640000 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xBC3 JUMPI PUSH2 0xBC3 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1805 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBE9 DUP3 PUSH2 0x6D0 PUSH2 0x629 JUMP JUMPDEST GT PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x2008 JUMP JUMPDEST PUSH2 0xC70 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1B JUMPI PUSH2 0xC1B PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC39 JUMPI PUSH2 0xC39 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1811 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC86 JUMPI PUSH2 0xC86 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xCB4 DUP4 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 MLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xE SWAP1 PUSH1 0x0 SWAP1 DUP9 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0xD36 SWAP1 PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB3D JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xD4C SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xDB3 PUSH1 0x0 PUSH2 0x1A39 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDCE PUSH1 0x5A PUSH1 0x7 SLOAD PUSH2 0x1811 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDED PUSH1 0x8 SLOAD PUSH3 0x15180 PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD GT DUP1 ISZERO PUSH2 0xE01 JUMPI POP DUP2 TIMESTAMP GT JUMPDEST PUSH2 0xE0C JUMPI PUSH1 0x64 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE37 PUSH1 0x64 PUSH2 0xE31 PUSH1 0x32 PUSH2 0x9A9 PUSH2 0xE27 PUSH1 0x1E PUSH3 0x15180 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x9A3 TIMESTAMP DUP10 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP2 GT PUSH2 0xE48 JUMPI DUP1 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x64 DUP2 MLOAD GT ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xF00 DUP2 PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA3 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x40 MLOAD PUSH32 0xF899E24720678B9547483D3C332E9A7E1EABB9C013BD2E0FF30D83806CF421F3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A64697361626C6557686974656C6973743A2057686974656C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1D081A5CC8185B1C9958591E48191A5CD8589B1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A2053616C6520616C726561647920656E6465642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x104E JUMPI POP PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20596F75277265206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x656420666F7220746869732073616C6521 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO DUP1 PUSH2 0x10CD JUMPI POP DUP2 CALLVALUE EQ JUMPDEST PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A2053656E742076616C756520646F65736E2774206D PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x19595D081D1A194819DA5D995B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1153 SWAP1 DUP5 PUSH2 0x1811 JUMP JUMPDEST GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206D6178696D756D20616C6C6F776564206C696D697400000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11E3 SWAP1 PUSH2 0x9A3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11F3 DUP3 PUSH2 0x6D0 PUSH2 0x629 JUMP JUMPDEST GT PUSH2 0x1210 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x2008 JUMP JUMPDEST DUP2 PUSH2 0x122D JUMPI PUSH1 0x2 SLOAD PUSH2 0x122D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x1A89 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1247 SWAP1 DUP5 PUSH2 0x1811 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x6 SLOAD PUSH2 0x1264 SWAP1 DUP3 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x2 SLOAD CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD DUP6 SWAP3 PUSH32 0xC55650CCDA1011E1CDC769B1FBF546EBB8C97800B6072B49E06CD560305B1D67 SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D416E64456E6453616C653A2053616C6520616C72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1958591E48195B991959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST TIMESTAMP PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x140C JUMPI PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1402 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x13FD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x13FD CALLER SELFBALANCE PUSH2 0x195A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1458 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x13FD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x1462 CALLER SELFBALANCE PUSH2 0x195A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1476 SWAP1 PUSH2 0x745 SWAP1 PUSH3 0x15180 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x94BB74A9473AE4063EC1E73DC3E35FD4B5ABE9CC1E43AD0DB84E5358559CCD5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP1 PUSH2 0x1FD3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776172642073686F756C6420626520646966666572656E742066726F6D206375 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x393932B73A17 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1672 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E9 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST EQ PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x7468652063757272656E7420726577617264546F6B656E000000000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x210B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP3 DUP5 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1885 SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18C2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x18F1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x18F1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1984 SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19C6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1AE3 SWAP1 DUP6 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BBB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1A34 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH2 0x1A34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BCA DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1BD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5BD JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1C9D SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CDA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CEF DUP3 DUP3 DUP7 PUSH2 0x1CFA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1D09 JUMPI POP DUP2 PUSH2 0x17FE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1D19 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1D59 PUSH2 0x1D54 DUP4 PUSH2 0x208E JUMP JUMPDEST PUSH2 0x205D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1DA1 JUMPI DUP2 CALLDATALOAD PUSH2 0x1D8F DUP2 PUSH2 0x21AB JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D7C JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17FE DUP2 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCA DUP5 DUP3 DUP6 ADD PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E37 DUP7 DUP4 DUP8 ADD PUSH2 0x1D33 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD SWAP1 POP PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1E61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1E6F PUSH2 0x1D54 DUP3 PUSH2 0x208E JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x1E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1EB2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x1E94 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F28 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F51 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x48 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A77686974656C6973743A20596F752063616E27742061646420 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D6F7265207468616E2031303020616464726573736573206174207468652073 PUSH1 0x60 DUP3 ADD MSTORE PUSH8 0x616D652074696D65 PUSH1 0xC0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x7468652072656D61696E696E672062616C616E6365 PUSH1 0x58 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2086 JUMPI PUSH2 0x2086 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20A8 JUMPI PUSH2 0x20A8 PUSH2 0x2195 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C5 PUSH2 0x2169 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2106 JUMPI PUSH2 0x2106 PUSH2 0x2169 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211D PUSH2 0x2169 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x213D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AE3 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2162 JUMPI PUSH2 0x2162 PUSH2 0x2169 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xBDCAF50CB2D0F996EFE8B066170E7A5A7446E5EB7 PUSH23 0xC4C91712070986D38F64736F6C63430008070033000000 ",
							"sourceMap": "434:11580:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6069:176;;;;;;;;;;-1:-1:-1;6069:176:6;;;;;:::i;:::-;;:::i;:::-;;1642:48;;;;;;;;;;;;1688:2;1642:48;;;;;14882:25:9;;;14870:2;14855:18;1642:48:6;;;;;;;;1774:40;;;;;;;;;;;;1812:2;1774:40;;7878:275;;;;;;;;;;;;;:::i;929:26::-;;;;;;;;;;-1:-1:-1;929:26:6;;;;-1:-1:-1;;;;;929:26:6;;;;;;-1:-1:-1;;;;;3891:32:9;;;3873:51;;3861:2;3846:18;929:26:6;3727:203:9;10200:1812:6;;;;;;;;;;;;;:::i;6628:921::-;;;;;;;;;;-1:-1:-1;6628:921:6;;;;;:::i;:::-;;:::i;1194:25::-;;;;;;;;;;;;;;;;2063:41;;;;;;;;;;-1:-1:-1;2063:41:6;;;;;:::i;:::-;;;;;;;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;967:28:6:-;;;;;;;;;;;;;;;;1900:35;;;;;;;;;;-1:-1:-1;1900:35:6;;;;;;;;;;;4759:14:9;;4752:22;4734:41;;4722:2;4707:18;1900:35:6;4594:187:9;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1261:28:6;;;;;;;;;;;;;;;;8163:513;;;;;;;;;;;;;:::i;1034:20::-;;;;;;;;;;;;;;;;1515:52;;;;;;;;;;;;1564:3;1515:52;;2255:48;;;;;;;;;;-1:-1:-1;2255:48:6;;;;;:::i;:::-;;;;;;;;;;;;;;6259:363;;;;;;;;;;-1:-1:-1;6259:363:6;;;;;:::i;:::-;;:::i;2152:42::-;;;;;;;;;;-1:-1:-1;2152:42:6;;;;;:::i;:::-;;;;;;;;;;;;;;5090:178;;;;;;;;;;;;;:::i;2014:43::-;;;;;;;;;;-1:-1:-1;2014:43:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;9012:1051;;;;;;:::i;:::-;;:::i;1343:24::-;;;;;;;;;;;;;;;;1434:35;;;;;;;;;;;;1467:2;1434:35;;3916:1164;;;;;;;;;;-1:-1:-1;3916:1164:6;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;2351:51:6:-;;;;;;;;;;-1:-1:-1;2351:51:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2351:51:6;;;884:25;;;;;;;;;;-1:-1:-1;884:25:6;;;;-1:-1:-1;;;;;884:25:6;;;1109:22;;;;;;;;;;;;;;;;5546:513;;;;;;;;;;-1:-1:-1;5546:513:6;;;;;:::i;:::-;;:::i;6069:176::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;6149:9:6::1;::::0;6141:65:::1;;;::::0;-1:-1:-1;;;6141:65:6;;13750:2:9;6141:65:6::1;::::0;::::1;13732:21:9::0;13789:2;13769:18;;;13762:30;13828:34;13808:18;;;13801:62;-1:-1:-1;;;13879:18:9;;;13872:36;13925:19;;6141:65:6::1;13548:402:9::0;6141:65:6::1;6216:9;:22:::0;6069:176::o;7878:275::-;7960:11;;7930:7;;-1:-1:-1;;;;;7960:11:6;7949:198;;8035:10;;8009:37;;:21;;:25;:37::i;:::-;8002:44;;7878:275;:::o;7949:198::-;8125:10;;8084:11;;:36;;-1:-1:-1;;;8084:36:6;;8114:4;8084:36;;;3873:51:9;8084:52:6;;8125:10;-1:-1:-1;;;;;8084:11:6;;:21;;3846:18:9;;8084:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;:52::i;10200:1812::-;10242:9;;10234:62;;;;-1:-1:-1;;;10234:62:6;;12110:2:9;10234:62:6;;;12092:21:9;12149:2;12129:18;;;12122:30;12188:34;12168:18;;;12161:62;-1:-1:-1;;;12239:18:9;;;12232:33;12282:19;;10234:62:6;11908:399:9;10234:62:6;10348:9;;10333:38;;10348:21;;10362:6;10348:13;:21::i;:::-;10333:9;;;:13;:38::i;:::-;10314:15;:57;;10306:111;;;;-1:-1:-1;;;10306:111:6;;7274:2:9;10306:111:6;;;7256:21:9;7313:2;7293:18;;;7286:30;7352:34;7332:18;;;7325:62;-1:-1:-1;;;7403:18:9;;;7396:39;7452:19;;10306:111:6;7072:405:9;10306:111:6;10427:25;10455:22;:20;:22::i;:::-;10427:50;;10515:1;10495:17;:21;10487:127;;;;-1:-1:-1;;;10487:127:6;;9898:2:9;10487:127:6;;;9880:21:9;9937:2;9917:18;;;9910:30;9976:34;9956:18;;;9949:62;10047:34;10027:18;;;10020:62;10119:31;10098:19;;;10091:60;10168:19;;10487:127:6;9696:497:9;10487:127:6;10667:11;;10644:10;10667:11;10627:28;;;:16;:28;;;;;;-1:-1:-1;;;;;10627:28:6;;;10667:11;;10627:52;10624:213;;10734:11;;10712:10;10734:11;10695:28;;;:16;:28;;;;;;;;:51;;-1:-1:-1;;;;;;10695:51:6;-1:-1:-1;;;;;10734:11:6;;;10695:51;;;;;;;10760:7;:19;;;;;:23;;;10797:13;:25;;;;;:29;10624:213;10862:10;10854:19;;;;:7;:19;;;;;;:39;-1:-1:-1;10846:112:6;;;;-1:-1:-1;;;10846:112:6;;7684:2:9;10846:112:6;;;7666:21:9;7723:2;7703:18;;;7696:30;7762:34;7742:18;;;7735:62;7833:30;7813:18;;;7806:58;7881:19;;10846:112:6;7482:424:9;10846:112:6;10982:10;;10971:7;;:21;10968:1038;;11043:10;11008:24;11035:19;;;:7;:19;;;;;;;11068:39;;;;11226:13;;11035:19;;11008:24;11138:102;;:83;11216:4;11138:73;11206:4;11138:83;11161:39;11090:17;11035:19;11161:21;:39::i;:::-;11145:10;11138:18;;;;:6;:18;;;;;;;:22;:63::i;:::-;:67;;:73::i;:::-;:77;;:83::i;:102::-;11296:10;11282:25;;;;:13;:25;;;;;;11121:119;;-1:-1:-1;11282:37:6;;11121:119;11282:29;:37::i;:::-;11268:10;11254:25;;;;:13;:25;;;;;:65;11344:11;;-1:-1:-1;;;;;11344:11:6;11336:34;11333:230;;11426:11;;11390:69;;-1:-1:-1;;;;;11426:11:6;11440:10;11452:6;11390:27;:69::i;:::-;11333:230;;;11498:50;11529:10;11541:6;11498:30;:50::i;:::-;11581:27;;11601:6;;11589:10;;11581:27;;;;;10994:625;;10224:1788;10200:1812::o;10968:1038::-;11647:10;11639:19;;;;:7;:19;;;;;11661:4;11639:26;;11693:12;;-1:-1:-1;;;;;11693:12:6;11685:35;11682:256;;11776:12;;11791:10;11776:12;11803:18;;;:6;:18;;;;;;11740:82;;-1:-1:-1;;;;;11776:12:6;;11791:10;11740:27;:82::i;:::-;11682:256;;;11892:10;11904:18;;;;:6;:18;;;;;;11861:62;;11892:10;11861:30;:62::i;:::-;11983:10;11976:18;;;;:6;:18;;;;;;;11956:39;;11976:18;;11983:10;11956:39;;;10968:1038;10224:1788;10200:1812::o;6628:921::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6764:3:6::1;6744:9;:16;:23;;6736:108;;;;-1:-1:-1::0;;;6736:108:6::1;;;;;;;:::i;:::-;6854:23;6895:10:::0;6891:541:::1;6919:9;:16;6911:5;:24;6891:541;;;6992:4;6960:11;:29;6972:9;6982:5;6972:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;6960:29:6::1;-1:-1:-1::0;;;;;6960:29:6::1;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7010:20;7033:43;7062:13;;7033:24;7052:4;7033:7;7041:5;7033:14;;;;;;;;:::i;:::-;;;;;;;:18;;:24;;;;:::i;:43::-;7010:66;;7140:1;7098:39;7124:12;7098:21;:19;:21::i;:39::-;:43;7090:109;;;;-1:-1:-1::0;;;7090:109:6::1;;;;;;;:::i;:::-;7240:44;7269:7;7277:5;7269:14;;;;;;;;:::i;:::-;;;;;;;7240:6;:24;7247:9;7257:5;7247:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7240:24:6::1;-1:-1:-1::0;;;;;7240:24:6::1;;;;;;;;;;;;;:28;;:44;;;;:::i;:::-;7213:6;:24;7220:9;7230:5;7220:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;7213:24:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;7213:24:6;:71;7316:33:::1;:15:::0;7336:12;7316:19:::1;:33::i;:::-;7408:12;::::0;7380:16;;7298:51;;-1:-1:-1;;;;;;7408:12:6::1;::::0;7363:16:::1;::::0;7408:12:::1;::::0;7380:9;;7390:5;;7380:16;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7363:34:6::1;-1:-1:-1::0;;;;;7363:34:6::1;;;;;;;;;;;;;:58;;;;;-1:-1:-1::0;;;;;7363:58:6::1;;;;;-1:-1:-1::0;;;;;7363:58:6::1;;;;;;6946:486;6937:7;;;;;:::i;:::-;;;;6891:541;;;-1:-1:-1::0;7454:10:6::1;::::0;:31:::1;::::0;7469:15;7454:14:::1;:31::i;:::-;7441:10;:44:::0;7525:16;;7500:42:::1;::::0;::::1;::::0;;;::::1;6726:823;6628:921:::0;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;8163:513:6:-;8216:7;8235:18;8256:26;1812:2;8256:9;;:13;;:26;;;;:::i;:::-;8235:47;;8292:19;8314:34;8329:9;;8341:6;8329:18;;;;:::i;:::-;8314:10;;:14;:34::i;:::-;8292:56;;8358:18;8391:1;8379:9;;:13;:46;;;;;8414:11;8396:15;:29;8379:46;:236;;1564:3;8379:236;;;8436:145;1564:3;8436:104;1688:2;8436:66;8486:15;1467:2;8495:6;8486:15;:::i;:::-;8436:32;:15;8456:11;8436:19;:32::i;:104::-;:121;;:145::i;:::-;8358:257;;8645:4;8632:10;:17;:37;;8659:10;8632:37;;;8652:4;8632:37;8625:44;;;;;8163:513;:::o;6259:363::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6361:3:6::1;6341:9;:16;:23;;6333:108;;;;-1:-1:-1::0;;;6333:108:6::1;;;;;;;:::i;:::-;6455:10;6451:116;6479:9;:16;6471:5;:24;6451:116;;;6552:4;6520:11;:29;6532:9;6542:5;6532:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;6520:29:6::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;6520:29:6;:36;;-1:-1:-1;;6520:36:6::1;::::0;::::1;;::::0;;;::::1;::::0;;6497:7;::::1;::::0;::::1;:::i;:::-;;;;6451:116;;;-1:-1:-1::0;6598:16:6;;6581:34:::1;::::0;::::1;::::0;;;::::1;6259:363:::0;:::o;5090:178::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5153:16:6::1;::::0;::::1;;5145:82;;;::::0;-1:-1:-1;;;5145:82:6;;5598:2:9;5145:82:6::1;::::0;::::1;5580:21:9::0;5637:2;5617:18;;;5610:30;5676:34;5656:18;;;5649:62;-1:-1:-1;;;5727:18:9;;;5720:51;5788:19;;5145:82:6::1;5396:417:9::0;5145:82:6::1;5237:16;:24:::0;;-1:-1:-1;;5237:24:6::1;::::0;;5090:178::o;9012:1051::-;9074:9;;:14;9066:58;;;;-1:-1:-1;;;9066:58:6;;14157:2:9;9066:58:6;;;14139:21:9;14196:2;14176:18;;;14169:30;14235:33;14215:18;;;14208:61;14286:18;;9066:58:6;13955:355:9;9066:58:6;9154:10;9142:23;;;;:11;:23;;;;;;;;;:44;;-1:-1:-1;9170:16:6;;;;9169:17;9142:44;9134:106;;;;-1:-1:-1;;;9134:106:6;;8520:2:9;9134:106:6;;;8502:21:9;8559:2;8539:18;;;8532:30;8598:34;8578:18;;;8571:62;-1:-1:-1;;;8649:18:9;;;8642:47;8706:19;;9134:106:6;8318:413:9;9134:106:6;9276:12;;-1:-1:-1;;;;;9276:12:6;9268:35;9321:11;;;:34;;;9349:6;9336:9;:19;9321:34;9313:99;;;;-1:-1:-1;;;9313:99:6;;14517:2:9;9313:99:6;;;14499:21:9;14556:2;14536:18;;;14529:30;14595:34;14575:18;;;14568:62;-1:-1:-1;;;14646:18:9;;;14639:50;14706:19;;9313:99:6;14315:416:9;9313:99:6;9464:5;;9437:10;9430:18;;;;:6;:18;;;;;;:30;;9453:6;9430:22;:30::i;:::-;:39;;9422:109;;;;-1:-1:-1;;;9422:109:6;;6427:2:9;9422:109:6;;;6409:21:9;6466:2;6446:18;;;6439:30;6505:34;6485:18;;;6478:62;6576:27;6556:18;;;6549:55;6621:19;;9422:109:6;6225:421:9;9422:109:6;9585:13;;9541:20;;9564:35;;:16;:6;9575:4;9564:10;:16::i;:35::-;9541:58;;9659:1;9617:39;9643:12;9617:21;:19;:21::i;:39::-;:43;9609:109;;;;-1:-1:-1;;;9609:109:6;;;;;;;:::i;:::-;9732:10;9728:114;;9758:12;;:73;;-1:-1:-1;;;;;9758:12:6;9796:10;9817:4;9824:6;9758:29;:73::i;:::-;9879:10;9872:18;;;;:6;:18;;;;;;:30;;9895:6;9872:22;:30::i;:::-;9858:10;9851:18;;;;:6;:18;;;;;:51;9925:10;;:28;;9940:12;9925:14;:28::i;:::-;9912:10;:41;10002:12;;9980:10;10002:12;9963:28;;;:16;:28;;;;;;:52;;-1:-1:-1;;;;;;9963:52:6;-1:-1:-1;;;;;10002:12:6;;;9963:52;;;;;;;10030:26;;10049:6;;10030:26;;;9056:1007;;9012:1051;:::o;3916:1164::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;3996:9:6::1;::::0;:14;3988:69:::1;;;::::0;-1:-1:-1;;;3988:69:6;;12928:2:9;3988:69:6::1;::::0;::::1;12910:21:9::0;12967:2;12947:18;;;12940:30;13006:34;12986:18;;;12979:62;-1:-1:-1;;;13057:18:9;;;13050:40;13107:19;;3988:69:6::1;12726:406:9::0;3988:69:6::1;4079:15;4067:9;:27:::0;4118:10:::1;::::0;4107:7:::1;::::0;:21:::1;4104:908;;4278:9;:22:::0;;;4325:12:::1;::::0;-1:-1:-1;;;;;4325:12:6::1;4317:35:::0;4314:278:::1;;4408:12;::::0;4435:37:::1;::::0;-1:-1:-1;;;4435:37:6;;4466:4:::1;4435:37;::::0;::::1;3873:51:9::0;4372:101:6::1;::::0;-1:-1:-1;;;;;4408:12:6::1;::::0;4423:10:::1;::::0;4408:12;;4435:22:::1;::::0;3846:18:9;;4435:37:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4372:27;:101::i;:::-;4104:908;;4314:278;4512:65;4543:10;4555:21;4512:30;:65::i;4104:908::-;4710:1;4698:9;:13:::0;4737:11:::1;::::0;-1:-1:-1;;;;;4737:11:6::1;4729:34:::0;4726:276:::1;;4819:11;::::0;4845:36:::1;::::0;-1:-1:-1;;;4845:36:6;;4875:4:::1;4845:36;::::0;::::1;3873:51:9::0;4783:99:6::1;::::0;-1:-1:-1;;;;;4819:11:6::1;::::0;4833:10:::1;::::0;4819:11;;4845:21:::1;::::0;3846:18:9;;4845:36:6::1;3727:203:9::0;4726:276:6::1;4921:66;4952:10;4965:21;4921:30;:66::i;:::-;5050:9;::::0;5036:36:::1;::::0;5050:21:::1;::::0;5064:6:::1;5050:13;:21::i;5036:36::-;5026:47;::::0;::::1;::::0;;;::::1;3916:1164:::0;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;6020:2:9;1926:73:0::1;::::0;::::1;6002:21:9::0;6059:2;6039:18;;;6032:30;6098:34;6078:18;;;6071:62;-1:-1:-1;;;6149:18:9;;;6142:36;6195:19;;1926:73:0::1;5818:402:9::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;5546:513:6:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5651:11:6::1;::::0;-1:-1:-1;;;;;5632:30:6;;::::1;5651:11:::0;::::1;5632:30;;5624:113;;;::::0;-1:-1:-1;;;5624:113:6;;9419:2:9;5624:113:6::1;::::0;::::1;9401:21:9::0;9458:2;9438:18;;;9431:30;9497:34;9477:18;;;9470:62;9568:34;9548:18;;;9541:62;-1:-1:-1;;;9619:19:9;;;9612:37;9666:19;;5624:113:6::1;9217:474:9::0;5624:113:6::1;5799:11;::::0;:36:::1;::::0;-1:-1:-1;;;5799:36:6;;5829:4:::1;5799:36;::::0;::::1;3873:51:9::0;-1:-1:-1;;;;;5799:11:6;;::::1;::::0;:21:::1;::::0;3846:18:9;;5799:36:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5755:40;::::0;-1:-1:-1;;;5755:40:6;;5789:4:::1;5755:40;::::0;::::1;3873:51:9::0;-1:-1:-1;;;;;5755:25:6;::::1;::::0;::::1;::::0;3846:18:9;;5755:40:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:80;5747:212;;;::::0;-1:-1:-1;;;5747:212:6;;10400:2:9;5747:212:6::1;::::0;::::1;10382:21:9::0;10439:3;10419:18;;;10412:31;10479:34;10459:18;;;10452:62;10550:34;10530:18;;;10523:62;10622:34;10601:19;;;10594:63;10694:25;10673:19;;;10666:54;10737:19;;5747:212:6::1;10198:564:9::0;5747:212:6::1;5969:11;:29:::0;;-1:-1:-1;;;;;;5969:29:6::1;-1:-1:-1::0;;;;;5969:29:6;::::1;::::0;;::::1;::::0;;;6013:39:::1;::::0;::::1;::::0;-1:-1:-1;;6013:39:6::1;5546:513:::0;:::o;3039:96:5:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:5:o;3382:::-;3440:7;3466:5;3470:1;3466;:5;:::i;2672:96::-;2730:7;2756:5;2760:1;2756;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;210:384:8:-;382:45;;;-1:-1:-1;;;;;4507:32:9;;;382:45:8;;;4489:51:9;4556:18;;;;4549:34;;;382:45:8;;;;;;;;;;4462:18:9;;;;382:45:8;;;;;;;-1:-1:-1;;;;;382:45:8;-1:-1:-1;;;382:45:8;;;371:57;;-1:-1:-1;;;;371:10:8;;;;:57;;382:45;371:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:105;;;;459:7;:57;;;;-1:-1:-1;471:11:8;;:16;;:44;;;502:4;491:24;;;;;;;;;;;;:::i;:::-;438:149;;;;-1:-1:-1;;;438:149:8;;12514:2:9;438:149:8;;;12496:21:9;12553:2;12533:18;;;12526:30;12592:34;12572:18;;;12565:62;-1:-1:-1;;;12643:18:9;;;12636:43;12696:19;;438:149:8;12312:409:9;438:149:8;313:281;;210:384;;;:::o;1026:248::-;1138:12;;;1098;1138;;;;;;;;;-1:-1:-1;;;;;1116:7:8;;;1131:5;;1116:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:54;;;1182:7;1161:106;;;;-1:-1:-1;;;1161:106:8;;6853:2:9;1161:106:8;;;6835:21:9;6892:2;6872:18;;;6865:30;6931:34;6911:18;;;6904:62;-1:-1:-1;;;6982:18:9;;;6975:50;7042:19;;1161:106:8;6651:416:9;1161:106:8;1087:187;1026:248;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;845:241:2:-;1010:68;;;-1:-1:-1;;;;;4193:15:9;;;1010:68:2;;;4175:34:9;4245:15;;4225:18;;;4218:43;4277:18;;;;4270:34;;;1010:68:2;;;;;;;;;;4110:18:9;;;;1010:68:2;;;;;;;;-1:-1:-1;;;;;1010:68:2;-1:-1:-1;;;1010:68:2;;;983:96;;1003:5;;983:19;:96::i;:::-;845:241;;;;:::o;3140:706::-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:2;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:2;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:2;;13339:2:9;3744:85:2;;;13321:21:9;13378:2;13358:18;;;13351:30;13417:34;13397:18;;;13390:62;-1:-1:-1;;;13468:18:9;;;13461:40;13518:19;;3744:85:2;13137:406:9;3461:223:3;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:3:o;4548:500::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:3;;8113:2:9;4737:81:3;;;8095:21:9;8152:2;8132:18;;;8125:30;8191:34;8171:18;;;8164:62;-1:-1:-1;;;8242:18:9;;;8235:36;8288:19;;4737:81:3;7911:402:9;4737:81:3;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:3;;11752:2:9;4828:60:3;;;11734:21:9;11791:2;11771:18;;;11764:30;11830:31;11810:18;;;11803:59;11879:18;;4828:60:3;11550:353:9;4828:60:3;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:3;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:52;5007:7;5016:10;5028:12;4989:17;:52::i;:::-;4982:59;4548:500;-1:-1:-1;;;;;;;4548:500:3:o;6950:692::-;7096:12;7124:7;7120:516;;;-1:-1:-1;7154:10:3;7147:17;;7120:516;7265:17;;:21;7261:365;;7459:10;7453:17;7519:15;7506:10;7502:2;7498:19;7491:44;7261:365;7598:12;7591:20;;-1:-1:-1;;;7591:20:3;;;;;;;;:::i;14:748:9:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:238;509:2;506:1;503:9;495:238;;;580:3;567:17;597:31;622:5;597:31;:::i;:::-;641:18;;679:12;;;;711;;;;527:1;520:9;495:238;;;-1:-1:-1;751:5:9;;14:748;-1:-1:-1;;;;;;;14:748:9:o;767:247::-;826:6;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;934:9;921:23;953:31;978:5;953:31;:::i;1019:348::-;1103:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:52;;;1172:1;1169;1162:12;1124:52;1212:9;1199:23;1245:18;1237:6;1234:30;1231:50;;;1277:1;1274;1267:12;1231:50;1300:61;1353:7;1344:6;1333:9;1329:22;1300:61;:::i;1372:1149::-;1490:6;1498;1551:2;1539:9;1530:7;1526:23;1522:32;1519:52;;;1567:1;1564;1557:12;1519:52;1607:9;1594:23;1636:18;1677:2;1669:6;1666:14;1663:34;;;1693:1;1690;1683:12;1663:34;1716:61;1769:7;1760:6;1749:9;1745:22;1716:61;:::i;:::-;1706:71;;1796:2;1786:12;;1851:2;1840:9;1836:18;1823:32;1880:2;1870:8;1867:16;1864:36;;;1896:1;1893;1886:12;1864:36;1919:24;;;-1:-1:-1;1974:4:9;1966:13;;1962:27;-1:-1:-1;1952:55:9;;2003:1;2000;1993:12;1952:55;2039:2;2026:16;2062:60;2078:43;2118:2;2078:43;:::i;2062:60::-;2144:3;2168:2;2163:3;2156:15;2196:2;2191:3;2187:12;2180:19;;2227:2;2223;2219:11;2275:7;2270:2;2264;2261:1;2257:10;2253:2;2249:19;2245:28;2242:41;2239:61;;;2296:1;2293;2286:12;2239:61;2318:1;2309:10;;2328:163;2342:2;2339:1;2336:9;2328:163;;;2399:17;;2387:30;;2360:1;2353:9;;;;;2437:12;;;;2469;;2328:163;;;2332:3;2510:5;2500:15;;;;;;;1372:1149;;;;;:::o;2526:277::-;2593:6;2646:2;2634:9;2625:7;2621:23;2617:32;2614:52;;;2662:1;2659;2652:12;2614:52;2694:9;2688:16;2747:5;2740:13;2733:21;2726:5;2723:32;2713:60;;2769:1;2766;2759:12;3074:180;3133:6;3186:2;3174:9;3165:7;3161:23;3157:32;3154:52;;;3202:1;3199;3192:12;3154:52;-1:-1:-1;3225:23:9;;3074:180;-1:-1:-1;3074:180:9:o;3259:184::-;3329:6;3382:2;3370:9;3361:7;3357:23;3353:32;3350:52;;;3398:1;3395;3388:12;3350:52;-1:-1:-1;3421:16:9;;3259:184;-1:-1:-1;3259:184:9:o;3448:274::-;3577:3;3615:6;3609:13;3631:53;3677:6;3672:3;3665:4;3657:6;3653:17;3631:53;:::i;:::-;3700:16;;;;;3448:274;-1:-1:-1;;3448:274:9:o;5008:383::-;5157:2;5146:9;5139:21;5120:4;5189:6;5183:13;5232:6;5227:2;5216:9;5212:18;5205:34;5248:66;5307:6;5302:2;5291:9;5287:18;5282:2;5274:6;5270:15;5248:66;:::i;:::-;5375:2;5354:15;-1:-1:-1;;5350:29:9;5335:45;;;;5382:2;5331:54;;5008:383;-1:-1:-1;;5008:383:9:o;8736:476::-;8938:2;8920:21;;;8977:2;8957:18;;;8950:30;9016:34;9011:2;8996:18;;8989:62;9087:34;9082:2;9067:18;;9060:62;-1:-1:-1;;;9153:3:9;9138:19;;9131:39;9202:3;9187:19;;8736:476::o;10767:356::-;10969:2;10951:21;;;10988:18;;;10981:30;11047:34;11042:2;11027:18;;11020:62;11114:2;11099:18;;10767:356::o;11128:417::-;11330:2;11312:21;;;11369:2;11349:18;;;11342:30;11408:34;11403:2;11388:18;;11381:62;-1:-1:-1;;;11474:2:9;11459:18;;11452:51;11535:3;11520:19;;11128:417::o;14918:275::-;14989:2;14983:9;15054:2;15035:13;;-1:-1:-1;;15031:27:9;15019:40;;15089:18;15074:34;;15110:22;;;15071:62;15068:88;;;15136:18;;:::i;:::-;15172:2;15165:22;14918:275;;-1:-1:-1;14918:275:9:o;15198:183::-;15258:4;15291:18;15283:6;15280:30;15277:56;;;15313:18;;:::i;:::-;-1:-1:-1;15358:1:9;15354:14;15370:4;15350:25;;15198:183::o;15386:128::-;15426:3;15457:1;15453:6;15450:1;15447:13;15444:39;;;15463:18;;:::i;:::-;-1:-1:-1;15499:9:9;;15386:128::o;15519:217::-;15559:1;15585;15575:132;;15629:10;15624:3;15620:20;15617:1;15610:31;15664:4;15661:1;15654:15;15692:4;15689:1;15682:15;15575:132;-1:-1:-1;15721:9:9;;15519:217::o;15741:168::-;15781:7;15847:1;15843;15839:6;15835:14;15832:1;15829:21;15824:1;15817:9;15810:17;15806:45;15803:71;;;15854:18;;:::i;:::-;-1:-1:-1;15894:9:9;;15741:168::o;15914:125::-;15954:4;15982:1;15979;15976:8;15973:34;;;15987:18;;:::i;:::-;-1:-1:-1;16024:9:9;;15914:125::o;16044:258::-;16116:1;16126:113;16140:6;16137:1;16134:13;16126:113;;;16216:11;;;16210:18;16197:11;;;16190:39;16162:2;16155:10;16126:113;;;16257:6;16254:1;16251:13;16248:48;;;-1:-1:-1;;16292:1:9;16274:16;;16267:27;16044:258::o;16307:135::-;16346:3;-1:-1:-1;;16367:17:9;;16364:43;;;16387:18;;:::i;:::-;-1:-1:-1;16434:1:9;16423:13;;16307:135::o;16447:127::-;16508:10;16503:3;16499:20;16496:1;16489:31;16539:4;16536:1;16529:15;16563:4;16560:1;16553:15;16579:127;16640:10;16635:3;16631:20;16628:1;16621:31;16671:4;16668:1;16661:15;16695:4;16692:1;16685:15;16711:127;16772:10;16767:3;16763:20;16760:1;16753:31;16803:4;16800:1;16793:15;16827:4;16824:1;16817:15;16843:131;-1:-1:-1;;;;;16918:31:9;;16908:42;;16898:70;;16964:1;16961;16954:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1738800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"afterDays()": "2329",
								"bought(address)": "2570",
								"buy(uint256)": "infinite",
								"claim()": "infinite",
								"claimAndEndSale(uint256)": "infinite",
								"claimed(address)": "2547",
								"claimedTokens(address)": "2592",
								"cliffPeriod()": "275",
								"disableWhitelist()": "28692",
								"getCurrentPercentage()": "infinite",
								"getRemainingBalance()": "infinite",
								"initialClaimPercentage()": "252",
								"lastClaimAddress(address)": "2596",
								"limit()": "2330",
								"owner()": "2398",
								"paymentToken()": "2405",
								"percentagePerPeriod()": "253",
								"period()": "251",
								"pricePerToken()": "2396",
								"renounceOwnership()": "28204",
								"requireWhitelist()": "2355",
								"rewardToken()": "2403",
								"saleEnded()": "2373",
								"softcap()": "2372",
								"soldTokens()": "2330",
								"transferOwnership(address)": "infinite",
								"updateAfterDays(uint256)": "26628",
								"updateRewardToken(address)": "infinite",
								"whitelist(address[])": "infinite",
								"whitelistFromSAFT(address[],uint256[])": "infinite",
								"whitelisted(address)": "2614"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1261,
									"end": 1289,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1931,
									"end": 1935,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1935,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3199,
									"end": 3584,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3331,
									"end": 3332,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3322,
									"end": 3328,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3332,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 915,
									"end": 936,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 972,
									"end": 974,
									"name": "PUSH",
									"source": 9,
									"value": "2E"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 952,
									"end": 970,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 945,
									"end": 975,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1045,
									"name": "PUSH",
									"source": 9,
									"value": "41424F41543A3A6572726F723A2050726963652068617320746F206265206869"
								},
								{
									"begin": 991,
									"end": 1009,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 991,
									"end": 1009,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1009,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 984,
									"end": 1046,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "67686572207468616E207A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "90"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1062,
									"end": 1080,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1062,
									"end": 1080,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1062,
									"end": 1080,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 1099,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1116,
									"end": 1135,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1116,
									"end": 1135,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3314,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3404,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3393,
									"end": 3419,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3441,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3457,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3472,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3467,
									"end": 3481,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3491,
									"end": 3498,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3555,
									"end": 3568,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3555,
									"end": 3577,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 199,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 199,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 101,
									"end": 114,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 101,
									"end": 114,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 143,
									"end": 174,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 143,
									"end": 174,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 133,
									"end": 175,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 133,
									"end": 175,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 123,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 189,
									"end": 190,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 187,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 179,
									"end": 191,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 123,
									"end": 193,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14,
									"end": 199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 199,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 338,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 352,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 354,
									"end": 360,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 368,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 370,
									"end": 376,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 426,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 411,
									"end": 420,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 402,
									"end": 409,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 398,
									"end": 421,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 394,
									"end": 427,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 391,
									"end": 444,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 391,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 391,
									"end": 444,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 438,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 430,
									"end": 442,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 391,
									"end": 444,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 391,
									"end": 444,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 463,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 501,
									"end": 510,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 463,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 463,
									"end": 511,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 463,
									"end": 511,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 511,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 453,
									"end": 511,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 453,
									"end": 511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 530,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 583,
									"end": 585,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 572,
									"end": 581,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 568,
									"end": 586,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 530,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 530,
									"end": 587,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 530,
									"end": 587,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 530,
									"end": 587,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 627,
									"end": 629,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 612,
									"end": 630,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 612,
									"end": 630,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 606,
									"end": 631,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 671,
									"end": 673,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 674,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 656,
									"end": 674,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 650,
									"end": 675,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 715,
									"end": 718,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 700,
									"end": 719,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 700,
									"end": 719,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 700,
									"end": 719,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 694,
									"end": 720,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 204,
									"end": 726,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 204,
									"end": 726,
									"name": "SWAP10",
									"source": 9
								},
								{
									"begin": 520,
									"end": 587,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 520,
									"end": 587,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 606,
									"end": 631,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 694,
									"end": 720,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 726,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 731,
									"end": 1141,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 731,
									"end": 1141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 434,
									"end": 12014,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220740bdcaf50cb2d0f996efe8b066170e7a5a7446e5eb776c4c91712070986d38f64736f6c63430008070033",
									".code": [
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "A4D66DAF"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "E754E7C4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F3739E05"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F3739E05"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F89BE593"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F8CF31CB"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "E754E7C4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "EF78D4FD"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "EFE95F51"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "C884EF83"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "C884EF83"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "D6B0F484"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "D936547E"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "D96A094A"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "A4D66DAF"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "A5EBF835"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "A960C65F"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "BD8AA780"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "5ED9EBFC"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "856734C4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "856734C4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "9B8906AE"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "9C92431B"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "5ED9EBFC"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "667022FD"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "7B1B1DE6"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "2FBA2C85"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "2FBA2C85"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "3013CE29"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "5372A58E"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "C0E0862"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "151BAD0A"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "2F661946"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 434,
											"end": 12014,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14882,
											"end": 14907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14882,
											"end": 14907,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14882,
											"end": 14907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14870,
											"end": 14872,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14855,
											"end": 14873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1690,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "5A"
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 929,
											"end": 955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 955,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 929,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3930,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1219,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2104,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 967,
											"end": 995,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 967,
											"end": 995,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4773,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4774,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4734,
											"end": 4775,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4594,
											"end": 4781,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1261,
											"end": 1289,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1564,
											"end": 1567,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2303,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2194,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2057,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2402,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 884,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 884,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 884,
											"end": 909,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 884,
											"end": 909,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13750,
											"end": 13752,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13732,
											"end": 13753,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 13769,
											"end": 13787,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13769,
											"end": 13787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13762,
											"end": 13792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13862,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A7570646174654166746572446179733A2053616C65206E6F74"
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13801,
											"end": 13863,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13872,
											"end": 13908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 13548,
											"end": 13950,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6141,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6225,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6216,
											"end": 6238,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6245,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7960,
											"end": 7971,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7960,
											"end": 7971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7949,
											"end": 8147,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8035,
											"end": 8045,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8035,
											"end": 8045,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8009,
											"end": 8046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8030,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8009,
											"end": 8046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8009,
											"end": 8046,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8009,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 8153,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8147,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7949,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8125,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8125,
											"end": 8135,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8095,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8084,
											"end": 8095,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8118,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8084,
											"end": 8136,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8125,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8084,
											"end": 8095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8084,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8084,
											"end": 8136,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12110,
											"end": 12112,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12092,
											"end": 12113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12222,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A636C61696D3A2053616C65206973206E6F74206F7665722079"
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12161,
											"end": 12223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12232,
											"end": 12265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 11908,
											"end": 12307,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10234,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10368,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10348,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10333,
											"end": 10371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10333,
											"end": 10371,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10333,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10314,
											"end": 10329,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10314,
											"end": 10371,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10314,
											"end": 10371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7256,
											"end": 7277,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A636C61696D3A20436C61696D206973206E6F7420617661696C"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B13632903CB2BA17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7072,
											"end": 7477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10306,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10455,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 10455,
											"end": 10477,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10455,
											"end": 10477,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 10455,
											"end": 10477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10495,
											"end": 10512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10495,
											"end": 10516,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9937,
											"end": 9939,
											"name": "PUSH",
											"source": 9,
											"value": "5D"
										},
										{
											"begin": 9917,
											"end": 9935,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9917,
											"end": 9935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 10010,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A636C61696D3A205468652070657263656E74616765206F6620"
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10047,
											"end": 10081,
											"name": "PUSH",
											"source": 9,
											"value": "746F6B656E20796F752063616E20636C61696D2069732063757272656E746C79"
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10150,
											"name": "PUSH",
											"source": 9,
											"value": "207A65726F2E20506C656173652074727920616761696E206C61746572000000"
										},
										{
											"begin": 10098,
											"end": 10117,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10098,
											"end": 10117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10187,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 10168,
											"end": 10187,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9696,
											"end": 10193,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 10487,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10654,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10679,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10624,
											"end": 10837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 10722,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10711,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10723,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10746,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10767,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10760,
											"end": 10779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10779,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10783,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10810,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 10797,
											"end": 10822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10822,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10826,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10837,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10624,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 10872,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10861,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10873,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7725,
											"name": "PUSH",
											"source": 9,
											"value": "3C"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7696,
											"end": 7726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7762,
											"end": 7796,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A636C61696D3A20416C726561647920636C61696D656420796F"
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7735,
											"end": 7797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7833,
											"end": 7863,
											"name": "PUSH",
											"source": 9,
											"value": "75722063757272656E746C7920656C696769626C6520746F6B656E7300000000"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7806,
											"end": 7864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7482,
											"end": 7906,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10846,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10971,
											"end": 10978,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10971,
											"end": 10978,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10971,
											"end": 10992,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11053,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11042,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11107,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11226,
											"end": 11239,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11226,
											"end": 11239,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11138,
											"end": 11240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11216,
											"end": 11220,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11138,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 11138,
											"end": 11221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11090,
											"end": 11107,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11035,
											"end": 11054,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11161,
											"end": 11200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11161,
											"end": 11200,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11161,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11145,
											"end": 11155,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11144,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11138,
											"end": 11201,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11138,
											"end": 11201,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11138,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11138,
											"end": 11211,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11138,
											"end": 11211,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11138,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11138,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11138,
											"end": 11221,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11138,
											"end": 11240,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11138,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11296,
											"end": 11306,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11295,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11282,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11278,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11279,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11254,
											"end": 11319,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11426,
											"end": 11437,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11426,
											"end": 11437,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11390,
											"end": 11459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11426,
											"end": 11437,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11440,
											"end": 11450,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11390,
											"end": 11459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11390,
											"end": 11459,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11390,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 11333,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 11529,
											"end": 11539,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11541,
											"end": 11547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11498,
											"end": 11548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11498,
											"end": 11548,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 11498,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11601,
											"end": 11607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11601,
											"end": 11607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 11599,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11589,
											"end": 11599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "PUSH",
											"source": 6,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11608,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 11619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 11619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10224,
											"end": 12012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11647,
											"end": 11657,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11646,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11661,
											"end": 11665,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 11639,
											"end": 11665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11639,
											"end": 11665,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11693,
											"end": 11705,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11693,
											"end": 11705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11693,
											"end": 11705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11685,
											"end": 11720,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11791,
											"end": 11801,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11809,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11740,
											"end": 11822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11791,
											"end": 11801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 11740,
											"end": 11822,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11740,
											"end": 11822,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 11740,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11682,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11892,
											"end": 11902,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11904,
											"end": 11922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11861,
											"end": 11923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11892,
											"end": 11902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11861,
											"end": 11923,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11861,
											"end": 11923,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11861,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 11993,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11982,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11995,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 11993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11995,
											"name": "PUSH",
											"source": 6,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 11956,
											"end": 11995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11995,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 10968,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10224,
											"end": 12012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 12012,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6764,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6744,
											"end": 6753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6744,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6736,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6854,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6935,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6935,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6960,
											"end": 6971,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6981,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 6987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6972,
											"end": 6988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7033,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7062,
											"end": 7075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 7052,
											"end": 7056,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7046,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7047,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7033,
											"end": 7076,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7033,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 7124,
											"end": 7136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7098,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7098,
											"end": 7119,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7137,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 7098,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7141,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7090,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7282,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7262,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7264,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7240,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7219,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7220,
											"end": 7229,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7235,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7237,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7284,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7316,
											"end": 7331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7336,
											"end": 7348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7316,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7316,
											"end": 7349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7316,
											"end": 7349,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7316,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7349,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7379,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 7363,
											"end": 7379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7390,
											"end": 7395,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7390,
											"end": 7395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6891,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7454,
											"end": 7464,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7454,
											"end": 7464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7454,
											"end": 7485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7484,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7454,
											"end": 7485,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7454,
											"end": 7485,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 7454,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7441,
											"end": 7451,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7441,
											"end": 7485,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "PUSH",
											"source": 6,
											"value": "6074084F4DBD9879D266F074BE61EB039A0DB2AA46E98E700223AD5C2BEF5BD5"
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7500,
											"end": 7542,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 7549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6628,
											"end": 7549,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "5A"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8324,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8314,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8314,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8388,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8379,
											"end": 8388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8392,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8414,
											"end": 8425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 8411,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 8425,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8379,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1567,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8379,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1564,
											"end": 1567,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8436,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8436,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 8495,
											"end": 8501,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8486,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 8436,
											"end": 8451,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8456,
											"end": 8467,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8436,
											"end": 8468,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8540,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8436,
											"end": 8540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8436,
											"end": 8581,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8581,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8436,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8645,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 8632,
											"end": 8642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8649,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8632,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8669,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8625,
											"end": 8669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8676,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6361,
											"end": 6364,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6357,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6364,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6333,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 6465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6520,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6541,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6520,
											"end": 6549,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6520,
											"end": 6556,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6451,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "PUSH",
											"source": 6,
											"value": "F899E24720678B9547483D3C332E9A7E1EABB9C013BD2E0FF30D83806CF421F3"
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6622,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5640,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A64697361626C6557686974656C6973743A2057686974656C6973"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D081A5CC8185B1C9958591E48191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5788,
											"end": 5807,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5788,
											"end": 5807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5396,
											"end": 5813,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5145,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5237,
											"end": 5261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5261,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5261,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5261,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5268,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14157,
											"end": 14159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14139,
											"end": 14160,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14196,
											"end": 14198,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14176,
											"end": 14194,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14176,
											"end": 14194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14176,
											"end": 14194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14169,
											"end": 14199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14268,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A6275793A2053616C6520616C726561647920656E6465642100"
										},
										{
											"begin": 14215,
											"end": 14233,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14215,
											"end": 14233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14208,
											"end": 14269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14286,
											"end": 14304,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14286,
											"end": 14304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 13955,
											"end": 14310,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9066,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9154,
											"end": 9164,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9142,
											"end": 9186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9169,
											"end": 9186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9186,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 9142,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8532,
											"end": 8562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A6275793A20596F75277265206E6F742077686974656C697374"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656420666F7220746869732073616C6521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8725,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8706,
											"end": 8725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8318,
											"end": 8731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9134,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9268,
											"end": 9303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9332,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9321,
											"end": 9355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9349,
											"end": 9355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9345,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9355,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9355,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9321,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14517,
											"end": 14519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14556,
											"end": 14558,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14536,
											"end": 14554,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14536,
											"end": 14554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14536,
											"end": 14554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14529,
											"end": 14559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14595,
											"end": 14629,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A6275793A2053656E742076616C756520646F65736E2774206D"
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14575,
											"end": 14593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 14630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19595D081D1A194819DA5D995B88185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14646,
											"end": 14664,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14646,
											"end": 14664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 14664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14639,
											"end": 14689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14725,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14706,
											"end": 14725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 14315,
											"end": 14731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 9313,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9469,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9464,
											"end": 9469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9447,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9453,
											"end": 9459,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6430,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "PUSH",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6539,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420"
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6576,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "746865206D6178696D756D20616C6C6F776564206C696D697400000000000000"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6640,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6621,
											"end": 6640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6225,
											"end": 6646,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 9422,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9598,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9585,
											"end": 9598,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9541,
											"end": 9561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9564,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 9564,
											"end": 9570,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9579,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9564,
											"end": 9574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9564,
											"end": 9580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9564,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9541,
											"end": 9599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9541,
											"end": 9599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9643,
											"end": 9655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9617,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 9617,
											"end": 9638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9656,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 9617,
											"end": 9656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9660,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9609,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9732,
											"end": 9742,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9728,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9728,
											"end": 9842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9758,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9758,
											"end": 9831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 9806,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9817,
											"end": 9821,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9758,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9758,
											"end": 9831,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9758,
											"end": 9831,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9758,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9879,
											"end": 9889,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 9901,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9872,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9868,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9902,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 9935,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9925,
											"end": 9935,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9940,
											"end": 9952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 9939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 9925,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9912,
											"end": 9953,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 9990,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 9991,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10015,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "PUSH",
											"source": 6,
											"value": "C55650CCDA1011E1CDC769B1FBF546EBB8C97800B6072B49E06CD560305B1D67"
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9056,
											"end": 10063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9056,
											"end": 10063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 10063,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12928,
											"end": 12930,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12910,
											"end": 12931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13006,
											"end": 13040,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A636C61696D416E64456E6453616C653A2053616C6520616C72"
										},
										{
											"begin": 12986,
											"end": 13004,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12986,
											"end": 13004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 13004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12979,
											"end": 13041,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1958591E48195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 12726,
											"end": 13132,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3988,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4094,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4114,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4107,
											"end": 4114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 4128,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4278,
											"end": 4300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4300,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4314,
											"end": 4592,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4470,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4372,
											"end": 4473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4435,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4372,
											"end": 4473,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4372,
											"end": 4473,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4372,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4592,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4314,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4543,
											"end": 4553,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4576,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4512,
											"end": 4577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4104,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4737,
											"end": 4748,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4737,
											"end": 4748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 4726,
											"end": 5002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4879,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4783,
											"end": 4882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4843,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4866,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 4845,
											"end": 4866,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 3727,
											"end": 3930,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 5002,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 4726,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 4952,
											"end": 4962,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4921,
											"end": 4987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4921,
											"end": 4987,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 4921,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 5036,
											"end": 5072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5070,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 5050,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5036,
											"end": 5072,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 5036,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "94BB74A9473AE4063EC1E73DC3E35FD4B5ABE9CC1E43AD0DB84E5358559CCD5A"
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5073,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 5080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6002,
											"end": 6023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6039,
											"end": 6057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6142,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6214,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6195,
											"end": 6214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5818,
											"end": 6220,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9458,
											"end": 9460,
											"name": "PUSH",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9438,
											"end": 9456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9531,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A757064617465526577617264546F6B656E3A204E6577207265"
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9602,
											"name": "PUSH",
											"source": 9,
											"value": "776172642073686F756C6420626520646966666572656E742066726F6D206375"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9541,
											"end": 9603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "393932B73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9619,
											"end": 9638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9217,
											"end": 9691,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 5624,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 5799,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 5780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5755,
											"end": 5780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 5755,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10400,
											"end": 10402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10382,
											"end": 10403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10442,
											"name": "PUSH",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 10419,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10419,
											"end": 10437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10412,
											"end": 10443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10513,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A757064617465526577617264546F6B656E3A2054686520636F"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10459,
											"end": 10477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10452,
											"end": 10514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10584,
											"name": "PUSH",
											"source": 9,
											"value": "6E74726163742073686F756C6420636F6E7461696E2061746C65617374207468"
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10585,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10622,
											"end": 10656,
											"name": "PUSH",
											"source": 9,
											"value": "652073616D6520616D6F756E74206F6620746F6B656E732061732066726F6D20"
										},
										{
											"begin": 10601,
											"end": 10620,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10601,
											"end": 10620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10594,
											"end": 10657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10694,
											"end": 10719,
											"name": "PUSH",
											"source": 9,
											"value": "7468652063757272656E7420726577617264546F6B656E000000000000000000"
										},
										{
											"begin": 10673,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 10673,
											"end": 10692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10673,
											"end": 10692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10756,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 10737,
											"end": 10756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 10198,
											"end": 10762,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 5747,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5980,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5998,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "3FCFC24A3384CA156092D9242CB0F84ABAF442146D91B8C93BEA526561B83F83"
										},
										{
											"begin": 6013,
											"end": 6052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6052,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 6059,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3128,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4556,
											"end": 4574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4583,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4583,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 371,
											"end": 381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 371,
											"end": 381,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 459,
											"end": 466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 459,
											"end": 516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 459,
											"end": 516,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 459,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 459,
											"end": 516,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 482,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 471,
											"end": 482,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 471,
											"end": 487,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 471,
											"end": 487,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 471,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 471,
											"end": 515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 471,
											"end": 515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 502,
											"end": 506,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 438,
											"end": 587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12496,
											"end": 12517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12553,
											"end": 12555,
											"name": "PUSH",
											"source": 9,
											"value": "2D"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12526,
											"end": 12556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12626,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12565,
											"end": 12627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12696,
											"end": 12715,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12696,
											"end": 12715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12312,
											"end": 12721,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 587,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6931,
											"end": 6965,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 7025,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6651,
											"end": 7067,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4208,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4208,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4209,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4260,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4260,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4304,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 983,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 1086,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3140,
											"end": 3846,
											"name": "tag",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 3140,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3598,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 3585,
											"end": 3612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 3585,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3689,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 3664,
											"end": 3840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "tag",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 3752,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13339,
											"end": 13341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13321,
											"end": 13342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13378,
											"end": 13380,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13358,
											"end": 13376,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13358,
											"end": 13376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 13376,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13351,
											"end": 13381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13417,
											"end": 13451,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13390,
											"end": 13452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13518,
											"end": 13537,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13518,
											"end": 13537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 13137,
											"end": 13543,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "tag",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3594,
											"end": 3606,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 3647,
											"end": 3653,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 3625,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3677,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3684,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "tag",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4725,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4770,
											"end": 4775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4766,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4775,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4775,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8095,
											"end": 8116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8125,
											"end": 8155,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8191,
											"end": 8225,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8307,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8288,
											"end": 8307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7911,
											"end": 8313,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 4737,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1054,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11752,
											"end": 11754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11755,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11791,
											"end": 11793,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11830,
											"end": 11861,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 11810,
											"end": 11828,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11810,
											"end": 11828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11810,
											"end": 11828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 11550,
											"end": 11903,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 4828,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4941,
											"end": 4952,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5016,
											"end": 5026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5040,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 4989,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5041,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4548,
											"end": 5048,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6950,
											"end": 7642,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 6950,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7124,
											"end": 7131,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7147,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 7147,
											"end": 7164,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "tag",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 7120,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7453,
											"end": 7470,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7506,
											"end": 7516,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7502,
											"end": 7504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7491,
											"end": 7535,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 7261,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 762,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 14,
											"end": 762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 68,
											"end": 73,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 114,
											"end": 118,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 98,
											"end": 125,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 88,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 129,
											"end": 141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 88,
											"end": 143,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 175,
											"end": 181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 162,
											"end": 182,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 281,
											"end": 283,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 319,
											"end": 334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 359,
											"end": 361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 350,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 343,
											"end": 362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 394,
											"end": 396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 382,
											"end": 397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 446,
											"end": 449,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 435,
											"end": 437,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 438,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 416,
											"end": 439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 409,
											"end": 450,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 453,
											"end": 465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 495,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 509,
											"end": 511,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 503,
											"end": 512,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 495,
											"end": 733,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 495,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 495,
											"end": 733,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 580,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 584,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 597,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 597,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 597,
											"end": 628,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 628,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 597,
											"end": 628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 659,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 641,
											"end": 659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 679,
											"end": 691,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 679,
											"end": 691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 711,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 723,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 711,
											"end": 723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 527,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 495,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 495,
											"end": 733,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 495,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 495,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 751,
											"end": 756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 756,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 14,
											"end": 762,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 762,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 767,
											"end": 1014,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 767,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 858,
											"end": 865,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 854,
											"end": 877,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 847,
											"end": 899,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 847,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 847,
											"end": 899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 895,
											"end": 896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 885,
											"end": 897,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 847,
											"end": 899,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 847,
											"end": 899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 921,
											"end": 944,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 953,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 953,
											"end": 984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1367,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1019,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1103,
											"end": 1109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1131,
											"end": 1154,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1176,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 1124,
											"end": 1176,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1176,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 1124,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1243,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1264,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 1231,
											"end": 1281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1281,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 1231,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1344,
											"end": 1350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1329,
											"end": 1351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 1300,
											"end": 1361,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1537,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1549,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1554,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1571,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 1519,
											"end": 1571,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1569,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1571,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 1519,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1617,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 1663,
											"end": 1697,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1697,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 1663,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 1716,
											"end": 1777,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1716,
											"end": 1777,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1716,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1777,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1855,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1900,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1864,
											"end": 1900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1864,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 1978,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1989,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1952,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1952,
											"end": 2007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 2007,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1952,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2042,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 2078,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 2078,
											"end": 2121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2122,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 2062,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2282,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2257,
											"end": 2267,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2300,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 2239,
											"end": 2300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2300,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 2239,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2319,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2361,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2481,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 2328,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 2521,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2526,
											"end": 2803,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 2526,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2666,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 2614,
											"end": 2666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2664,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2666,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 2614,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2688,
											"end": 2704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3254,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3074,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3174,
											"end": 3183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3189,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3206,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 3154,
											"end": 3206,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 3154,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3248,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3074,
											"end": 3254,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3259,
											"end": 3443,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3259,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3380,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3385,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3402,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 3350,
											"end": 3402,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3402,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 3350,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3437,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3443,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3448,
											"end": 3722,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 3448,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3622,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3663,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 3631,
											"end": 3684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3684,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 3631,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3716,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3722,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3722,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5008,
											"end": 5391,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 5008,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5183,
											"end": 5196,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5291,
											"end": 5300,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5284,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 5248,
											"end": 5314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5248,
											"end": 5314,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 5248,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5350,
											"end": 5379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5384,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5331,
											"end": 5385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5331,
											"end": 5385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5391,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8736,
											"end": 9212,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 8736,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 8940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8920,
											"end": 8941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8920,
											"end": 8941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8920,
											"end": 8941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8980,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9050,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A77686974656C6973743A20596F752063616E27742061646420"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8989,
											"end": 9051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9087,
											"end": 9121,
											"name": "PUSH",
											"source": 9,
											"value": "6D6F7265207468616E2031303020616464726573736573206174207468652073"
										},
										{
											"begin": 9082,
											"end": 9084,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9067,
											"end": 9085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9060,
											"end": 9122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616D652074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9138,
											"end": 9157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9202,
											"end": 9205,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 9212,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10767,
											"end": 11123,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 10767,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10951,
											"end": 10972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11042,
											"end": 11044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10767,
											"end": 11123,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11128,
											"end": 11545,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 11128,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11330,
											"end": 11332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11312,
											"end": 11333,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11312,
											"end": 11333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11312,
											"end": 11333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11369,
											"end": 11371,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11442,
											"name": "PUSH",
											"source": 9,
											"value": "41424F41543A3A6275793A20416D6F756E7420776F756C642065786365656420"
										},
										{
											"begin": 11403,
											"end": 11405,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11388,
											"end": 11406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468652072656D61696E696E672062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11474,
											"end": 11476,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11459,
											"end": 11477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11459,
											"end": 11477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11452,
											"end": 11503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11535,
											"end": 11538,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11520,
											"end": 11539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11520,
											"end": 11539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11545,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14918,
											"end": 15193,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 14918,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 14991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14983,
											"end": 14992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15054,
											"end": 15056,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15035,
											"end": 15048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15031,
											"end": 15058,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15019,
											"end": 15059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15107,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15074,
											"end": 15108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15108,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15110,
											"end": 15132,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15071,
											"end": 15133,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15068,
											"end": 15156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15068,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 15068,
											"end": 15156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15172,
											"end": 15174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15165,
											"end": 15187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14918,
											"end": 15193,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14918,
											"end": 15193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14918,
											"end": 15193,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15198,
											"end": 15381,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 15198,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15291,
											"end": 15309,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15280,
											"end": 15310,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15277,
											"end": 15333,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15277,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 15277,
											"end": 15333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 15313,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15358,
											"end": 15359,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 15354,
											"end": 15368,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15370,
											"end": 15374,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15350,
											"end": 15375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15350,
											"end": 15375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15198,
											"end": 15381,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15386,
											"end": 15514,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 15386,
											"end": 15514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15426,
											"end": 15429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15457,
											"end": 15458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15453,
											"end": 15459,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15447,
											"end": 15460,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15444,
											"end": 15483,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15444,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 15444,
											"end": 15483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15499,
											"end": 15508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15499,
											"end": 15508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15386,
											"end": 15514,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15519,
											"end": 15736,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 15519,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15559,
											"end": 15560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15575,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 15575,
											"end": 15707,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15629,
											"end": 15639,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15620,
											"end": 15640,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 15641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15664,
											"end": 15668,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 15661,
											"end": 15662,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15654,
											"end": 15669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15692,
											"end": 15696,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15689,
											"end": 15690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15682,
											"end": 15697,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15575,
											"end": 15707,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 15575,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15721,
											"end": 15730,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15721,
											"end": 15730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15519,
											"end": 15736,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15741,
											"end": 15909,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 15741,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15847,
											"end": 15848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15839,
											"end": 15845,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15835,
											"end": 15849,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15832,
											"end": 15833,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15829,
											"end": 15850,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15824,
											"end": 15825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15817,
											"end": 15826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15810,
											"end": 15827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15806,
											"end": 15851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15803,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 15803,
											"end": 15874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15894,
											"end": 15903,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15894,
											"end": 15903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15741,
											"end": 15909,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15914,
											"end": 16039,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 15914,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15954,
											"end": 15958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15979,
											"end": 15980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 15984,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 16007,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 15973,
											"end": 16007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 15987,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16024,
											"end": 16033,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16024,
											"end": 16033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15914,
											"end": 16039,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16044,
											"end": 16302,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 16044,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16116,
											"end": 16117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16140,
											"end": 16146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16137,
											"end": 16138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16147,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16210,
											"end": 16228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16208,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16197,
											"end": 16208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16190,
											"end": 16229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16162,
											"end": 16164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 16126,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16257,
											"end": 16263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16251,
											"end": 16264,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16248,
											"end": 16296,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16248,
											"end": 16296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 16248,
											"end": 16296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16292,
											"end": 16293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16274,
											"end": 16290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16267,
											"end": 16294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16044,
											"end": 16302,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16307,
											"end": 16442,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 16307,
											"end": 16442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16346,
											"end": 16349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16367,
											"end": 16384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16367,
											"end": 16384,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16364,
											"end": 16407,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16364,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 16364,
											"end": 16407,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 16387,
											"end": 16405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16434,
											"end": 16435,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16423,
											"end": 16436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16423,
											"end": 16436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16307,
											"end": 16442,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16447,
											"end": 16574,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 16447,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16508,
											"end": 16518,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 16503,
											"end": 16506,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16499,
											"end": 16519,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 16496,
											"end": 16497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16520,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16539,
											"end": 16543,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 16536,
											"end": 16537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16529,
											"end": 16544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16563,
											"end": 16567,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16560,
											"end": 16561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16568,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16579,
											"end": 16706,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 16579,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16640,
											"end": 16650,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 16635,
											"end": 16638,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16631,
											"end": 16651,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 16628,
											"end": 16629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16652,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16675,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16661,
											"end": 16676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16695,
											"end": 16699,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16692,
											"end": 16693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16685,
											"end": 16700,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16711,
											"end": 16838,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 16711,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16772,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 16767,
											"end": 16770,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16763,
											"end": 16783,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 16760,
											"end": 16761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16753,
											"end": 16784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16803,
											"end": 16807,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16793,
											"end": 16808,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16827,
											"end": 16831,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16824,
											"end": 16825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16817,
											"end": 16832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16843,
											"end": 16974,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 16843,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16918,
											"end": 16949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16918,
											"end": 16949,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 16950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 16950,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 16898,
											"end": 16968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 16965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16961,
											"end": 16962,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16954,
											"end": 16966,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"afterDays()": "e754e7c4",
							"bought(address)": "667022fd",
							"buy(uint256)": "d96a094a",
							"claim()": "4e71d92d",
							"claimAndEndSale(uint256)": "efe95f51",
							"claimed(address)": "c884ef83",
							"claimedTokens(address)": "a960c65f",
							"cliffPeriod()": "2f661946",
							"disableWhitelist()": "d6b0f484",
							"getCurrentPercentage()": "9c92431b",
							"getRemainingBalance()": "2fba2c85",
							"initialClaimPercentage()": "a5ebf835",
							"lastClaimAddress(address)": "f3739e05",
							"limit()": "a4d66daf",
							"owner()": "8da5cb5b",
							"paymentToken()": "3013ce29",
							"percentagePerPeriod()": "151bad0a",
							"period()": "ef78d4fd",
							"pricePerToken()": "7b1b1de6",
							"renounceOwnership()": "715018a6",
							"requireWhitelist()": "856734c4",
							"rewardToken()": "f7c618c1",
							"saleEnded()": "9b8906ae",
							"softcap()": "f89be593",
							"soldTokens()": "5ed9ebfc",
							"transferOwnership(address)": "f2fde38b",
							"updateAfterDays(uint256)": "0c0e0862",
							"updateRewardToken(address)": "f8cf31cb",
							"whitelist(address[])": "bd8aa780",
							"whitelistFromSAFT(address[],uint256[])": "5372a58e",
							"whitelisted(address)": "d936547e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_softcap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddedToWhitelistFromSaft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"ChangeRewardToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedInVestingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimDate\",\"type\":\"uint256\"}],\"name\":\"SaleEnded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"afterDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_afterDays\",\"type\":\"uint256\"}],\"name\":\"claimAndEndSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialClaimPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentagePerPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requireWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softcap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_afterDays\",\"type\":\"uint256\"}],\"name\":\"updateAfterDays\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_newRewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"whitelistFromSAFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PreSale.sol\":\"PreSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/PreSale.sol\":{\"keccak256\":\"0xe8bf7b89cbe30c9e1bd74624044dc5553d6d369df1ae96eea679ae12e40f8919\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://43105148373e0c2282c13bc4fe02084ea0b7953407fae1e4230af8ef2f715be5\",\"dweb:/ipfs/QmfJgkx1YkNaHFo1jgrpzNWeSc7mbi3QTWjRxVcjbQX5QX\"]},\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1058,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 1061,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "paymentToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 1063,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "pricePerToken",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1065,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "limit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1067,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "softcap",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1069,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "soldTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "saleEnded",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "afterDays",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1089,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "requireWhitelist",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1093,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "whitelisted",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1097,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "bought",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1101,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "claimed",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1105,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "claimedTokens",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1109,
								"contract": "contracts/PreSale.sol:PreSale",
								"label": "lastClaimAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)181": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"IMasterEntertainer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "depositForUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_vesting",
									"type": "uint256"
								}
							],
							"name": "getBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForUser(uint256,uint256,address)": "a3f30d27",
							"getBalanceOf(address,uint256)": "94d45b59",
							"updatePrice()": "673a7e28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"depositForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vesting\",\"type\":\"uint256\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterEntertainer.sol\":\"IMasterEntertainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:1095:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							722
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 723,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								722
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 181,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 181,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 181,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 181,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 181,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:1"
									},
									"scope": 181,
									"src": "2118:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 171,
									"name": "Transfer",
									"nameLocation": "2420:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2451:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:1"
									},
									"src": "2414:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 180,
									"name": "Approval",
									"nameLocation": "2651:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2660:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2683:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:1"
									},
									"src": "2645:78:1"
								}
							],
							"scope": 182,
							"src": "129:2596:1",
							"usedErrors": []
						}
					],
					"src": "33:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"IERC20": [
							181
						],
						"SafeERC20": [
							405
						]
					},
					"id": 406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 406,
							"sourceUnit": 182,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 406,
							"sourceUnit": 702,
							"src": "82:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "120:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405
							],
							"name": "SafeERC20",
							"nameLocation": "586:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "608:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "602:26:2",
									"typeName": {
										"id": 188,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "736:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "766:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 203,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "796:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 130,
																		"src": "796:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "796:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 206,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "821:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 207,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "825:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "773:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "773:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "773:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "746:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "746:86:2"
											}
										]
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "643:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "672:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "665:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "665:6:2"
													},
													"referencedDeclaration": 181,
													"src": "665:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "695:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "687:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "715:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "707:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:71:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:2"
									},
									"scope": 405,
									"src": "634:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "973:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1003:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 228,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1033:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 162,
																		"src": "1033:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1033:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 231,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1062:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 232,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "1068:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "1072:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1010:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1010:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1010:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 224,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "983:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "983:96:2"
											}
										]
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "854:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "887:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "880:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "880:6:2"
													},
													"referencedDeclaration": 181,
													"src": "880:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "902:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "932:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "924:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "952:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "944:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:93:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:0:2"
									},
									"scope": 405,
									"src": "845:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1452:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 246,
																			"src": "1701:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1710:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1701:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1700:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 258,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1741:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$405",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$405",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1733:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 256,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1733:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1733:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 260,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "1748:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 254,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "1717:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 140,
																				"src": "1717:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1717:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1760:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1717:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1716:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1700:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1776:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1679:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1872:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "1902:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 150,
																		"src": "1902:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1902:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 276,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "1935:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1879:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1879:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1879:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1852:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1852:90:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1092:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1355:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1383:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1376:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 240,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1376:6:2"
													},
													"referencedDeclaration": 181,
													"src": "1376:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1406:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1431:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1423:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:76:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:2"
									},
									"scope": 405,
									"src": "1346:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2071:194:2",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2089:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2081:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 298,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2128:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$405",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$405",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2120:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2120:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2120:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 300,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2135:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 294,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "2104:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 140,
															"src": "2104:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2104:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 302,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2146:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2104:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2081:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 309,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "2211:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 150,
																		"src": "2211:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2211:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 312,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2235:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 313,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2244:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 307,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2188:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2188:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2188:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 305,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2161:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2161:97:2"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1964:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1995:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 283,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1995:6:2"
													},
													"referencedDeclaration": 181,
													"src": "1995:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2025:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2017:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2050:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:76:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:0:2"
									},
									"scope": 405,
									"src": "1955:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2387:370:2",
										"statements": [
											{
												"id": 364,
												"nodeType": "UncheckedBlock",
												"src": "2397:354:2",
												"statements": [
													{
														"assignments": [
															329
														],
														"declarations": [
															{
																"constant": false,
																"id": 329,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2429:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 364,
																"src": "2421:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 328,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2421:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 338,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 334,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2468:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$405",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$405",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2460:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 332,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2460:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2460:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 336,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "2475:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 330,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "2444:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 140,
																"src": "2444:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2444:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2421:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 340,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "2505:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 341,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "2521:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2505:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2528:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 339,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2497:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2497:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "2497:75:2"
													},
													{
														"assignments": [
															347
														],
														"declarations": [
															{
																"constant": false,
																"id": 347,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2594:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 364,
																"src": "2586:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 346,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2586:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 351,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2609:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "2624:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2609:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2586:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 353,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "2663:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 356,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 321,
																					"src": "2693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 150,
																				"src": "2693:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2693:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 359,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "2717:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 360,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2726:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 354,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2670:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2670:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2670:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 352,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2643:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2643:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 363,
														"nodeType": "ExpressionStatement",
														"src": "2643:97:2"
													}
												]
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2280:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2318:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2311:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 319,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "2311:6:2"
													},
													"referencedDeclaration": 181,
													"src": "2311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2366:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2358:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:76:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:0:2"
									},
									"scope": 405,
									"src": "2271:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3210:636:2",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3572:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "3559:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3559:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3613:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 379,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "3593:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3585:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3585:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3585:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "3585:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3559:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 386,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3668:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3668:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3688:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3668:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "3664:176:2",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "3691:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 393,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "3763:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 395,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3776:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 394,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3776:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 396,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3775:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 391,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3752:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3752:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3752:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 390,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3744:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3744:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "3744:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2763:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3149:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3176:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "3169:6:2"
													},
													"referencedDeclaration": 181,
													"src": "3169:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3196:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3183:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3183:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:33:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3210:0:2"
									},
									"scope": 405,
									"src": "3140:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 406,
							"src": "578:3270:2",
							"usedErrors": []
						}
					],
					"src": "33:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 408,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nameLocation": "134:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "784:311:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 424,
														"src": "981:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:3",
														"valueSize": 1
													},
													{
														"declaration": 417,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:3",
														"valueSize": 1
													}
												],
												"id": 419,
												"nodeType": "InlineAssembly",
												"src": "1003:61:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1080:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 415,
												"id": 423,
												"nodeType": "Return",
												"src": "1073:15:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "738:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "778:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:3"
									},
									"scope": 701,
									"src": "718:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2083:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 436,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 434,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2126:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:3"
											},
											{
												"assignments": [
													445,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "2178:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 444,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 446,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "2196:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2218:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2247:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2031:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2058:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:3"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:3"
									},
									"scope": 701,
									"src": "2012:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3155:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "3185:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "3193:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 469,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															476,
															496
														],
														"referencedDeclaration": 496,
														"src": "3172:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 468,
												"id": 474,
												"nodeType": "Return",
												"src": "3165:67:3"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3088:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3104:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:3"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3141:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:3"
									},
									"scope": 701,
									"src": "3066:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "3608:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 489,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3647:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3655:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 492,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3664:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 488,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															516,
															566
														],
														"referencedDeclaration": 566,
														"src": "3625:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 487,
												"id": 494,
												"nodeType": "Return",
												"src": "3618:59:3"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3492:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3516:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3543:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3594:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:3"
									},
									"scope": 701,
									"src": "3461:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4189:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4228:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4236:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4242:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 508,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															516,
															566
														],
														"referencedDeclaration": 566,
														"src": "4206:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 514,
												"nodeType": "Return",
												"src": "4199:94:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4086:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4110:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4137:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4175:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:3"
									},
									"scope": 701,
									"src": "4046:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4727:321:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 533,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 536,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "4770:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 543,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "4847:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "4836:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:3"
											},
											{
												"assignments": [
													549,
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "4900:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 548,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "4914:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"arguments": [
														{
															"id": 556,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4967:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 552,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4941:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 554,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "4960:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "5007:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 561,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5016:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 562,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5028:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 559,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4989:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 529,
												"id": 564,
												"nodeType": "Return",
												"src": "4982:59:3"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4588:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4612:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4639:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4662:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4713:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:3"
									},
									"scope": 701,
									"src": "4548:500:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "5325:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "5361:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5369:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 576,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															618
														],
														"referencedDeclaration": 618,
														"src": "5342:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 581,
												"nodeType": "Return",
												"src": "5335:80:3"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5253:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5269:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5311:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:3"
									},
									"scope": 701,
									"src": "5225:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5764:229:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 597,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "5793:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5782:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:3"
											},
											{
												"assignments": [
													603,
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "5853:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 602,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 617,
														"src": "5867:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 604,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"id": 608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5912:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5894:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "5952:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 613,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5961:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 614,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5973:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 611,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5934:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 594,
												"id": 616,
												"nodeType": "Return",
												"src": "5927:59:3"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5643:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5667:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5694:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5750:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:3"
									},
									"scope": 701,
									"src": "5606:387:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "6269:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "6307:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "6315:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 628,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															635,
															670
														],
														"referencedDeclaration": 670,
														"src": "6286:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 627,
												"id": 633,
												"nodeType": "Return",
												"src": "6279:84:3"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6202:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6218:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:3"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "6255:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:3"
									},
									"scope": 701,
									"src": "6172:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6711:233:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 649,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6740:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 648,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6729:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:3"
											},
											{
												"assignments": [
													655,
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "6802:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "6816:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 656,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "6863:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 658,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "6843:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "6903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 665,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6912:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 666,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6924:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 663,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6885:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 646,
												"id": 668,
												"nodeType": "Return",
												"src": "6878:59:3"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6595:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6619:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6646:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6697:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:3"
									},
									"scope": 701,
									"src": "6556:388:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7110:532:3",
										"statements": [
											{
												"condition": {
													"id": 681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "7181:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7265:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 695,
																"nodeType": "Block",
																"src": "7573:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "7598:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 694,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:3"
																	}
																]
															},
															"id": 696,
															"nodeType": "IfStatement",
															"src": "7261:365:3",
															"trueBody": {
																"id": 690,
																"nodeType": "Block",
																"src": "7288:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 689,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "7120:516:3",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "7133:42:3",
													"statements": [
														{
															"expression": {
																"id": 682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "7154:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 680,
															"id": 683,
															"nodeType": "Return",
															"src": "7147:17:3"
														}
													]
												}
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "6986:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7008:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7041:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7096:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:3"
									},
									"scope": 701,
									"src": "6950:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 702,
							"src": "126:7518:3",
							"usedErrors": []
						}
					],
					"src": "33:7612:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							722
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 722,
							"linearizedBaseContracts": [
								722
							],
							"name": "Context",
							"nameLocation": "572:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "648:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 708,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 707,
												"id": 710,
												"nodeType": "Return",
												"src": "658:17:4"
											}
										]
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "639:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:4"
									},
									"scope": 722,
									"src": "586:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "755:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 717,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 716,
												"id": 719,
												"nodeType": "Return",
												"src": "765:15:4"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "739:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:4"
									},
									"scope": 722,
									"src": "688:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 723,
							"src": "554:235:4",
							"usedErrors": []
						}
					],
					"src": "33:757:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1034
						]
					},
					"id": 1035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "SafeMath",
							"nameLocation": "406:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "633:140:5",
										"statements": [
											{
												"id": 755,
												"nodeType": "UncheckedBlock",
												"src": "643:124:5",
												"statements": [
													{
														"assignments": [
															738
														],
														"declarations": [
															{
																"constant": false,
																"id": 738,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 755,
																"src": "667:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 737,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 742,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 740,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 743,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "702:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "706:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 750,
														"nodeType": "IfStatement",
														"src": "698:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 736,
															"id": 749,
															"nodeType": "Return",
															"src": "709:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 752,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "754:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 753,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 736,
														"id": 754,
														"nodeType": "Return",
														"src": "740:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "573:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "584:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "618:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:5"
									},
									"scope": 1034,
									"src": "557:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "995:113:5",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1033:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 770,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "1037:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 776,
														"nodeType": "IfStatement",
														"src": "1029:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 768,
															"id": 775,
															"nodeType": "Return",
															"src": "1040:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 778,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "1085:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 779,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "1089:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 781,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 768,
														"id": 782,
														"nodeType": "Return",
														"src": "1071:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "935:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "946:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "980:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "986:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:5"
									},
									"scope": 1034,
									"src": "919:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "1332:417:5",
										"statements": [
											{
												"id": 825,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1600:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 804,
														"nodeType": "IfStatement",
														"src": "1596:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 796,
															"id": 803,
															"nodeType": "Return",
															"src": "1608:16:5"
														}
													},
													{
														"assignments": [
															806
														],
														"declarations": [
															{
																"constant": false,
																"id": 806,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 825,
																"src": "1638:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 805,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 810,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "1650:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1654:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 811,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1673:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 812,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "1677:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 814,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1682:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 820,
														"nodeType": "IfStatement",
														"src": "1669:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 818,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 796,
															"id": 819,
															"nodeType": "Return",
															"src": "1685:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 822,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1730:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 823,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 796,
														"id": 824,
														"nodeType": "Return",
														"src": "1716:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1272:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1283:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:5"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1317:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:5"
									},
									"scope": 1034,
									"src": "1256:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1974:114:5",
										"statements": [
											{
												"id": 853,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 839,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "2012:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 846,
														"nodeType": "IfStatement",
														"src": "2008:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 838,
															"id": 845,
															"nodeType": "Return",
															"src": "2020:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "2065:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "2069:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 838,
														"id": 852,
														"nodeType": "Return",
														"src": "2051:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1914:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1925:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1959:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1965:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:5"
									},
									"scope": 1034,
									"src": "1898:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2323:114:5",
										"statements": [
											{
												"id": 881,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "2361:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 874,
														"nodeType": "IfStatement",
														"src": "2357:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 866,
															"id": 873,
															"nodeType": "Return",
															"src": "2369:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 876,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "2414:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 877,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "2418:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 879,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 866,
														"id": 880,
														"nodeType": "Return",
														"src": "2400:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2263:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2274:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:5"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2308:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2314:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:5"
									},
									"scope": 1034,
									"src": "2247:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "2739:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2756:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 894,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2760:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 892,
												"id": 896,
												"nodeType": "Return",
												"src": "2749:12:5"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2685:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:5"
									},
									"scope": 1034,
									"src": "2672:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "3106:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3123:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 909,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3127:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 907,
												"id": 911,
												"nodeType": "Return",
												"src": "3116:12:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3052:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:5"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3097:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:5"
									},
									"scope": 1034,
									"src": "3039:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "3449:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3466:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 924,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3470:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 922,
												"id": 926,
												"nodeType": "Return",
												"src": "3459:12:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3395:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3406:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:5"
									},
									"scope": 1034,
									"src": "3382:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "3834:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "3851:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 939,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3855:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 937,
												"id": 941,
												"nodeType": "Return",
												"src": "3844:12:5"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3780:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3791:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3825:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:5"
									},
									"scope": 1034,
									"src": "3767:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "4383:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4400:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 954,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4404:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 956,
												"nodeType": "Return",
												"src": "4393:12:5"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4329:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "4374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:5"
									},
									"scope": 1034,
									"src": "4316:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "5001:106:5",
										"statements": [
											{
												"id": 981,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 971,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "5043:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 972,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5048:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 974,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "5051:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 970,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 976,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5085:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 978,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "5089:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 969,
														"id": 980,
														"nodeType": "Return",
														"src": "5078:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4898:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4917:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4936:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4992:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:5"
									},
									"scope": 1034,
									"src": "4876:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "5716:105:5",
										"statements": [
											{
												"id": 1006,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 996,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "5758:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 999,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "5765:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 995,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1001,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "5799:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1003,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "5803:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 994,
														"id": 1005,
														"nodeType": "Return",
														"src": "5792:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5613:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5632:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:5"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5707:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:5"
									},
									"scope": 1034,
									"src": "5591:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "6592:105:5",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1021,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "6634:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1024,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "6641:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1020,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "6675:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "6679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1019,
														"id": 1030,
														"nodeType": "Return",
														"src": "6668:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6508:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6527:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1014,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "6583:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:5"
									},
									"scope": 1034,
									"src": "6467:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "398:6301:5",
							"usedErrors": []
						}
					],
					"src": "33:6667:5"
				},
				"id": 5
			},
			"contracts/PreSale.sol": {
				"ast": {
					"absolutePath": "contracts/PreSale.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Context": [
							722
						],
						"IERC20": [
							181
						],
						"IMasterEntertainer": [
							2039
						],
						"Ownable": [
							103
						],
						"PreSale": [
							2015
						],
						"SafeERC20": [
							405
						],
						"SafeMath": [
							1034
						],
						"TransferHelper": [
							2156
						]
					},
					"id": 2016,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 182,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 406,
							"src": "117:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 702,
							"src": "183:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 104,
							"src": "235:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 1035,
							"src": "288:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 2157,
							"src": "346:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
							"file": "./interfaces/IMasterEntertainer.sol",
							"id": 1043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 2040,
							"src": "387:45:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1044,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "454:7:6"
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2015,
							"linearizedBaseContracts": [
								2015,
								103,
								722
							],
							"name": "PreSale",
							"nameLocation": "443:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1048,
									"libraryName": {
										"id": 1046,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "474:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "468:26:6",
									"typeName": {
										"id": 1047,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "486:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1051,
									"libraryName": {
										"id": 1049,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1034,
										"src": "505:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "499:27:6",
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1055,
									"libraryName": {
										"id": 1052,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 405,
										"src": "537:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:6",
									"typeName": {
										"id": 1054,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1053,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "551:6:6"
										},
										"referencedDeclaration": 181,
										"src": "551:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1058,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "898:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "884:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1056,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "884:6:6"
										},
										"referencedDeclaration": 181,
										"src": "884:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1061,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "943:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "929:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1060,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1059,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "929:6:6"
										},
										"referencedDeclaration": 181,
										"src": "929:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b1b1de6",
									"id": 1063,
									"mutability": "mutable",
									"name": "pricePerToken",
									"nameLocation": "982:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "967:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1062,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4d66daf",
									"id": 1065,
									"mutability": "mutable",
									"name": "limit",
									"nameLocation": "1049:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1034:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1034:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f89be593",
									"id": 1067,
									"mutability": "mutable",
									"name": "softcap",
									"nameLocation": "1124:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1109:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1066,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ed9ebfc",
									"id": 1069,
									"mutability": "mutable",
									"name": "soldTokens",
									"nameLocation": "1209:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1194:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1068,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1194:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b8906ae",
									"id": 1072,
									"mutability": "mutable",
									"name": "saleEnded",
									"nameLocation": "1276:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1261:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1070,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1261:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1071,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1288:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e754e7c4",
									"id": 1074,
									"mutability": "mutable",
									"name": "afterDays",
									"nameLocation": "1358:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1343:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1343:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ef78d4fd",
									"id": 1077,
									"mutability": "constant",
									"name": "period",
									"nameLocation": "1458:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1434:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1434:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1467:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a5ebf835",
									"id": 1080,
									"mutability": "constant",
									"name": "initialClaimPercentage",
									"nameLocation": "1539:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1515:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1515:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1564:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "151bad0a",
									"id": 1083,
									"mutability": "constant",
									"name": "percentagePerPeriod",
									"nameLocation": "1666:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1642:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1642:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2f661946",
									"id": 1086,
									"mutability": "constant",
									"name": "cliffPeriod",
									"nameLocation": "1798:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1774:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1774:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 1085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1812:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90_by_1",
											"typeString": "int_const 90"
										},
										"value": "90"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "856734c4",
									"id": 1089,
									"mutability": "mutable",
									"name": "requireWhitelist",
									"nameLocation": "1912:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1900:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1087,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1900:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1088,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1931:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d936547e",
									"id": 1093,
									"mutability": "mutable",
									"name": "whitelisted",
									"nameLocation": "2046:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "2014:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1092,
										"keyType": {
											"id": 1090,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2022:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2014:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1091,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2033:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "667022fd",
									"id": 1097,
									"mutability": "mutable",
									"name": "bought",
									"nameLocation": "2098:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "2063:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1096,
										"keyType": {
											"id": 1094,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2071:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2063:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1095,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2082:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 1101,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "2187:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "2152:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1100,
										"keyType": {
											"id": 1098,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2160:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2152:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1099,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2171:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a960c65f",
									"id": 1105,
									"mutability": "mutable",
									"name": "claimedTokens",
									"nameLocation": "2290:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "2255:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1104,
										"keyType": {
											"id": 1102,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2263:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2255:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2274:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3739e05",
									"id": 1109,
									"mutability": "mutable",
									"name": "lastClaimAddress",
									"nameLocation": "2386:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "2351:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1108,
										"keyType": {
											"id": 1106,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2359:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2351:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 1107,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2370:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1113,
									"name": "SaleEnded",
									"nameLocation": "2773:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimDate",
												"nameLocation": "2799:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2783:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:27:6"
									},
									"src": "2767:43:6"
								},
								{
									"anonymous": false,
									"id": 1119,
									"name": "Claimed",
									"nameLocation": "2821:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2845:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2829:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2868:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "2852:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2852:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:47:6"
									},
									"src": "2815:61:6"
								},
								{
									"anonymous": false,
									"id": 1125,
									"name": "Bought",
									"nameLocation": "2887:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2910:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2894:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2933:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2917:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2893:47:6"
									},
									"src": "2881:60:6"
								},
								{
									"anonymous": false,
									"id": 1129,
									"name": "ChangeRewardToken",
									"nameLocation": "2952:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "2986:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2970:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:26:6"
									},
									"src": "2946:50:6"
								},
								{
									"anonymous": false,
									"id": 1135,
									"name": "DepositedInVestingPool",
									"nameLocation": "3007:22:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3046:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "3030:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3069:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "3053:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:47:6"
									},
									"src": "3001:76:6"
								},
								{
									"anonymous": false,
									"id": 1139,
									"name": "AddedToWhitelist",
									"nameLocation": "3088:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3121:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3105:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:24:6"
									},
									"src": "3082:47:6"
								},
								{
									"anonymous": false,
									"id": 1143,
									"name": "AddedToWhitelistFromSaft",
									"nameLocation": "3140:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3181:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3165:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:24:6"
									},
									"src": "3134:55:6"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "3304:280:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "3322:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3331:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3322:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6572726f723a2050726963652068617320746f20626520686967686572207468616e207a65726f",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60dd7cd83306b5085c89490e01907f9bd2fb3ee19520475e650b92e9b2f0dc2f",
																"typeString": "literal_string \"ABOAT::error: Price has to be higher than zero\""
															},
															"value": "ABOAT::error: Price has to be higher than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60dd7cd83306b5085c89490e01907f9bd2fb3ee19520475e650b92e9b2f0dc2f",
																"typeString": "literal_string \"ABOAT::error: Price has to be higher than zero\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "3314:69:6"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1165,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "3393:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1166,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3407:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "3393:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3393:26:6"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1169,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3429:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "_paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3444:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "3429:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "3429:28:6"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "3467:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1174,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "3475:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3467:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "3467:14:6"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1177,
														"name": "softcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "3491:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1178,
														"name": "_softcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "3501:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3491:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "3491:18:6"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1181,
														"name": "pricePerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "3555:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1182,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3571:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3555:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3555:22:6"
											}
										]
									},
									"id": 1186,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "3218:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3211:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "3211:6:6"
													},
													"referencedDeclaration": 181,
													"src": "3211:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "3239:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3232:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1148,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1147,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "3232:6:6"
													},
													"referencedDeclaration": 181,
													"src": "3232:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "3262:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3254:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_softcap",
												"nameLocation": "3278:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3270:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3296:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3288:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:93:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:0:6"
									},
									"scope": 2015,
									"src": "3199:385:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "3978:1102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "3996:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3996:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d416e64456e6453616c653a2053616c6520616c726561647920656e646564",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4012:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf504c10217341d1855cad0edfa02b8afc7c010295b8c6040565196419e6fd8",
																"typeString": "literal_string \"ABOAT::claimAndEndSale: Sale already ended\""
															},
															"value": "ABOAT::claimAndEndSale: Sale already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf504c10217341d1855cad0edfa02b8afc7c010295b8c6040565196419e6fd8",
																"typeString": "literal_string \"ABOAT::claimAndEndSale: Sale already ended\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3988:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3988:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "3988:69:6"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "saleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4067:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1201,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4079:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4079:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4067:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "4067:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1205,
														"name": "softcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "4107:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1206,
														"name": "soldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "4118:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4107:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "4609:403:6",
													"statements": [
														{
															"expression": {
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1255,
																	"name": "afterDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "4698:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4710:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4698:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "4698:13:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1261,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "4737:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4729:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1259,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4729:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4729:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4761:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4753:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1263,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4753:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4753:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4729:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1299,
																"nodeType": "Block",
																"src": "4903:99:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1290,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4952:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1291,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4952:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1294,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "4973:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_PreSale_$2015",
																									"typeString": "contract PreSale"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_PreSale_$2015",
																									"typeString": "contract PreSale"
																								}
																							],
																							"id": 1293,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4965:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1292,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "4965:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4965:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"src": "4965:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1287,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "4921:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "4921:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4921:66:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1298,
																		"nodeType": "ExpressionStatement",
																		"src": "4921:66:6"
																	}
																]
															},
															"id": 1300,
															"nodeType": "IfStatement",
															"src": "4726:276:6",
															"trueBody": {
																"id": 1286,
																"nodeType": "Block",
																"src": "4765:132:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1273,
																							"name": "rewardToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "4819:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						],
																						"id": 1272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4811:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1271,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4811:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4811:20:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1275,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4833:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4833:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1281,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "4875:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_PreSale_$2015",
																										"typeString": "contract PreSale"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_PreSale_$2015",
																										"typeString": "contract PreSale"
																									}
																								],
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4867:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1279,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "4867:7:6",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4867:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 1277,
																							"name": "rewardToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "4845:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 1278,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 120,
																						"src": "4845:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4845:36:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1268,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "4783:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2084,
																				"src": "4783:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4783:99:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1285,
																		"nodeType": "ExpressionStatement",
																		"src": "4783:99:6"
																	}
																]
															}
														}
													]
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "4104:908:6",
												"trueBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "4130:473:6",
													"statements": [
														{
															"expression": {
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1208,
																	"name": "afterDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "4278:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1209,
																	"name": "_afterDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4290:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4278:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1211,
															"nodeType": "ExpressionStatement",
															"src": "4278:22:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1214,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "4325:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4317:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1212,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4317:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4317:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4350:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4342:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1216,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4342:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4342:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4317:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "4494:98:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1243,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4543:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4543:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1247,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "4563:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_PreSale_$2015",
																									"typeString": "contract PreSale"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_PreSale_$2015",
																									"typeString": "contract PreSale"
																								}
																							],
																							"id": 1246,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4555:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1245,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "4555:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1248,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4555:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "balance",
																					"nodeType": "MemberAccess",
																					"src": "4555:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1240,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "4512:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "4512:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4512:65:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1251,
																		"nodeType": "ExpressionStatement",
																		"src": "4512:65:6"
																	}
																]
															},
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "4314:278:6",
															"trueBody": {
																"id": 1239,
																"nodeType": "Block",
																"src": "4354:134:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1226,
																							"name": "paymentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "4408:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						],
																						"id": 1225,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4400:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1224,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4400:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4400:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1228,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4423:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4423:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1234,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "4466:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_PreSale_$2015",
																										"typeString": "contract PreSale"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_PreSale_$2015",
																										"typeString": "contract PreSale"
																									}
																								],
																								"id": 1233,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4458:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1232,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "4458:7:6",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1235,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4458:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 1230,
																							"name": "paymentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "4435:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balanceOf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 120,
																						"src": "4435:22:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																							"typeString": "function (address) view external returns (uint256)"
																						}
																					},
																					"id": 1236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4435:37:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1221,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "4372:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2084,
																				"src": "4372:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4372:101:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1238,
																		"nodeType": "ExpressionStatement",
																		"src": "4372:101:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5064:6:6",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_86400_by_1",
																				"typeString": "int_const 86400"
																			}
																		],
																		"expression": {
																			"id": 1306,
																			"name": "afterDays",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1074,
																			"src": "5050:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 928,
																		"src": "5050:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5050:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1304,
																	"name": "saleEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "5036:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 898,
																"src": "5036:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5036:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "SaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "5026:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5026:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "5021:52:6"
											}
										]
									},
									"functionSelector": "efe95f51",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1190,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3968:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3968:9:6"
										}
									],
									"name": "claimAndEndSale",
									"nameLocation": "3925:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "_afterDays",
												"nameLocation": "3949:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "3941:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:20:6"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3978:0:6"
									},
									"scope": 2015,
									"src": "3916:1164:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "5135:133:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "requireWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "5153:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a64697361626c6557686974656c6973743a2057686974656c69737420697320616c72656164792064697361626c6564",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5171:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_190425b621cd0917f901d475559f5b5f4907d9bd007efefdf1c38142b73fc846",
																"typeString": "literal_string \"ABOAT:disableWhitelist: Whitelist is already disabled\""
															},
															"value": "ABOAT:disableWhitelist: Whitelist is already disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_190425b621cd0917f901d475559f5b5f4907d9bd007efefdf1c38142b73fc846",
																"typeString": "literal_string \"ABOAT:disableWhitelist: Whitelist is already disabled\""
															}
														],
														"id": 1319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5145:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5145:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "5145:82:6"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1324,
														"name": "requireWhitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "5237:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5256:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5237:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "5237:24:6"
											}
										]
									},
									"functionSelector": "d6b0f484",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5125:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5125:9:6"
										}
									],
									"name": "disableWhitelist",
									"nameLocation": "5099:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5115:2:6"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5135:0:6"
									},
									"scope": 2015,
									"src": "5090:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "5614:445:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IERC20_$181",
																"typeString": "contract IERC20"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1338,
																"name": "_newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "5632:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1339,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "5651:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															},
															"src": "5632:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a204e6577207265776172642073686f756c6420626520646966666572656e742066726f6d2063757272656e742e",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5664:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da",
																"typeString": "literal_string \"ABOAT::updateRewardToken: New reward should be different from current.\""
															},
															"value": "ABOAT::updateRewardToken: New reward should be different from current."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a057a36eec7c15fca3f6b6f8b89a1cb84746deb050049b346c3288bd05aa8da",
																"typeString": "literal_string \"ABOAT::updateRewardToken: New reward should be different from current.\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5624:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5624:113:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "5624:113:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1349,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5789:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			],
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5781:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5781:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5781:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1345,
																		"name": "_newRewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "5755:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$181",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "5755:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5755:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1356,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5829:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			],
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5821:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1354,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5821:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5821:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1352,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "5799:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$181",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "5799:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5799:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5755:80:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a757064617465526577617264546f6b656e3a2054686520636f6e74726163742073686f756c6420636f6e7461696e2061746c65617374207468652073616d6520616d6f756e74206f6620746f6b656e732061732066726f6d207468652063757272656e7420726577617264546f6b656e",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5837:121:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f",
																"typeString": "literal_string \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\""
															},
															"value": "ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_975c5191a11e7ea4e9673be6f9425c655e4100c69b9699269a6042d7e8ee7e3f",
																"typeString": "literal_string \"ABOAT::updateRewardToken: The contract should contain atleast the same amount of tokens as from the current rewardToken\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5747:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5747:212:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "5747:212:6"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1363,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "5969:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1364,
														"name": "_newRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "5983:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "5969:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "5969:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1370,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "6039:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$181",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6031:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6031:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1367,
														"name": "ChangeRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "6013:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "EmitStatement",
												"src": "6008:44:6"
											}
										]
									},
									"functionSelector": "f8cf31cb",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5604:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5604:9:6"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "5555:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_newRewardToken",
												"nameLocation": "5580:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "5573:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1331,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1330,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "5573:6:6"
													},
													"referencedDeclaration": 181,
													"src": "5573:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5572:24:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:6"
									},
									"scope": 2015,
									"src": "5546:513:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "6131:114:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "6149:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6162:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6149:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7570646174654166746572446179733a2053616c65206e6f7420656e646564",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6165:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e729ea7bc20689f9b8b7bee880661ff8353a38a7c244a8fb91e624df3acfaebe",
																"typeString": "literal_string \"ABOAT::updateAfterDays: Sale not ended\""
															},
															"value": "ABOAT::updateAfterDays: Sale not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e729ea7bc20689f9b8b7bee880661ff8353a38a7c244a8fb91e624df3acfaebe",
																"typeString": "literal_string \"ABOAT::updateAfterDays: Sale not ended\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6141:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6141:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "6141:65:6"
											},
											{
												"expression": {
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1389,
														"name": "afterDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "6216:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1390,
														"name": "_afterDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "6228:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6216:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "6216:22:6"
											}
										]
									},
									"functionSelector": "0c0e0862",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1379,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6121:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6121:9:6"
										}
									],
									"name": "updateAfterDays",
									"nameLocation": "6078:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_afterDays",
												"nameLocation": "6102:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6094:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6093:20:6"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6131:0:6"
									},
									"scope": 2015,
									"src": "6069:176:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "6323:299:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1403,
																	"name": "addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "6341:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6341:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6361:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "6341:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a77686974656c6973743a20596f752063616e277420616464206d6f7265207468616e2031303020616464726573736573206174207468652073616d652074696d65",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6366:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															},
															"value": "ABOAT::whitelist: You can't add more than 100 addresses at the same time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															}
														],
														"id": 1402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6333:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:108:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "6333:108:6"
											},
											{
												"body": {
													"id": 1429,
													"nodeType": "Block",
													"src": "6506:61:6",
													"statements": [
														{
															"expression": {
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1421,
																		"name": "whitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "6520:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1425,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1422,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1397,
																			"src": "6532:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1424,
																		"indexExpression": {
																			"id": 1423,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "6542:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6532:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6520:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6552:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6520:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "6520:36:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1414,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "6471:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1415,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "6479:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6479:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6471:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1430,
												"initializationExpression": {
													"assignments": [
														1411
													],
													"declarations": [
														{
															"constant": false,
															"id": 1411,
															"mutability": "mutable",
															"name": "index",
															"nameLocation": "6460:5:6",
															"nodeType": "VariableDeclaration",
															"scope": 1430,
															"src": "6455:10:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1410,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6455:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1413,
													"initialValue": {
														"hexValue": "30",
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6468:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6455:14:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6497:7:6",
														"subExpression": {
															"id": 1418,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "6497:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1420,
													"nodeType": "ExpressionStatement",
													"src": "6497:7:6"
												},
												"nodeType": "ForStatement",
												"src": "6451:116:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1432,
																"name": "addresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "6598:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6598:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1431,
														"name": "AddedToWhitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "6581:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6581:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "EmitStatement",
												"src": "6576:39:6"
											}
										]
									},
									"functionSelector": "bd8aa780",
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1400,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6313:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6313:9:6"
										}
									],
									"name": "whitelist",
									"nameLocation": "6268:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "6295:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "6278:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1395,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6278:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1396,
													"nodeType": "ArrayTypeName",
													"src": "6278:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6277:28:6"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6323:0:6"
									},
									"scope": 2015,
									"src": "6259:363:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "6726:823:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1449,
																	"name": "addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "6744:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6744:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6764:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "6744:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a77686974656c6973743a20596f752063616e277420616464206d6f7265207468616e2031303020616464726573736573206174207468652073616d652074696d65",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6769:74:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															},
															"value": "ABOAT::whitelist: You can't add more than 100 addresses at the same time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c1c10da789c3df6110da46d4e3d0b4857e29adbf53b43e229ac46cce38fe114",
																"typeString": "literal_string \"ABOAT::whitelist: You can't add more than 100 addresses at the same time\""
															}
														],
														"id": 1448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6736:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6736:108:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "6736:108:6"
											},
											{
												"assignments": [
													1457
												],
												"declarations": [
													{
														"constant": false,
														"id": 1457,
														"mutability": "mutable",
														"name": "sumOfSoldTokens",
														"nameLocation": "6862:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "6854:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6854:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"hexValue": "30",
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6880:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6854:27:6"
											},
											{
												"body": {
													"id": 1537,
													"nodeType": "Block",
													"src": "6946:486:6",
													"statements": [
														{
															"expression": {
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1471,
																		"name": "whitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "6960:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1475,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1472,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "6972:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1474,
																		"indexExpression": {
																			"id": 1473,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "6982:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6972:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6960:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6992:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6960:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "6960:36:6"
														},
														{
															"assignments": [
																1480
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1480,
																	"mutability": "mutable",
																	"name": "amountBought",
																	"nameLocation": "7018:12:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1537,
																	"src": "7010:20:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1479,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7010:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1490,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1488,
																		"name": "pricePerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "7062:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7052:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 1481,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "7033:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1483,
																				"indexExpression": {
																					"id": 1482,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "7041:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7033:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 928,
																			"src": "7033:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7033:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 943,
																	"src": "7033:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7033:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7010:66:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1495,
																					"name": "amountBought",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "7124:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1492,
																						"name": "getRemainingBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1590,
																						"src": "7098:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7098:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 913,
																				"src": "7098:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7098:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7140:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7098:43:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "41424f41543a3a6275793a20416d6f756e7420776f756c6420657863656564207468652072656d61696e696e672062616c616e6365",
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7143:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3",
																			"typeString": "literal_string \"ABOAT::buy: Amount would exceed the remaining balance\""
																		},
																		"value": "ABOAT::buy: Amount would exceed the remaining balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3",
																			"typeString": "literal_string \"ABOAT::buy: Amount would exceed the remaining balance\""
																		}
																	],
																	"id": 1491,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7090:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7090:109:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1501,
															"nodeType": "ExpressionStatement",
															"src": "7090:109:6"
														},
														{
															"expression": {
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1502,
																		"name": "bought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "7213:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1506,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1503,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "7220:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1505,
																		"indexExpression": {
																			"id": 1504,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "7230:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7220:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7213:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1513,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "7269:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1515,
																			"indexExpression": {
																				"id": 1514,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "7277:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7269:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1507,
																				"name": "bought",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1097,
																				"src": "7240:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1511,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1508,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "7247:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1510,
																				"indexExpression": {
																					"id": 1509,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "7257:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7247:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7240:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 898,
																		"src": "7240:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7240:44:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7213:71:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1518,
															"nodeType": "ExpressionStatement",
															"src": "7213:71:6"
														},
														{
															"expression": {
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1519,
																	"name": "sumOfSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "7298:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1522,
																			"name": "amountBought",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "7336:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1520,
																			"name": "sumOfSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "7316:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 898,
																		"src": "7316:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7316:33:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7298:51:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1525,
															"nodeType": "ExpressionStatement",
															"src": "7298:51:6"
														},
														{
															"expression": {
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1526,
																		"name": "lastClaimAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "7363:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1530,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1527,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "7380:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1529,
																		"indexExpression": {
																			"id": 1528,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "7390:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7380:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7363:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1533,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "7408:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7400:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7400:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7400:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7363:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "7363:58:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1464,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "6911:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1465,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "6919:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6919:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6911:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"initializationExpression": {
													"assignments": [
														1461
													],
													"declarations": [
														{
															"constant": false,
															"id": 1461,
															"mutability": "mutable",
															"name": "index",
															"nameLocation": "6900:5:6",
															"nodeType": "VariableDeclaration",
															"scope": 1538,
															"src": "6895:10:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1460,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6895:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1463,
													"initialValue": {
														"hexValue": "30",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6908:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6895:14:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6937:7:6",
														"subExpression": {
															"id": 1468,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "6937:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1470,
													"nodeType": "ExpressionStatement",
													"src": "6937:7:6"
												},
												"nodeType": "ForStatement",
												"src": "6891:541:6"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1539,
														"name": "soldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "7441:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1542,
																"name": "sumOfSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "7469:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1540,
																"name": "soldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "7454:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "7454:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7454:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7441:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "7441:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1547,
																"name": "addresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "7525:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7525:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "AddedToWhitelistFromSaft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "7500:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7500:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "EmitStatement",
												"src": "7495:47:6"
											}
										]
									},
									"functionSelector": "5372a58e",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6716:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6716:9:6"
										}
									],
									"name": "whitelistFromSAFT",
									"nameLocation": "6637:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "6672:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6655:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6655:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "6655:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6700:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6683:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6683:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ArrayTypeName",
													"src": "6683:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6654:54:6"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6726:0:6"
									},
									"scope": 2015,
									"src": "6628:921:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "7939:214:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1559,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "7960:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7952:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7952:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7952:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7984:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7976:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1561,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7976:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7976:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7952:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "8063:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1584,
																		"name": "soldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "8125:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1580,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "8114:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PreSale_$2015",
																							"typeString": "contract PreSale"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_PreSale_$2015",
																							"typeString": "contract PreSale"
																						}
																					],
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8106:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1578,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "8106:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8106:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1576,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "8084:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$181",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 120,
																			"src": "8084:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8084:36:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 913,
																	"src": "8084:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8084:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1556,
															"id": 1586,
															"nodeType": "Return",
															"src": "8077:59:6"
														}
													]
												},
												"id": 1588,
												"nodeType": "IfStatement",
												"src": "7949:198:6",
												"trueBody": {
													"id": 1575,
													"nodeType": "Block",
													"src": "7988:69:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "soldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "8035:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1568,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8017:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PreSale_$2015",
																						"typeString": "contract PreSale"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PreSale_$2015",
																						"typeString": "contract PreSale"
																					}
																				],
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8009:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1566,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8009:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8009:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "8009:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 913,
																	"src": "8009:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8009:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1556,
															"id": 1574,
															"nodeType": "Return",
															"src": "8002:44:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2fba2c85",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingBalance",
									"nameLocation": "7887:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7906:2:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "7930:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7930:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7929:9:6"
									},
									"scope": 2015,
									"src": "7878:275:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "8225:451:6",
										"statements": [
											{
												"assignments": [
													1596
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "cliffEnded",
														"nameLocation": "8243:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "8235:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8235:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"arguments": [
														{
															"id": 1599,
															"name": "cliffPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "8270:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1597,
															"name": "saleEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "8256:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "8256:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8235:47:6"
											},
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "deltaPeriod",
														"nameLocation": "8300:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "8292:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8292:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"name": "afterDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "8329:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31",
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8341:6:6",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "8329:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1604,
															"name": "cliffEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8314:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "8314:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8314:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8292:56:6"
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "percentage",
														"nameLocation": "8366:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "8358:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8358:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "8379:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8391:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8379:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1616,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8396:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8396:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1618,
																"name": "deltaPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "8414:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8396:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8379:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1637,
														"name": "initialClaimPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "8593:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8379:236:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 1635,
																"name": "initialClaimPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "8558:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1632,
																		"name": "percentagePerPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "8520:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1627,
																					"name": "period",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1077,
																					"src": "8486:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1628,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8495:6:6",
																					"subdenomination": "days",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_86400_by_1",
																						"typeString": "int_const 86400"
																					},
																					"value": "1"
																				},
																				"src": "8486:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1624,
																						"name": "deltaPeriod",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1603,
																						"src": "8456:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1621,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "8436:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1622,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "8436:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 913,
																					"src": "8436:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8436:32:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 943,
																			"src": "8436:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8436:66:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 928,
																	"src": "8436:83:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8436:104:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "8436:121:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8436:145:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8358:257:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1640,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "8632:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8645:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "8632:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1644,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "8659:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8632:37:6",
													"trueExpression": {
														"hexValue": "31303030",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8652:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1646,
												"nodeType": "Return",
												"src": "8625:44:6"
											}
										]
									},
									"functionSelector": "9c92431b",
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPercentage",
									"nameLocation": "8172:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8192:2:6"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "8216:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8215:9:6"
									},
									"scope": 2015,
									"src": "8163:513:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "9056:1007:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "9074:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9087:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9074:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6275793a2053616c6520616c726561647920656e64656421",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9090:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f805a4d8e4faa04b6d70860d5d9f7a495cbfa53dfee97f8ef85439ca16646051",
																"typeString": "literal_string \"ABOAT::buy: Sale already ended!\""
															},
															"value": "ABOAT::buy: Sale already ended!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f805a4d8e4faa04b6d70860d5d9f7a495cbfa53dfee97f8ef85439ca16646051",
																"typeString": "literal_string \"ABOAT::buy: Sale already ended!\""
															}
														],
														"id": 1653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9066:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9066:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "9066:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1661,
																	"name": "whitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "9142:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1664,
																"indexExpression": {
																	"expression": {
																		"id": 1662,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9154:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9154:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9142:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9169:17:6",
																"subExpression": {
																	"id": 1665,
																	"name": "requireWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "9170:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9142:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6275793a20596f75277265206e6f742077686974656c697374656420666f7220746869732073616c6521",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:51:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5860cae0068b83961f7ac97471bc52ec93fbafb2e22612e016894525ffbff9d1",
																"typeString": "literal_string \"ABOAT::buy: You're not whitelisted for this sale!\""
															},
															"value": "ABOAT::buy: You're not whitelisted for this sale!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5860cae0068b83961f7ac97471bc52ec93fbafb2e22612e016894525ffbff9d1",
																"typeString": "literal_string \"ABOAT::buy: You're not whitelisted for this sale!\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9134:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "9134:106:6"
											},
											{
												"assignments": [
													1672
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "isEthToken",
														"nameLocation": "9255:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "9250:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1671,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9250:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1682,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1675,
																"name": "paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "9276:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9268:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9268:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9268:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9301:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9293:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9293:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9268:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9250:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9321:11:6",
																"subExpression": {
																	"id": 1684,
																	"name": "isEthToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "9322:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1686,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9336:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "9336:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1688,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "9349:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9336:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9321:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6275793a2053656e742076616c756520646f65736e2774206d6565742074686520676976656e20616d6f756e74",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9357:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_feb0cc47c5ad597177363405a6ffd2e717b6506c208940c9b41452af066cf2ac",
																"typeString": "literal_string \"ABOAT::buy: Sent value doesn't meet the given amount\""
															},
															"value": "ABOAT::buy: Sent value doesn't meet the given amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_feb0cc47c5ad597177363405a6ffd2e717b6506c208940c9b41452af066cf2ac",
																"typeString": "literal_string \"ABOAT::buy: Sent value doesn't meet the given amount\""
															}
														],
														"id": 1683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9313:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9313:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "9313:99:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1700,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "9453:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1695,
																			"name": "bought",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1097,
																			"src": "9430:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1698,
																		"indexExpression": {
																			"expression": {
																				"id": 1696,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9437:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9437:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9430:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 898,
																	"src": "9430:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9430:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1702,
																"name": "limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "9464:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9430:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6275793a20416d6f756e7420776f756c642065786365656420746865206d6178696d756d20616c6c6f776564206c696d6974",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9471:59:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_381934fd8e3537d618054e1cdd896b2699077774bd75b61e814d5bc15cd4fdd5",
																"typeString": "literal_string \"ABOAT::buy: Amount would exceed the maximum allowed limit\""
															},
															"value": "ABOAT::buy: Amount would exceed the maximum allowed limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_381934fd8e3537d618054e1cdd896b2699077774bd75b61e814d5bc15cd4fdd5",
																"typeString": "literal_string \"ABOAT::buy: Amount would exceed the maximum allowed limit\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9422:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9422:109:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "9422:109:6"
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "amountBought",
														"nameLocation": "9549:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1783,
														"src": "9541:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9541:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1716,
												"initialValue": {
													"arguments": [
														{
															"id": 1714,
															"name": "pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "9585:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9575:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1709,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "9564:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 928,
																"src": "9564:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9564:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "9564:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9564:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9541:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1721,
																		"name": "amountBought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "9643:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1718,
																			"name": "getRemainingBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "9617:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9617:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 913,
																	"src": "9617:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9617:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9659:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9617:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a6275793a20416d6f756e7420776f756c6420657863656564207468652072656d61696e696e672062616c616e6365",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9662:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3",
																"typeString": "literal_string \"ABOAT::buy: Amount would exceed the remaining balance\""
															},
															"value": "ABOAT::buy: Amount would exceed the remaining balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b482f8be9699ec9b52529499beef3491ef6970b8fe0d4fb4638ab4f7342cd4f3",
																"typeString": "literal_string \"ABOAT::buy: Amount would exceed the remaining balance\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9609:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9609:109:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "9609:109:6"
											},
											{
												"condition": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9731:11:6",
													"subExpression": {
														"id": 1728,
														"name": "isEthToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "9732:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "9728:114:6",
												"trueBody": {
													"id": 1745,
													"nodeType": "Block",
													"src": "9744:98:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1735,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "9796:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "9796:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9788:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1733,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9788:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9788:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1740,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9817:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PreSale_$2015",
																					"typeString": "contract PreSale"
																				}
																			],
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9809:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9809:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9809:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1742,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "9824:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1730,
																		"name": "paymentToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "9758:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$181",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 238,
																	"src": "9758:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$181_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$181_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9758:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "9758:73:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1747,
															"name": "bought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "9851:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1750,
														"indexExpression": {
															"expression": {
																"id": 1748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9858:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9858:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9851:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1756,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "9895:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1751,
																	"name": "bought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "9872:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1754,
																"indexExpression": {
																	"expression": {
																		"id": 1752,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9879:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9879:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9872:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "9872:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9872:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9851:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "9851:51:6"
											},
											{
												"expression": {
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1760,
														"name": "soldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "9912:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1763,
																"name": "amountBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "9940:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1761,
																"name": "soldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "9925:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "9925:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9925:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9912:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "9912:41:6"
											},
											{
												"expression": {
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1767,
															"name": "lastClaimAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "9963:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1770,
														"indexExpression": {
															"expression": {
																"id": 1768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9980:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9963:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1773,
																"name": "paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "10002:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9994:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9994:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9994:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9963:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "9963:52:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1778,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10037:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10037:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "10049:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1777,
														"name": "Bought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "10030:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10030:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1782,
												"nodeType": "EmitStatement",
												"src": "10025:31:6"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "9021:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9033:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "9025:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9024:16:6"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9056:0:6"
									},
									"scope": 2015,
									"src": "9012:1051:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "10224:1788:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1788,
																"name": "saleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "10242:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10255:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10242:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a2053616c65206973206e6f74206f7665722079657421",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10258:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce962428896ce93b68ffaa1006ed91be0e5f0b040a85b3e71da3db046ac7d335",
																"typeString": "literal_string \"ABOAT::claim: Sale is not over yet!\""
															},
															"value": "ABOAT::claim: Sale is not over yet!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce962428896ce93b68ffaa1006ed91be0e5f0b040a85b3e71da3db046ac7d335",
																"typeString": "literal_string \"ABOAT::claim: Sale is not over yet!\""
															}
														],
														"id": 1787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10234:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10234:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "10234:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1795,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10314:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10314:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"components": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "10362:6:6",
																						"subdenomination": "days",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_86400_by_1",
																							"typeString": "int_const 86400"
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_86400_by_1",
																							"typeString": "int_const 86400"
																						}
																					],
																					"expression": {
																						"id": 1799,
																						"name": "afterDays",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1074,
																						"src": "10348:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 928,
																					"src": "10348:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10348:21:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1803,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10347:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1797,
																		"name": "saleEnded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "10333:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 898,
																	"src": "10333:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10314:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20436c61696d206973206e6f7420617661696c61626c65207965742e",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10373:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5259ad519682c3909bbda56553acf825a6fac261a533fe61e29e9dae37ec77f4",
																"typeString": "literal_string \"ABOAT::claim: Claim is not available yet.\""
															},
															"value": "ABOAT::claim: Claim is not available yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5259ad519682c3909bbda56553acf825a6fac261a533fe61e29e9dae37ec77f4",
																"typeString": "literal_string \"ABOAT::claim: Claim is not available yet.\""
															}
														],
														"id": 1794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10306:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10306:111:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "10306:111:6"
											},
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "currentPercentage",
														"nameLocation": "10435:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 2013,
														"src": "10427:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10427:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1813,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1811,
														"name": "getCurrentPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "10455:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10455:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10427:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1815,
																"name": "currentPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "10495:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10515:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10495:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a205468652070657263656e74616765206f6620746f6b656e20796f752063616e20636c61696d2069732063757272656e746c79207a65726f2e20506c656173652074727920616761696e206c61746572",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10518:95:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055",
																"typeString": "literal_string \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\""
															},
															"value": "ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7df436b0b18af56b22bf77d93880bb9545678065c876d01f15e51d31476eb055",
																"typeString": "literal_string \"ABOAT::claim: The percentage of token you can claim is currently zero. Please try again later\""
															}
														],
														"id": 1814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10487:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10487:127:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "10487:127:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1821,
															"name": "lastClaimAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "10627:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"expression": {
																"id": 1822,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10644:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10644:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10627:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1827,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "10667:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$181",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10659:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10659:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10659:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10627:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1855,
												"nodeType": "IfStatement",
												"src": "10624:213:6",
												"trueBody": {
													"id": 1854,
													"nodeType": "Block",
													"src": "10681:156:6",
													"statements": [
														{
															"expression": {
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1830,
																		"name": "lastClaimAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "10695:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1833,
																	"indexExpression": {
																		"expression": {
																			"id": 1831,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10712:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10712:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10695:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1836,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "10734:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10726:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10726:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10726:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10695:51:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1839,
															"nodeType": "ExpressionStatement",
															"src": "10695:51:6"
														},
														{
															"expression": {
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1840,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "10760:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1843,
																	"indexExpression": {
																		"expression": {
																			"id": 1841,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10768:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10768:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10760:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10760:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1846,
															"nodeType": "ExpressionStatement",
															"src": "10760:23:6"
														},
														{
															"expression": {
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1847,
																		"name": "claimedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "10797:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1850,
																	"indexExpression": {
																		"expression": {
																			"id": 1848,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10811:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10811:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10797:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10825:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10797:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1853,
															"nodeType": "ExpressionStatement",
															"src": "10797:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1857,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "10854:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1860,
																"indexExpression": {
																	"expression": {
																		"id": 1858,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10862:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10862:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10854:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1861,
																"name": "currentPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "10876:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10854:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20416c726561647920636c61696d656420796f75722063757272656e746c7920656c696769626c6520746f6b656e73",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10895:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f",
																"typeString": "literal_string \"ABOAT::claim: Already claimed your currently eligible tokens\""
															},
															"value": "ABOAT::claim: Already claimed your currently eligible tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52ee79095849619fb40f38822b5a2783cca2f5786c134d5f72a874ced1a4329f",
																"typeString": "literal_string \"ABOAT::claim: Already claimed your currently eligible tokens\""
															}
														],
														"id": 1856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10846:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10846:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "10846:112:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1866,
														"name": "softcap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "10971:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1867,
														"name": "soldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "10982:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10971:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2011,
													"nodeType": "Block",
													"src": "11625:381:6",
													"statements": [
														{
															"expression": {
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1957,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "11639:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1960,
																	"indexExpression": {
																		"expression": {
																			"id": 1958,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11647:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11647:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11639:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31303030",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11661:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "11639:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "11639:26:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1966,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "11693:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11685:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1964,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11685:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11685:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11718:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11710:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1968,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11710:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11710:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11685:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2000,
																"nodeType": "Block",
																"src": "11843:95:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1992,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "11892:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "11892:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1994,
																						"name": "bought",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1097,
																						"src": "11904:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1997,
																					"indexExpression": {
																						"expression": {
																							"id": 1995,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "11911:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "11911:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11904:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1989,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "11861:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "11861:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11861:62:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1999,
																		"nodeType": "ExpressionStatement",
																		"src": "11861:62:6"
																	}
																]
															},
															"id": 2001,
															"nodeType": "IfStatement",
															"src": "11682:256:6",
															"trueBody": {
																"id": 1988,
																"nodeType": "Block",
																"src": "11722:115:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1978,
																							"name": "paymentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "11776:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						],
																						"id": 1977,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11768:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1976,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11768:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11768:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1980,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "11791:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1981,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "11791:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1982,
																						"name": "bought",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1097,
																						"src": "11803:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1985,
																					"indexExpression": {
																						"expression": {
																							"id": 1983,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "11810:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1984,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "11810:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11803:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1973,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "11740:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2084,
																				"src": "11740:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11740:82:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1987,
																		"nodeType": "ExpressionStatement",
																		"src": "11740:82:6"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2003,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11964:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11964:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2005,
																			"name": "bought",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1097,
																			"src": "11976:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2008,
																		"indexExpression": {
																			"expression": {
																				"id": 2006,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11983:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11983:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11976:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2002,
																	"name": "Claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "11956:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11956:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2010,
															"nodeType": "EmitStatement",
															"src": "11951:44:6"
														}
													]
												},
												"id": 2012,
												"nodeType": "IfStatement",
												"src": "10968:1038:6",
												"trueBody": {
													"id": 1956,
													"nodeType": "Block",
													"src": "10994:625:6",
													"statements": [
														{
															"assignments": [
																1870
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1870,
																	"mutability": "mutable",
																	"name": "currentlyClaimed",
																	"nameLocation": "11016:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1956,
																	"src": "11008:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1869,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11008:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1875,
															"initialValue": {
																"baseExpression": {
																	"id": 1871,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "11035:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1874,
																"indexExpression": {
																	"expression": {
																		"id": 1872,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11043:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11043:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11035:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11008:46:6"
														},
														{
															"expression": {
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1876,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "11068:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1879,
																	"indexExpression": {
																		"expression": {
																			"id": 1877,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11076:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11076:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11068:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1880,
																	"name": "currentPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "11090:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11068:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "11068:39:6"
														},
														{
															"assignments": [
																1884
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1884,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11129:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1956,
																	"src": "11121:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1883,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11121:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1904,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1902,
																		"name": "pricePerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "11226:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11216:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "31303030",
																						"id": 1896,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11206:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000_by_1",
																							"typeString": "int_const 1000"
																						},
																						"value": "1000"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000_by_1",
																							"typeString": "int_const 1000"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1892,
																										"name": "currentlyClaimed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1870,
																										"src": "11183:16:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 1890,
																										"name": "currentPercentage",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1810,
																										"src": "11161:17:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1891,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 913,
																									"src": "11161:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1893,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "11161:39:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 1885,
																									"name": "bought",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1097,
																									"src": "11138:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1888,
																								"indexExpression": {
																									"expression": {
																										"id": 1886,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "11145:3:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1887,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "11145:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "11138:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1889,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 928,
																							"src": "11138:22:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11138:63:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 943,
																					"src": "11138:67:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11138:73:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 928,
																			"src": "11138:77:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11138:83:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 943,
																	"src": "11138:87:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11138:102:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11121:119:6"
														},
														{
															"expression": {
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1905,
																		"name": "claimedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "11254:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1908,
																	"indexExpression": {
																		"expression": {
																			"id": 1906,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11268:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11268:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11254:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1914,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "11312:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1909,
																				"name": "claimedTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "11282:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1912,
																			"indexExpression": {
																				"expression": {
																					"id": 1910,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11296:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11296:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11282:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 898,
																		"src": "11282:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11282:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11254:65:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1917,
															"nodeType": "ExpressionStatement",
															"src": "11254:65:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1920,
																			"name": "rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "11344:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$181",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11336:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1918,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11336:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11336:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11368:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11360:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1922,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11360:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11360:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11336:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1948,
																"nodeType": "Block",
																"src": "11480:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1943,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "11529:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1944,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "11529:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1945,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1884,
																					"src": "11541:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1940,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "11498:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "11498:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11498:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1947,
																		"nodeType": "ExpressionStatement",
																		"src": "11498:50:6"
																	}
																]
															},
															"id": 1949,
															"nodeType": "IfStatement",
															"src": "11333:230:6",
															"trueBody": {
																"id": 1939,
																"nodeType": "Block",
																"src": "11372:102:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1932,
																							"name": "rewardToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "11426:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_IERC20_$181",
																								"typeString": "contract IERC20"
																							}
																						],
																						"id": 1931,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11418:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1930,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11418:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11418:20:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1934,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "11440:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "11440:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1936,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1884,
																					"src": "11452:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1927,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "11390:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2156_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2084,
																				"src": "11390:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11390:69:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1938,
																		"nodeType": "ExpressionStatement",
																		"src": "11390:69:6"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1951,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11589:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11589:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1953,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "11601:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1950,
																	"name": "Claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "11581:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11581:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1955,
															"nodeType": "EmitStatement",
															"src": "11576:32:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "10209:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10214:2:6"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10224:0:6"
									},
									"scope": 2015,
									"src": "10200:1812:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2016,
							"src": "434:11580:6",
							"usedErrors": []
						}
					],
					"src": "36:11978:6"
				},
				"id": 6
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
					"exportedSymbols": {
						"IMasterEntertainer": [
							2039
						]
					},
					"id": 2040,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2017,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2039,
							"linearizedBaseContracts": [
								2039
							],
							"name": "IMasterEntertainer",
							"nameLocation": "70:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "673a7e28",
									"id": 2020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "104:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:7"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:7"
									},
									"scope": 2039,
									"src": "95:32:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94d45b59",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceOf",
									"nameLocation": "142:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "163:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "155:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "_vesting",
												"nameLocation": "178:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "170:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:33:7"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "211:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:7"
									},
									"scope": 2039,
									"src": "133:87:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3f30d27",
									"id": 2038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForUser",
									"nameLocation": "234:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "257:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "249:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "271:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "263:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "288:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "280:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:46:7"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:7"
									},
									"scope": 2039,
									"src": "225:79:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2040,
							"src": "60:246:7",
							"usedErrors": []
						}
					],
					"src": "36:270:7"
				},
				"id": 7
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							2156
						]
					},
					"id": 2157,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2156,
							"linearizedBaseContracts": [
								2156
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "313:281:8",
										"statements": [
											{
												"assignments": [
													2051,
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2083,
														"src": "324:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2050,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2083,
														"src": "338:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2052,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 2059,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "417:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "421:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2056,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2054,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "371:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2065,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "459:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2066,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "471:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2072,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "502:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2074,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2073,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2075,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2070,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 2064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "438:149:8"
											}
										]
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "241:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "264:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "284:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:8"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:8"
									},
									"scope": 2156,
									"src": "210:384:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "729:291:8",
										"statements": [
											{
												"assignments": [
													2096,
													2098
												],
												"declarations": [
													{
														"constant": false,
														"id": 2096,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2129,
														"src": "740:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2095,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2098,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2129,
														"src": "754:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2097,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 2104,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "833:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "839:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "843:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2101,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2099,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "787:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2112,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "893:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2118,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "924:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2120,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2119,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2121,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2116,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "860:153:8"
											}
										]
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "635:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "680:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "700:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:8"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:8"
									},
									"scope": 2156,
									"src": "600:420:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "1087:187:8",
										"statements": [
											{
												"assignments": [
													2138,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2138,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2154,
														"src": "1098:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2137,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2148,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2143,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2139,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "1116:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "1131:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2150,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "1182:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:8"
											}
										]
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1051:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1063:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:8"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:8"
									},
									"scope": 2156,
									"src": "1026:248:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2157,
							"src": "181:1095:8",
							"usedErrors": []
						}
					],
					"src": "46:1231:8"
				},
				"id": 8
			}
		}
	}
}