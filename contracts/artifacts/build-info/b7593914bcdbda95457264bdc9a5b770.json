{
	"id": "b7593914bcdbda95457264bdc9a5b770",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Multichain.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./interfaces/IMasterEntertainer.sol\";\r\n\r\ncontract Multiu {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 _token;\r\n    IMasterEntertainer _masterEntertainer;\r\n\r\n    struct Stake {\r\n        uint32 VestingDays;\r\n        uint256 TokenBalance;\r\n    }\r\n\r\n    \r\n    constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r\n        _token = token;\r\n        _masterEntertainer = masterEntertainer;\r\n    }\r\n\r\n    function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r\n        uint256 tokenBalance = 0;\r\n        for (uint i = 0; i < userAddresses.length; i++) \r\n        {\r\n            tokenBalance = tokenBalance.add(_token.balanceOf(userAddresses[i]));\r\n        }\r\n        return tokenBalance;\r\n    }\r\n\r\n    function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r\n        Stake[] memory stakes = new Stake[](vestingDays.length);\r\n        for (uint i = 0; i < vestingDays.length; i++) \r\n        {\r\n            stakes[i].VestingDays = vestingDays[i];\r\n            stakes[i].TokenBalance = 0;\r\n        }\r\n        for (uint i = 0; i < userAddresses.length; i++) \r\n        {\r\n            for (uint z = 0; z < vestingDays.length; z++) \r\n            {\r\n                stakes[z].TokenBalance = stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z]));\r\n            }\r\n        }\r\n        return stakes;\r\n    }\r\n    \r\n\r\n}"
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.7;\n\ninterface IMasterEntertainer {\n    function updatePrice() external; \n    function getBalanceOf(address _user, uint256 _vesting) external view returns (uint256);\n    function depositForUser(uint256 _pid, uint256 _amount, address _user) external;\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Multichain.sol": {
				"Multiu": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "contract IMasterEntertainer",
									"name": "masterEntertainer",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "vestingDays",
									"type": "uint32[]"
								},
								{
									"internalType": "address[]",
									"name": "userAddresses",
									"type": "address[]"
								}
							],
							"name": "GetStakedBalance",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint32",
											"name": "VestingDays",
											"type": "uint32"
										},
										{
											"internalType": "uint256",
											"name": "TokenBalance",
											"type": "uint256"
										}
									],
									"internalType": "struct Multiu.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "userAddresses",
									"type": "address[]"
								}
							],
							"name": "getTokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Multichain.sol\":336:1783  contract Multiu {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Multichain.sol\":587:733  constructor(IERC20 token, IMasterEntertainer masterEntertainer) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Multichain.sol\":662:668  _token */\n  0x00\n    /* \"contracts/Multichain.sol\":662:676  _token = token */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/Multichain.sol\":687:725  _masterEntertainer = masterEntertainer */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Multichain.sol\":336:1783  contract Multiu {\r... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:456   */\ntag_3:\n    /* \"#utility.yul\":134:140   */\n  0x00\n    /* \"#utility.yul\":142:148   */\n  dup1\n    /* \"#utility.yul\":195:197   */\n  0x40\n    /* \"#utility.yul\":183:192   */\n  dup4\n    /* \"#utility.yul\":174:181   */\n  dup6\n    /* \"#utility.yul\":170:193   */\n  sub\n    /* \"#utility.yul\":166:198   */\n  slt\n    /* \"#utility.yul\":163:215   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":211:212   */\n  0x00\n    /* \"#utility.yul\":208:209   */\n  dup1\n    /* \"#utility.yul\":201:213   */\n  revert\n    /* \"#utility.yul\":163:215   */\ntag_9:\n    /* \"#utility.yul\":243:252   */\n  dup3\n    /* \"#utility.yul\":237:253   */\n  mload\n    /* \"#utility.yul\":262:301   */\n  tag_10\n    /* \"#utility.yul\":295:300   */\n  dup2\n    /* \"#utility.yul\":262:301   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":370:372   */\n  0x20\n    /* \"#utility.yul\":355:373   */\n  dup5\n  add\n    /* \"#utility.yul\":349:374   */\n  mload\n    /* \"#utility.yul\":320:325   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":383:424   */\n  tag_12\n    /* \"#utility.yul\":349:374   */\n  dup2\n    /* \"#utility.yul\":383:424   */\n  tag_11\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":443:450   */\n  dup1\n    /* \"#utility.yul\":433:450   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:456   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":461:600   */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":544:575   */\n  dup2\n  and\n    /* \"#utility.yul\":534:576   */\n  dup2\n  eq\n    /* \"#utility.yul\":524:594   */\n  tag_14\n  jumpi\n    /* \"#utility.yul\":590:591   */\n  0x00\n    /* \"#utility.yul\":587:588   */\n  dup1\n    /* \"#utility.yul\":580:592   */\n  revert\n    /* \"#utility.yul\":524:594   */\ntag_14:\n    /* \"#utility.yul\":461:600   */\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Multichain.sol\":336:1783  contract Multiu {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Multichain.sol\":336:1783  contract Multiu {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a5f75b6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77969091\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Multichain.sol\":741:1064  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":4088:4113   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x20\n        /* \"#utility.yul\":4061:4079   */\n      add\n        /* \"contracts/Multichain.sol\":741:1064  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Multichain.sol\":1072:1772  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n        /* \"contracts/Multichain.sol\":741:1064  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n    tag_8:\n        /* \"contracts/Multichain.sol\":820:827  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Multichain.sol\":875:1027  for (uint i = 0; i < userAddresses.length; i++) \r... */\n    tag_18:\n        /* \"contracts/Multichain.sol\":896:909  userAddresses */\n      dup4\n        /* \"contracts/Multichain.sol\":896:916  userAddresses.length */\n      mload\n        /* \"contracts/Multichain.sol\":892:893  i */\n      dup2\n        /* \"contracts/Multichain.sol\":892:916  i < userAddresses.length */\n      lt\n        /* \"contracts/Multichain.sol\":875:1027  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/Multichain.sol\":980:986  _token */\n      sload(0x00)\n        /* \"contracts/Multichain.sol\":997:1013  userAddresses[i] */\n      dup5\n      mload\n        /* \"contracts/Multichain.sol\":963:1015  tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      tag_21\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Multichain.sol\":980:986  _token */\n      and\n      swap1\n        /* \"contracts/Multichain.sol\":980:996  _token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/Multichain.sol\":997:1010  userAddresses */\n      dup8\n      swap1\n        /* \"contracts/Multichain.sol\":1011:1012  i */\n      dup6\n      swap1\n        /* \"contracts/Multichain.sol\":997:1013  userAddresses[i] */\n      dup2\n      lt\n      tag_23\n      jumpi\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":980:1014  _token.balanceOf(userAddresses[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2799:2831   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2781:2832   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2769:2771   */\n      0x20\n        /* \"#utility.yul\":2754:2772   */\n      add\n      swap1\n        /* \"#utility.yul\":2635:2838   */\n      jump\n        /* \"contracts/Multichain.sol\":980:1014  _token.balanceOf(userAddresses[i]) */\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/Multichain.sol\":963:975  tokenBalance */\n      dup4\n      swap1\n        /* \"contracts/Multichain.sol\":963:979  tokenBalance.add */\n      tag_32\n        /* \"contracts/Multichain.sol\":963:1015  tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/Multichain.sol\":948:1015  tokenBalance = tokenBalance.add(_token.balanceOf(userAddresses[i])) */\n      swap2\n      pop\n        /* \"contracts/Multichain.sol\":918:921  i++ */\n      dup1\n      tag_33\n      dup2\n      tag_34\n      jump\t// in\n    tag_33:\n      swap2\n      pop\n      pop\n        /* \"contracts/Multichain.sol\":875:1027  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"contracts/Multichain.sol\":1044:1056  tokenBalance */\n      swap3\n        /* \"contracts/Multichain.sol\":741:1064  function getTokenBalanceOf(address[] memory userAddresses) public view returns(uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Multichain.sol\":1072:1772  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n    tag_14:\n        /* \"contracts/Multichain.sol\":1179:1193  Stake[] memory */\n      0x60\n        /* \"contracts/Multichain.sol\":1206:1227  Stake[] memory stakes */\n      0x00\n        /* \"contracts/Multichain.sol\":1242:1253  vestingDays */\n      dup4\n        /* \"contracts/Multichain.sol\":1242:1260  vestingDays.length */\n      mload\n        /* \"contracts/Multichain.sol\":1230:1261  new Stake[](vestingDays.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup2\n      0x20\n      add\n    tag_40:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_40\n      jumpi\n      swap1\n      pop\n    tag_39:\n      pop\n        /* \"contracts/Multichain.sol\":1206:1261  Stake[] memory stakes = new Stake[](vestingDays.length) */\n      swap1\n      pop\n        /* \"contracts/Multichain.sol\":1277:1283  uint i */\n      0x00\n        /* \"contracts/Multichain.sol\":1272:1434  for (uint i = 0; i < vestingDays.length; i++) \r... */\n    tag_43:\n        /* \"contracts/Multichain.sol\":1293:1304  vestingDays */\n      dup5\n        /* \"contracts/Multichain.sol\":1293:1311  vestingDays.length */\n      mload\n        /* \"contracts/Multichain.sol\":1289:1290  i */\n      dup2\n        /* \"contracts/Multichain.sol\":1289:1311  i < vestingDays.length */\n      lt\n        /* \"contracts/Multichain.sol\":1272:1434  for (uint i = 0; i < vestingDays.length; i++) \r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"contracts/Multichain.sol\":1367:1378  vestingDays */\n      dup5\n        /* \"contracts/Multichain.sol\":1379:1380  i */\n      dup2\n        /* \"contracts/Multichain.sol\":1367:1381  vestingDays[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_47\n      tag_24\n      jump\t// in\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1343:1349  stakes */\n      dup3\n        /* \"contracts/Multichain.sol\":1350:1351  i */\n      dup3\n        /* \"contracts/Multichain.sol\":1343:1352  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_49\n      tag_24\n      jump\t// in\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1343:1364  stakes[i].VestingDays */\n      0x00\n      add\n        /* \"contracts/Multichain.sol\":1343:1381  stakes[i].VestingDays = vestingDays[i] */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Multichain.sol\":1421:1422  0 */\n      0x00\n        /* \"contracts/Multichain.sol\":1396:1402  stakes */\n      dup3\n        /* \"contracts/Multichain.sol\":1403:1404  i */\n      dup3\n        /* \"contracts/Multichain.sol\":1396:1405  stakes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_51\n      tag_24\n      jump\t// in\n    tag_51:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1396:1418  stakes[i].TokenBalance */\n      add\n        /* \"contracts/Multichain.sol\":1396:1422  stakes[i].TokenBalance = 0 */\n      mstore\n        /* \"contracts/Multichain.sol\":1313:1316  i++ */\n      dup1\n      tag_52\n      dup2\n      tag_34\n      jump\t// in\n    tag_52:\n      swap2\n      pop\n      pop\n        /* \"contracts/Multichain.sol\":1272:1434  for (uint i = 0; i < vestingDays.length; i++) \r... */\n      jump(tag_43)\n    tag_44:\n      pop\n        /* \"contracts/Multichain.sol\":1449:1455  uint i */\n      0x00\n        /* \"contracts/Multichain.sol\":1444:1741  for (uint i = 0; i < userAddresses.length; i++) \r... */\n    tag_53:\n        /* \"contracts/Multichain.sol\":1465:1478  userAddresses */\n      dup4\n        /* \"contracts/Multichain.sol\":1465:1485  userAddresses.length */\n      mload\n        /* \"contracts/Multichain.sol\":1461:1462  i */\n      dup2\n        /* \"contracts/Multichain.sol\":1461:1485  i < userAddresses.length */\n      lt\n        /* \"contracts/Multichain.sol\":1444:1741  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contracts/Multichain.sol\":1522:1528  uint z */\n      0x00\n        /* \"contracts/Multichain.sol\":1517:1730  for (uint z = 0; z < vestingDays.length; z++) \r... */\n    tag_56:\n        /* \"contracts/Multichain.sol\":1538:1549  vestingDays */\n      dup6\n        /* \"contracts/Multichain.sol\":1538:1556  vestingDays.length */\n      mload\n        /* \"contracts/Multichain.sol\":1534:1535  z */\n      dup2\n        /* \"contracts/Multichain.sol\":1534:1556  z < vestingDays.length */\n      lt\n        /* \"contracts/Multichain.sol\":1517:1730  for (uint z = 0; z < vestingDays.length; z++) \r... */\n      iszero\n      tag_57\n      jumpi\n        /* \"contracts/Multichain.sol\":1648:1666  _masterEntertainer */\n      sload(0x01)\n        /* \"contracts/Multichain.sol\":1680:1696  userAddresses[i] */\n      dup6\n      mload\n        /* \"contracts/Multichain.sol\":1621:1714  stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      tag_59\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Multichain.sol\":1648:1666  _masterEntertainer */\n      and\n      swap1\n        /* \"contracts/Multichain.sol\":1648:1679  _masterEntertainer.getBalanceOf */\n      0x94d45b59\n      swap1\n        /* \"contracts/Multichain.sol\":1680:1693  userAddresses */\n      dup9\n      swap1\n        /* \"contracts/Multichain.sol\":1694:1695  i */\n      dup7\n      swap1\n        /* \"contracts/Multichain.sol\":1680:1696  userAddresses[i] */\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_61\n      tag_24\n      jump\t// in\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1698:1709  vestingDays */\n      dup10\n        /* \"contracts/Multichain.sol\":1710:1711  z */\n      dup6\n        /* \"contracts/Multichain.sol\":1698:1712  vestingDays[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_63\n      tag_24\n      jump\t// in\n    tag_63:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1648:1713  _masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3034:3066   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3016:3067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3115:3125   */\n      0xffffffff\n        /* \"#utility.yul\":3103:3126   */\n      and\n        /* \"#utility.yul\":3098:3100   */\n      0x20\n        /* \"#utility.yul\":3083:3101   */\n      dup3\n      add\n        /* \"#utility.yul\":3076:3127   */\n      mstore\n        /* \"#utility.yul\":3004:3006   */\n      0x40\n        /* \"#utility.yul\":2989:3007   */\n      add\n      swap1\n        /* \"#utility.yul\":2843:3133   */\n      jump\n        /* \"contracts/Multichain.sol\":1648:1713  _masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z]) */\n    tag_64:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n        /* \"contracts/Multichain.sol\":1621:1627  stakes */\n      dup5\n        /* \"contracts/Multichain.sol\":1628:1629  z */\n      dup4\n        /* \"contracts/Multichain.sol\":1621:1630  stakes[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_71\n      jumpi\n      tag_71\n      tag_24\n      jump\t// in\n    tag_71:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1621:1643  stakes[z].TokenBalance */\n      0x20\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1621:1647  stakes[z].TokenBalance.add */\n      tag_32\n      swap1\n        /* \"contracts/Multichain.sol\":1621:1714  stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/Multichain.sol\":1596:1602  stakes */\n      dup4\n        /* \"contracts/Multichain.sol\":1603:1604  z */\n      dup3\n        /* \"contracts/Multichain.sol\":1596:1605  stakes[z] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_73\n      tag_24\n      jump\t// in\n    tag_73:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/Multichain.sol\":1596:1618  stakes[z].TokenBalance */\n      add\n        /* \"contracts/Multichain.sol\":1596:1714  stakes[z].TokenBalance = stakes[z].TokenBalance.add(_masterEntertainer.getBalanceOf(userAddresses[i], vestingDays[z])) */\n      mstore\n        /* \"contracts/Multichain.sol\":1558:1561  z++ */\n      dup1\n      tag_74\n      dup2\n      tag_34\n      jump\t// in\n    tag_74:\n      swap2\n      pop\n      pop\n        /* \"contracts/Multichain.sol\":1517:1730  for (uint z = 0; z < vestingDays.length; z++) \r... */\n      jump(tag_56)\n    tag_57:\n      pop\n        /* \"contracts/Multichain.sol\":1487:1490  i++ */\n      dup1\n      tag_75\n      dup2\n      tag_34\n      jump\t// in\n    tag_75:\n      swap2\n      pop\n      pop\n        /* \"contracts/Multichain.sol\":1444:1741  for (uint i = 0; i < userAddresses.length; i++) \r... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"contracts/Multichain.sol\":1758:1764  stakes */\n      swap4\n        /* \"contracts/Multichain.sol\":1072:1772  function GetStakedBalance(uint32[] memory vestingDays, address[] memory userAddresses) public view returns(Stake[] memory) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_77\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2760:2761  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2757  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2749:2761  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:828   */\n    tag_80:\n        /* \"#utility.yul\":68:73   */\n      0x00\n        /* \"#utility.yul\":121:124   */\n      dup3\n        /* \"#utility.yul\":114:118   */\n      0x1f\n        /* \"#utility.yul\":106:112   */\n      dup4\n        /* \"#utility.yul\":102:119   */\n      add\n        /* \"#utility.yul\":98:125   */\n      slt\n        /* \"#utility.yul\":88:143   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":136:137   */\n      dup1\n        /* \"#utility.yul\":129:141   */\n      revert\n        /* \"#utility.yul\":88:143   */\n    tag_82:\n        /* \"#utility.yul\":175:181   */\n      dup2\n        /* \"#utility.yul\":162:182   */\n      calldataload\n        /* \"#utility.yul\":201:205   */\n      0x20\n        /* \"#utility.yul\":225:285   */\n      tag_83\n        /* \"#utility.yul\":241:284   */\n      tag_84\n        /* \"#utility.yul\":281:283   */\n      dup4\n        /* \"#utility.yul\":241:284   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":225:285   */\n      tag_86\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":307:310   */\n      dup1\n        /* \"#utility.yul\":331:333   */\n      dup4\n        /* \"#utility.yul\":326:329   */\n      dup3\n        /* \"#utility.yul\":319:334   */\n      mstore\n        /* \"#utility.yul\":359:361   */\n      dup3\n        /* \"#utility.yul\":354:357   */\n      dup3\n        /* \"#utility.yul\":350:362   */\n      add\n        /* \"#utility.yul\":343:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":394:396   */\n      dup3\n        /* \"#utility.yul\":386:392   */\n      dup7\n        /* \"#utility.yul\":382:397   */\n      add\n        /* \"#utility.yul\":446:449   */\n      dup8\n        /* \"#utility.yul\":441:443   */\n      dup5\n        /* \"#utility.yul\":435:437   */\n      dup7\n        /* \"#utility.yul\":432:433   */\n      0x05\n        /* \"#utility.yul\":428:438   */\n      shl\n        /* \"#utility.yul\":420:426   */\n      dup10\n        /* \"#utility.yul\":416:439   */\n      add\n        /* \"#utility.yul\":412:444   */\n      add\n        /* \"#utility.yul\":409:450   */\n      gt\n        /* \"#utility.yul\":406:467   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":463:464   */\n      0x00\n        /* \"#utility.yul\":460:461   */\n      dup1\n        /* \"#utility.yul\":453:465   */\n      revert\n        /* \"#utility.yul\":406:467   */\n    tag_87:\n        /* \"#utility.yul\":485:486   */\n      0x00\n        /* \"#utility.yul\":506:507   */\n      dup1\n        /* \"#utility.yul\":516:799   */\n    tag_88:\n        /* \"#utility.yul\":532:534   */\n      dup7\n        /* \"#utility.yul\":527:530   */\n      dup2\n        /* \"#utility.yul\":524:535   */\n      lt\n        /* \"#utility.yul\":516:799   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":594:611   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":644:675   */\n      dup2\n      and\n        /* \"#utility.yul\":634:676   */\n      dup2\n      eq\n        /* \"#utility.yul\":624:694   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":690:691   */\n      dup3\n        /* \"#utility.yul\":687:688   */\n      dup4\n        /* \"#utility.yul\":680:692   */\n      revert\n        /* \"#utility.yul\":624:694   */\n    tag_91:\n        /* \"#utility.yul\":707:725   */\n      dup6\n      mstore\n        /* \"#utility.yul\":745:757   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":777:789   */\n      swap2\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":554:555   */\n      0x01\n        /* \"#utility.yul\":545:556   */\n      add\n        /* \"#utility.yul\":516:799   */\n      jump(tag_88)\n    tag_90:\n      pop\n        /* \"#utility.yul\":817:822   */\n      swap2\n      swap9\n        /* \"#utility.yul\":14:828   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":833:1181   */\n    tag_7:\n        /* \"#utility.yul\":917:923   */\n      0x00\n        /* \"#utility.yul\":970:972   */\n      0x20\n        /* \"#utility.yul\":958:967   */\n      dup3\n        /* \"#utility.yul\":949:956   */\n      dup5\n        /* \"#utility.yul\":945:968   */\n      sub\n        /* \"#utility.yul\":941:973   */\n      slt\n        /* \"#utility.yul\":938:990   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":986:987   */\n      0x00\n        /* \"#utility.yul\":983:984   */\n      dup1\n        /* \"#utility.yul\":976:988   */\n      revert\n        /* \"#utility.yul\":938:990   */\n    tag_93:\n        /* \"#utility.yul\":1026:1035   */\n      dup2\n        /* \"#utility.yul\":1013:1036   */\n      calldataload\n        /* \"#utility.yul\":1059:1077   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1051:1057   */\n      dup2\n        /* \"#utility.yul\":1048:1078   */\n      gt\n        /* \"#utility.yul\":1045:1095   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1091:1092   */\n      0x00\n        /* \"#utility.yul\":1088:1089   */\n      dup1\n        /* \"#utility.yul\":1081:1093   */\n      revert\n        /* \"#utility.yul\":1045:1095   */\n    tag_94:\n        /* \"#utility.yul\":1114:1175   */\n      tag_95\n        /* \"#utility.yul\":1167:1174   */\n      dup5\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1147:1156   */\n      dup6\n        /* \"#utility.yul\":1143:1165   */\n      add\n        /* \"#utility.yul\":1114:1175   */\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1104:1175   */\n      swap5\n        /* \"#utility.yul\":833:1181   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1186:2441   */\n    tag_13:\n        /* \"#utility.yul\":1303:1309   */\n      0x00\n        /* \"#utility.yul\":1311:1317   */\n      dup1\n        /* \"#utility.yul\":1364:1366   */\n      0x40\n        /* \"#utility.yul\":1352:1361   */\n      dup4\n        /* \"#utility.yul\":1343:1350   */\n      dup6\n        /* \"#utility.yul\":1339:1362   */\n      sub\n        /* \"#utility.yul\":1335:1367   */\n      slt\n        /* \"#utility.yul\":1332:1384   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1377:1378   */\n      dup1\n        /* \"#utility.yul\":1370:1382   */\n      revert\n        /* \"#utility.yul\":1332:1384   */\n    tag_97:\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1407:1430   */\n      calldataload\n        /* \"#utility.yul\":1449:1467   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1490:1492   */\n      dup1\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1479:1493   */\n      gt\n        /* \"#utility.yul\":1476:1510   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1476:1510   */\n    tag_98:\n        /* \"#utility.yul\":1544:1550   */\n      dup2\n        /* \"#utility.yul\":1533:1542   */\n      dup6\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1519:1551   */\n      swap2\n      pop\n        /* \"#utility.yul\":1589:1596   */\n      dup6\n        /* \"#utility.yul\":1582:1586   */\n      0x1f\n        /* \"#utility.yul\":1578:1580   */\n      dup4\n        /* \"#utility.yul\":1574:1587   */\n      add\n        /* \"#utility.yul\":1570:1597   */\n      slt\n        /* \"#utility.yul\":1560:1615   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1608:1609   */\n      dup1\n        /* \"#utility.yul\":1601:1613   */\n      revert\n        /* \"#utility.yul\":1560:1615   */\n    tag_99:\n        /* \"#utility.yul\":1647:1649   */\n      dup2\n        /* \"#utility.yul\":1634:1650   */\n      calldataload\n        /* \"#utility.yul\":1669:1673   */\n      0x20\n        /* \"#utility.yul\":1693:1753   */\n      tag_100\n        /* \"#utility.yul\":1709:1752   */\n      tag_84\n        /* \"#utility.yul\":1749:1751   */\n      dup4\n        /* \"#utility.yul\":1709:1752   */\n      tag_85\n      jump\t// in\n        /* \"#utility.yul\":1693:1753   */\n    tag_100:\n        /* \"#utility.yul\":1775:1778   */\n      dup1\n        /* \"#utility.yul\":1799:1801   */\n      dup4\n        /* \"#utility.yul\":1794:1797   */\n      dup3\n        /* \"#utility.yul\":1787:1802   */\n      mstore\n        /* \"#utility.yul\":1827:1829   */\n      dup3\n        /* \"#utility.yul\":1822:1825   */\n      dup3\n        /* \"#utility.yul\":1818:1830   */\n      add\n        /* \"#utility.yul\":1811:1830   */\n      swap2\n      pop\n        /* \"#utility.yul\":1858:1860   */\n      dup3\n        /* \"#utility.yul\":1854:1856   */\n      dup7\n        /* \"#utility.yul\":1850:1861   */\n      add\n        /* \"#utility.yul\":1906:1913   */\n      dup11\n        /* \"#utility.yul\":1901:1903   */\n      dup5\n        /* \"#utility.yul\":1895:1897   */\n      dup7\n        /* \"#utility.yul\":1892:1893   */\n      0x05\n        /* \"#utility.yul\":1888:1898   */\n      shl\n        /* \"#utility.yul\":1884:1886   */\n      dup10\n        /* \"#utility.yul\":1880:1899   */\n      add\n        /* \"#utility.yul\":1876:1904   */\n      add\n        /* \"#utility.yul\":1873:1914   */\n      gt\n        /* \"#utility.yul\":1870:1931   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      dup1\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1870:1931   */\n    tag_102:\n        /* \"#utility.yul\":1949:1950   */\n      0x00\n        /* \"#utility.yul\":1940:1950   */\n      swap7\n      pop\n        /* \"#utility.yul\":1959:2227   */\n    tag_103:\n        /* \"#utility.yul\":1973:1975   */\n      dup5\n        /* \"#utility.yul\":1970:1971   */\n      dup8\n        /* \"#utility.yul\":1967:1976   */\n      lt\n        /* \"#utility.yul\":1959:2227   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2044:2047   */\n      dup1\n        /* \"#utility.yul\":2031:2048   */\n      calldataload\n        /* \"#utility.yul\":2092:2102   */\n      0xffffffff\n        /* \"#utility.yul\":2085:2090   */\n      dup2\n        /* \"#utility.yul\":2081:2103   */\n      and\n        /* \"#utility.yul\":2074:2079   */\n      dup2\n        /* \"#utility.yul\":2071:2104   */\n      eq\n        /* \"#utility.yul\":2061:2122   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2115:2116   */\n      dup1\n        /* \"#utility.yul\":2108:2120   */\n      revert\n        /* \"#utility.yul\":2061:2122   */\n    tag_106:\n        /* \"#utility.yul\":2135:2153   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1991:1992   */\n      0x01\n        /* \"#utility.yul\":1984:1993   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":2173:2185   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2205:2217   */\n      dup4\n      add\n        /* \"#utility.yul\":1959:2227   */\n      jump(tag_103)\n    tag_105:\n      pop\n        /* \"#utility.yul\":2246:2251   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":2289:2307   */\n      dup7\n      add\n        /* \"#utility.yul\":2276:2308   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2320:2336   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2317:2353   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2349:2350   */\n      0x00\n        /* \"#utility.yul\":2346:2347   */\n      dup1\n        /* \"#utility.yul\":2339:2351   */\n      revert\n        /* \"#utility.yul\":2317:2353   */\n    tag_107:\n      pop\n        /* \"#utility.yul\":2372:2435   */\n      tag_108\n        /* \"#utility.yul\":2427:2434   */\n      dup6\n        /* \"#utility.yul\":2416:2424   */\n      dup3\n        /* \"#utility.yul\":2405:2414   */\n      dup7\n        /* \"#utility.yul\":2401:2425   */\n      add\n        /* \"#utility.yul\":2372:2435   */\n      tag_80\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2362:2435   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1186:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2446:2630   */\n    tag_31:\n        /* \"#utility.yul\":2516:2522   */\n      0x00\n        /* \"#utility.yul\":2569:2571   */\n      0x20\n        /* \"#utility.yul\":2557:2566   */\n      dup3\n        /* \"#utility.yul\":2548:2555   */\n      dup5\n        /* \"#utility.yul\":2544:2567   */\n      sub\n        /* \"#utility.yul\":2540:2572   */\n      slt\n        /* \"#utility.yul\":2537:2589   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2582:2583   */\n      dup1\n        /* \"#utility.yul\":2575:2587   */\n      revert\n        /* \"#utility.yul\":2537:2589   */\n    tag_110:\n      pop\n        /* \"#utility.yul\":2608:2624   */\n      mload\n      swap2\n        /* \"#utility.yul\":2446:2630   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3138:3937   */\n    tag_16:\n        /* \"#utility.yul\":3353:3355   */\n      0x20\n        /* \"#utility.yul\":3405:3426   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3475:3488   */\n      dup3\n      mload\n        /* \"#utility.yul\":3378:3396   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3497:3519   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3324:3328   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3353:3355   */\n      swap1\n        /* \"#utility.yul\":3538:3540   */\n      0x40\n      swap1\n        /* \"#utility.yul\":3556:3574   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3597:3612   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":3324:3328   */\n      dup6\n        /* \"#utility.yul\":3640:3911   */\n    tag_114:\n        /* \"#utility.yul\":3654:3660   */\n      dup3\n        /* \"#utility.yul\":3651:3652   */\n      dup2\n        /* \"#utility.yul\":3648:3661   */\n      lt\n        /* \"#utility.yul\":3640:3911   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":3713:3726   */\n      dup2\n      mload\n        /* \"#utility.yul\":3755:3764   */\n      dup1\n      mload\n        /* \"#utility.yul\":3766:3776   */\n      0xffffffff\n        /* \"#utility.yul\":3751:3777   */\n      and\n        /* \"#utility.yul\":3739:3778   */\n      dup6\n      mstore\n        /* \"#utility.yul\":3818:3829   */\n      dup7\n      add\n        /* \"#utility.yul\":3812:3830   */\n      mload\n        /* \"#utility.yul\":3798:3810   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":3791:3831   */\n      mstore\n        /* \"#utility.yul\":3851:3863   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3886:3901   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3676:3677   */\n      0x01\n        /* \"#utility.yul\":3669:3678   */\n      add\n        /* \"#utility.yul\":3640:3911   */\n      jump(tag_114)\n    tag_116:\n      pop\n        /* \"#utility.yul\":3928:3931   */\n      swap2\n      swap8\n        /* \"#utility.yul\":3138:3937   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4124:4399   */\n    tag_86:\n        /* \"#utility.yul\":4195:4197   */\n      0x40\n        /* \"#utility.yul\":4189:4198   */\n      mload\n        /* \"#utility.yul\":4260:4262   */\n      0x1f\n        /* \"#utility.yul\":4241:4254   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4237:4264   */\n      and\n        /* \"#utility.yul\":4225:4265   */\n      dup2\n      add\n        /* \"#utility.yul\":4295:4313   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4280:4314   */\n      dup2\n      gt\n        /* \"#utility.yul\":4316:4338   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4277:4339   */\n      or\n        /* \"#utility.yul\":4274:4362   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4342:4360   */\n      tag_120\n      tag_38\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4378:4380   */\n      0x40\n        /* \"#utility.yul\":4371:4393   */\n      mstore\n        /* \"#utility.yul\":4124:4399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4404:4587   */\n    tag_85:\n        /* \"#utility.yul\":4464:4468   */\n      0x00\n        /* \"#utility.yul\":4497:4515   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4489:4495   */\n      dup3\n        /* \"#utility.yul\":4486:4516   */\n      gt\n        /* \"#utility.yul\":4483:4539   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":4519:4537   */\n      tag_123\n      tag_38\n      jump\t// in\n    tag_123:\n      pop\n        /* \"#utility.yul\":4564:4565   */\n      0x05\n        /* \"#utility.yul\":4560:4574   */\n      shl\n        /* \"#utility.yul\":4576:4580   */\n      0x20\n        /* \"#utility.yul\":4556:4581   */\n      add\n      swap1\n        /* \"#utility.yul\":4404:4587   */\n      jump\t// out\n        /* \"#utility.yul\":4592:4720   */\n    tag_78:\n        /* \"#utility.yul\":4632:4635   */\n      0x00\n        /* \"#utility.yul\":4663:4664   */\n      dup3\n        /* \"#utility.yul\":4659:4665   */\n      not\n        /* \"#utility.yul\":4656:4657   */\n      dup3\n        /* \"#utility.yul\":4653:4666   */\n      gt\n        /* \"#utility.yul\":4650:4689   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4669:4687   */\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      pop\n        /* \"#utility.yul\":4705:4714   */\n      add\n      swap1\n        /* \"#utility.yul\":4592:4720   */\n      jump\t// out\n        /* \"#utility.yul\":4725:4860   */\n    tag_34:\n        /* \"#utility.yul\":4764:4767   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":4785:4802   */\n      dup3\n      eq\n        /* \"#utility.yul\":4782:4825   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":4805:4823   */\n      tag_130\n      tag_127\n      jump\t// in\n    tag_130:\n      pop\n        /* \"#utility.yul\":4852:4853   */\n      0x01\n        /* \"#utility.yul\":4841:4854   */\n      add\n      swap1\n        /* \"#utility.yul\":4725:4860   */\n      jump\t// out\n        /* \"#utility.yul\":4865:4992   */\n    tag_127:\n        /* \"#utility.yul\":4926:4936   */\n      0x4e487b71\n        /* \"#utility.yul\":4921:4924   */\n      0xe0\n        /* \"#utility.yul\":4917:4937   */\n      shl\n        /* \"#utility.yul\":4914:4915   */\n      0x00\n        /* \"#utility.yul\":4907:4938   */\n      mstore\n        /* \"#utility.yul\":4957:4961   */\n      0x11\n        /* \"#utility.yul\":4954:4955   */\n      0x04\n        /* \"#utility.yul\":4947:4962   */\n      mstore\n        /* \"#utility.yul\":4981:4985   */\n      0x24\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4971:4986   */\n      revert\n        /* \"#utility.yul\":4997:5124   */\n    tag_24:\n        /* \"#utility.yul\":5058:5068   */\n      0x4e487b71\n        /* \"#utility.yul\":5053:5056   */\n      0xe0\n        /* \"#utility.yul\":5049:5069   */\n      shl\n        /* \"#utility.yul\":5046:5047   */\n      0x00\n        /* \"#utility.yul\":5039:5070   */\n      mstore\n        /* \"#utility.yul\":5089:5093   */\n      0x32\n        /* \"#utility.yul\":5086:5087   */\n      0x04\n        /* \"#utility.yul\":5079:5094   */\n      mstore\n        /* \"#utility.yul\":5113:5117   */\n      0x24\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5103:5118   */\n      revert\n        /* \"#utility.yul\":5129:5256   */\n    tag_38:\n        /* \"#utility.yul\":5190:5200   */\n      0x4e487b71\n        /* \"#utility.yul\":5185:5188   */\n      0xe0\n        /* \"#utility.yul\":5181:5201   */\n      shl\n        /* \"#utility.yul\":5178:5179   */\n      0x00\n        /* \"#utility.yul\":5171:5202   */\n      mstore\n        /* \"#utility.yul\":5221:5225   */\n      0x41\n        /* \"#utility.yul\":5218:5219   */\n      0x04\n        /* \"#utility.yul\":5211:5226   */\n      mstore\n        /* \"#utility.yul\":5245:5249   */\n      0x24\n        /* \"#utility.yul\":5242:5243   */\n      0x00\n        /* \"#utility.yul\":5235:5250   */\n      revert\n\n    auxdata: 0xa2646970667358221220dffbb94535194e3e76fe2e693ae1d1036e6d9282b8d831036c9f3f3648480ece64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_852": {
									"entryPoint": null,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:602:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "153:303:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "199:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "208:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "201:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "201:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "201:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "174:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "183:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "170:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "170:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "195:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:32:7"
															},
															"nodeType": "YulIf",
															"src": "163:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "224:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "243:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "237:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "228:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "262:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "262:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "310:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "320:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "334:40:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "359:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "370:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "355:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "349:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:25:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "338:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "416:7:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "383:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "433:17:7",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "443:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "111:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "122:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "134:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "142:6:7",
														"type": ""
													}
												],
												"src": "14:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "514:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "578:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "587:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "590:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "580:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "580:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "580:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "537:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "548:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "563:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "568:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "559:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "559:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "572:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "555:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "555:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "544:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "544:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "534:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "534:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:50:7"
															},
															"nodeType": "YulIf",
															"src": "524:70:7"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "503:5:7",
														"type": ""
													}
												],
												"src": "461:139:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$181t_contract$_IMasterEntertainer_$1022_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161078e38038061078e83398101604081905261002f91610060565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6000806040838503121561007357600080fd5b825161007e8161009a565b602084015190925061008f8161009a565b809150509250929050565b6001600160a01b03811681146100af57600080fd5b50565b6106cd806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a5f75b61461003b5780637796909114610061575b600080fd5b61004e610049366004610450565b610081565b6040519081526020015b60405180910390f35b61007461006f36600461048d565b61015f565b6040516100589190610578565b600080805b8351811015610158576000548451610144916001600160a01b0316906370a08231908790859081106100ba576100ba61066b565b60200260200101516040518263ffffffff1660e01b81526004016100ed91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561010557600080fd5b505afa158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d919061055f565b83906103b5565b9150806101508161063a565b915050610086565b5092915050565b60606000835167ffffffffffffffff81111561017d5761017d610681565b6040519080825280602002602001820160405280156101c257816020015b604080518082019091526000808252602082015281526020019060019003908161019b5790505b50905060005b845181101561024f578481815181106101e3576101e361066b565b60200260200101518282815181106101fd576101fd61066b565b60200260200101516000019063ffffffff16908163ffffffff1681525050600082828151811061022f5761022f61066b565b6020908102919091018101510152806102478161063a565b9150506101c8565b5060005b83518110156103ad5760005b855181101561039a576001548551610368916001600160a01b0316906394d45b59908890869081106102935761029361066b565b60200260200101518985815181106102ad576102ad61066b565b60200260200101516040518363ffffffff1660e01b81526004016102ec9291906001600160a01b0392909216825263ffffffff16602082015260400190565b60206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c919061055f565b84838151811061034e5761034e61066b565b6020026020010151602001516103b590919063ffffffff16565b83828151811061037a5761037a61066b565b6020908102919091018101510152806103928161063a565b91505061025f565b50806103a58161063a565b915050610253565b509392505050565b60006103c18284610622565b9392505050565b600082601f8301126103d957600080fd5b813560206103ee6103e9836105fe565b6105cd565b80838252828201915082860187848660051b890101111561040e57600080fd5b6000805b868110156104425782356001600160a01b0381168114610430578283fd5b85529385019391850191600101610412565b509198975050505050505050565b60006020828403121561046257600080fd5b813567ffffffffffffffff81111561047957600080fd5b610485848285016103c8565b949350505050565b600080604083850312156104a057600080fd5b823567ffffffffffffffff808211156104b857600080fd5b818501915085601f8301126104cc57600080fd5b813560206104dc6103e9836105fe565b8083825282820191508286018a848660051b89010111156104fc57600080fd5b600096505b8487101561053157803563ffffffff8116811461051d57600080fd5b835260019690960195918301918301610501565b509650508601359250508082111561054857600080fd5b50610555858286016103c8565b9150509250929050565b60006020828403121561057157600080fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b828110156105c0578151805163ffffffff168552860151868501529284019290850190600101610595565b5091979650505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156105f6576105f6610681565b604052919050565b600067ffffffffffffffff82111561061857610618610681565b5060051b60200190565b6000821982111561063557610635610655565b500190565b600060001982141561064e5761064e610655565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dffbb94535194e3e76fe2e693ae1d1036e6d9282b8d831036c9f3f3648480ece64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x78E CODESIZE SUB DUP1 PUSH2 0x78E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x7E DUP2 PUSH2 0x9A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x8F DUP2 PUSH2 0x9A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x6CD DUP1 PUSH2 0xC1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x77969091 EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x6F CALLDATASIZE PUSH1 0x4 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 SLOAD DUP5 MLOAD PUSH2 0x144 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 DUP8 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xBA JUMPI PUSH2 0xBA PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x150 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH2 0x17D PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x19B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24F JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E3 JUMPI PUSH2 0x1E3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22F JUMPI PUSH2 0x22F PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE DUP1 PUSH2 0x247 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x1 SLOAD DUP6 MLOAD PUSH2 0x368 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x94D45B59 SWAP1 DUP9 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x293 JUMPI PUSH2 0x293 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2AD JUMPI PUSH2 0x2AD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI PUSH2 0x34E PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE DUP1 PUSH2 0x392 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25F JUMP JUMPDEST POP DUP1 PUSH2 0x3A5 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x253 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 DUP5 PUSH2 0x622 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3EE PUSH2 0x3E9 DUP4 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x442 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x430 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x412 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x485 DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4DC PUSH2 0x3E9 DUP4 PUSH2 0x5FE JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP11 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x531 JUMPI DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x501 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 DUP6 DUP3 DUP7 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x595 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x681 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x655 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x655 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xFB 0xB9 GASLIMIT CALLDATALOAD NOT 0x4E RETURNDATACOPY PUSH23 0xFE2E693AE1D1036E6D9282B8D831036C9F3F3648480ECE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:1447:5:-:0;;;587:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;662:6;:14;;-1:-1:-1;;;;;662:14:5;;;-1:-1:-1;;;;;;662:14:5;;;;;;;;687:38;;;;;;;;;;;336:1447;;14:442:7;134:6;142;195:2;183:9;174:7;170:23;166:32;163:52;;;211:1;208;201:12;163:52;243:9;237:16;262:39;295:5;262:39;:::i;:::-;370:2;355:18;;349:25;320:5;;-1:-1:-1;383:41:7;349:25;383:41;:::i;:::-;443:7;433:17;;;14:442;;;;;:::o;461:139::-;-1:-1:-1;;;;;544:31:7;;534:42;;524:70;;590:1;587;580:12;524:70;461:139;:::o;:::-;336:1447:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakedBalance_997": {
									"entryPoint": 351,
									"id": 997,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@add_674": {
									"entryPoint": 949,
									"id": 674,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenBalanceOf_892": {
									"entryPoint": 129,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5258:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:750:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:7"
															},
															"nodeType": "YulIf",
															"src": "88:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "175:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "162:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "191:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "201:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "195:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "214:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "281:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "241:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "225:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "218:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "294:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "307:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "298:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "326:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "331:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "319:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "319:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "354:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "371:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "394:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "375:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "451:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "463:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "453:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "453:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "432:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "435:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "428:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "428:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "416:23:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "441:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "412:32:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "446:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "409:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:41:7"
															},
															"nodeType": "YulIf",
															"src": "406:61:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "485:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "480:1:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "495:12:7",
															"value": {
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "506:1:7"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nodeType": "YulTypedName",
																	"src": "499:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "567:232:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "581:30:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "607:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "594:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "594:17:7"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "585:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "678:16:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "i",
																								"nodeType": "YulIdentifier",
																								"src": "687:1:7"
																							},
																							{
																								"name": "i",
																								"nodeType": "YulIdentifier",
																								"src": "690:1:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "680:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "680:12:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "680:12:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "637:5:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "648:5:7"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "663:3:7",
																													"type": "",
																													"value": "160"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "668:1:7",
																													"type": "",
																													"value": "1"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nodeType": "YulIdentifier",
																												"src": "659:3:7"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "659:11:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "672:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "655:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "655:19:7"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "644:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "644:31:7"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "634:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "634:42:7"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "627:50:7"
																		},
																		"nodeType": "YulIf",
																		"src": "624:70:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "714:3:7"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "719:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:18:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "738:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "754:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "745:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "745:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "770:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "786:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "777:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "777:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "770:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "532:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "524:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:11:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "536:22:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "538:18:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "549:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "554:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "545:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:11:7"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nodeType": "YulIdentifier",
																				"src": "538:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "520:3:7",
																"statements": []
															},
															"src": "516:283:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "808:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "817:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "808:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:7",
														"type": ""
													}
												],
												"src": "14:814:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "928:253:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "974:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "976:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "976:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "976:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "949:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "958:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "970:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "941:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:32:7"
															},
															"nodeType": "YulIf",
															"src": "938:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "999:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1026:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1013:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1003:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1079:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1091:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1081:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1081:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1081:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1051:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1048:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:30:7"
															},
															"nodeType": "YulIf",
															"src": "1045:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1104:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1147:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1158:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1167:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1114:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "894:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "905:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "917:6:7",
														"type": ""
													}
												],
												"src": "833:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1322:1119:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1368:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1377:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1380:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1370:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1370:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1370:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1343:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1352:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1339:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1335:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:32:7"
															},
															"nodeType": "YulIf",
															"src": "1332:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1393:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1407:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1397:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1439:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1449:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1443:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1479:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:14:7"
															},
															"nodeType": "YulIf",
															"src": "1476:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1533:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1544:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1529:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1523:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1599:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1601:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1578:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1582:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1574:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1574:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1589:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:35:7"
															},
															"nodeType": "YulIf",
															"src": "1560:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1624:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1647:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:16:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1628:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1669:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1749:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1709:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1709:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1693:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1686:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1762:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1775:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1766:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1794:3:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1799:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1787:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1811:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1822:3:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1827:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1818:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1839:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1854:2:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1858:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1843:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1915:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1917:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1917:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1884:2:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1892:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1895:2:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1888:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1888:10:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:19:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1901:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:28:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1906:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1873:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:41:7"
															},
															"nodeType": "YulIf",
															"src": "1870:61:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1940:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1949:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1944:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2004:223:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2018:30:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2044:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "2031:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:17:7"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "2022:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2106:16:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2115:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2118:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "2108:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2108:12:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2108:12:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "2074:5:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2085:5:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2092:10:7",
																									"type": "",
																									"value": "0xffffffff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "2081:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2081:22:7"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "2071:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2071:33:7"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "2064:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2064:41:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2061:61:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2142:3:7"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2147:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2135:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2135:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2135:18:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2166:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2177:3:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "2182:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2173:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2173:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2198:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2209:3:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "2214:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2205:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2205:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2198:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1970:1:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1973:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1977:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1979:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1988:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1984:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1979:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1963:3:7",
																"statements": []
															},
															"src": "1959:268:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2236:15:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2246:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2304:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2276:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2264:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2337:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2346:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2349:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2339:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2323:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2333:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2320:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:16:7"
															},
															"nodeType": "YulIf",
															"src": "2317:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2405:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2416:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2427:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2372:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1280:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1291:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1303:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1311:6:7",
														"type": ""
													}
												],
												"src": "1186:1255:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2527:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2548:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:32:7"
															},
															"nodeType": "YulIf",
															"src": "2537:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2598:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2614:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2608:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2493:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2504:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2516:6:7",
														"type": ""
													}
												],
												"src": "2446:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2746:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2758:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2769:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2754:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2746:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2788:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2819:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2824:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2815:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2815:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2828:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2811:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2811:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2781:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2781:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2705:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2716:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2727:4:7",
														"type": ""
													}
												],
												"src": "2635:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:162:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2981:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2993:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2989:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2981:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3023:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3038:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3054:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3059:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3050:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3050:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3063:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3046:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3046:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3034:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3115:10:7",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3076:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2932:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2943:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2951:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2962:4:7",
														"type": ""
													}
												],
												"src": "2843:290:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3333:604:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3343:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3353:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3347:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3364:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3382:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3393:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3368:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3412:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3423:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3405:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3435:17:7",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3446:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3439:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3461:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3475:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3465:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3504:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3512:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:22:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3528:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3538:2:7",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3532:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3549:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3560:9:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3571:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3556:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3556:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3583:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3601:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3609:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3597:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3587:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3621:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3630:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3625:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3689:222:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3703:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3719:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3713:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3713:13:7"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "3707:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3746:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "3761:2:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3755:5:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3755:9:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3766:10:7",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3751:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3751:26:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:39:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3802:3:7"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3807:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3798:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3798:12:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "3822:2:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3826:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3818:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3818:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3812:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3812:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3791:40:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:40:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3844:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3855:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3860:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3851:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3851:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3844:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3876:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3890:6:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3898:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3886:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3876:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3651:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3654:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3648:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3662:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3664:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3673:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3676:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3669:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3669:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3664:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3644:3:7",
																"statements": []
															},
															"src": "3640:271:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3920:11:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3928:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3920:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3302:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3313:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3324:4:7",
														"type": ""
													}
												],
												"src": "3138:799:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4043:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4053:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4053:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4095:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4106:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4012:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4023:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4034:4:7",
														"type": ""
													}
												],
												"src": "3942:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4169:230:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4179:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4189:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4179:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4207:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4229:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "4245:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4251:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4241:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4241:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4260:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4256:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4256:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4237:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4237:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4225:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4211:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4340:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4342:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4342:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4342:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4283:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4295:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4280:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4280:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4319:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4331:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4316:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4277:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:62:7"
															},
															"nodeType": "YulIf",
															"src": "4274:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4382:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4371:22:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4149:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4158:6:7",
														"type": ""
													}
												],
												"src": "4124:275:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:114:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4517:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4519:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4519:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4519:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4489:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4497:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4486:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:30:7"
															},
															"nodeType": "YulIf",
															"src": "4483:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4548:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:1:7",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4567:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4560:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4576:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4556:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:25:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4548:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4453:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4464:4:7",
														"type": ""
													}
												],
												"src": "4404:183:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4640:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4667:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4669:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4669:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4669:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4656:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4663:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4659:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4659:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4653:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:13:7"
															},
															"nodeType": "YulIf",
															"src": "4650:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4698:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4709:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4712:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4623:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4626:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4632:3:7",
														"type": ""
													}
												],
												"src": "4592:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4772:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4803:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4805:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4805:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4805:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4788:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4799:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4785:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:17:7"
															},
															"nodeType": "YulIf",
															"src": "4782:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4834:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4845:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4852:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4834:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4754:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4764:3:7",
														"type": ""
													}
												],
												"src": "4725:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4897:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4914:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4921:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4926:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4907:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4947:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4971:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4971:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4865:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5029:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5046:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5053:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5049:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5039:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5079:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5113:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5103:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4997:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5178:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5185:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5190:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5181:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5171:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5218:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5221:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5211:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5242:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5235:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5129:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, _1) { i_1 := add(i_1, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(i, i) }\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_uint32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n            mstore(dst, value)\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint32__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffff))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630a5f75b61461003b5780637796909114610061575b600080fd5b61004e610049366004610450565b610081565b6040519081526020015b60405180910390f35b61007461006f36600461048d565b61015f565b6040516100589190610578565b600080805b8351811015610158576000548451610144916001600160a01b0316906370a08231908790859081106100ba576100ba61066b565b60200260200101516040518263ffffffff1660e01b81526004016100ed91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561010557600080fd5b505afa158015610119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013d919061055f565b83906103b5565b9150806101508161063a565b915050610086565b5092915050565b60606000835167ffffffffffffffff81111561017d5761017d610681565b6040519080825280602002602001820160405280156101c257816020015b604080518082019091526000808252602082015281526020019060019003908161019b5790505b50905060005b845181101561024f578481815181106101e3576101e361066b565b60200260200101518282815181106101fd576101fd61066b565b60200260200101516000019063ffffffff16908163ffffffff1681525050600082828151811061022f5761022f61066b565b6020908102919091018101510152806102478161063a565b9150506101c8565b5060005b83518110156103ad5760005b855181101561039a576001548551610368916001600160a01b0316906394d45b59908890869081106102935761029361066b565b60200260200101518985815181106102ad576102ad61066b565b60200260200101516040518363ffffffff1660e01b81526004016102ec9291906001600160a01b0392909216825263ffffffff16602082015260400190565b60206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c919061055f565b84838151811061034e5761034e61066b565b6020026020010151602001516103b590919063ffffffff16565b83828151811061037a5761037a61066b565b6020908102919091018101510152806103928161063a565b91505061025f565b50806103a58161063a565b915050610253565b509392505050565b60006103c18284610622565b9392505050565b600082601f8301126103d957600080fd5b813560206103ee6103e9836105fe565b6105cd565b80838252828201915082860187848660051b890101111561040e57600080fd5b6000805b868110156104425782356001600160a01b0381168114610430578283fd5b85529385019391850191600101610412565b509198975050505050505050565b60006020828403121561046257600080fd5b813567ffffffffffffffff81111561047957600080fd5b610485848285016103c8565b949350505050565b600080604083850312156104a057600080fd5b823567ffffffffffffffff808211156104b857600080fd5b818501915085601f8301126104cc57600080fd5b813560206104dc6103e9836105fe565b8083825282820191508286018a848660051b89010111156104fc57600080fd5b600096505b8487101561053157803563ffffffff8116811461051d57600080fd5b835260019690960195918301918301610501565b509650508601359250508082111561054857600080fd5b50610555858286016103c8565b9150509250929050565b60006020828403121561057157600080fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b828110156105c0578151805163ffffffff168552860151868501529284019290850190600101610595565b5091979650505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156105f6576105f6610681565b604052919050565b600067ffffffffffffffff82111561061857610618610681565b5060051b60200190565b6000821982111561063557610635610655565b500190565b600060001982141561064e5761064e610655565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dffbb94535194e3e76fe2e693ae1d1036e6d9282b8d831036c9f3f3648480ece64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5F75B6 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x77969091 EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x6F CALLDATASIZE PUSH1 0x4 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 SLOAD DUP5 MLOAD PUSH2 0x144 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 DUP8 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xBA JUMPI PUSH2 0xBA PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x150 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D JUMPI PUSH2 0x17D PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x19B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x24F JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E3 JUMPI PUSH2 0x1E3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22F JUMPI PUSH2 0x22F PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE DUP1 PUSH2 0x247 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x1 SLOAD DUP6 MLOAD PUSH2 0x368 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x94D45B59 SWAP1 DUP9 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x293 JUMPI PUSH2 0x293 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2AD JUMPI PUSH2 0x2AD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x55F JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x34E JUMPI PUSH2 0x34E PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x37A JUMPI PUSH2 0x37A PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD ADD MSTORE DUP1 PUSH2 0x392 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25F JUMP JUMPDEST POP DUP1 PUSH2 0x3A5 DUP2 PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x253 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 DUP5 PUSH2 0x622 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3EE PUSH2 0x3E9 DUP4 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x442 JUMPI DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x430 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x412 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x485 DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4DC PUSH2 0x3E9 DUP4 PUSH2 0x5FE JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP11 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x531 JUMPI DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x501 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 DUP6 DUP3 DUP7 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x595 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x5F6 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x618 JUMPI PUSH2 0x618 PUSH2 0x681 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x655 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x655 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xFB 0xB9 GASLIMIT CALLDATALOAD NOT 0x4E RETURNDATACOPY PUSH23 0xFE2E693AE1D1036E6D9282B8D831036C9F3F3648480ECE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "336:1447:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:323;;;;;;:::i;:::-;;:::i;:::-;;;4088:25:7;;;4076:2;4061:18;741:323:5;;;;;;;;1072:700;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;741:323::-;820:7;;;875:152;896:13;:20;892:1;:24;875:152;;;980:6;;997:16;;963:52;;-1:-1:-1;;;;;980:6:5;;:16;;997:13;;1011:1;;997:16;;;;;;:::i;:::-;;;;;;;980:34;;;;;;;;;;;;;;-1:-1:-1;;;;;2799:32:7;;;;2781:51;;2769:2;2754:18;;2635:203;980:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;963:12;;:16;:52::i;:::-;948:67;-1:-1:-1;918:3:5;;;;:::i;:::-;;;;875:152;;;-1:-1:-1;1044:12:5;741:323;-1:-1:-1;;741:323:5:o;1072:700::-;1179:14;1206:21;1242:11;:18;1230:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1230:31:5;;;;;;;;;;;;;;;;1206:55;;1277:6;1272:162;1293:11;:18;1289:1;:22;1272:162;;;1367:11;1379:1;1367:14;;;;;;;;:::i;:::-;;;;;;;1343:6;1350:1;1343:9;;;;;;;;:::i;:::-;;;;;;;:21;;:38;;;;;;;;;;;1421:1;1396:6;1403:1;1396:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;:26;1313:3;;;;:::i;:::-;;;;1272:162;;;;1449:6;1444:297;1465:13;:20;1461:1;:24;1444:297;;;1522:6;1517:213;1538:11;:18;1534:1;:22;1517:213;;;1648:18;;1680:16;;1621:93;;-1:-1:-1;;;;;1648:18:5;;:31;;1680:13;;1694:1;;1680:16;;;;;;:::i;:::-;;;;;;;1698:11;1710:1;1698:14;;;;;;;;:::i;:::-;;;;;;;1648:65;;;;;;;;;;;;;;;-1:-1:-1;;;;;3034:32:7;;;;3016:51;;3115:10;3103:23;3098:2;3083:18;;3076:51;3004:2;2989:18;;2843:290;1648:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1621:6;1628:1;1621:9;;;;;;;;:::i;:::-;;;;;;;:22;;;:26;;:93;;;;:::i;:::-;1596:6;1603:1;1596:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;:118;1558:3;;;;:::i;:::-;;;;1517:213;;;-1:-1:-1;1487:3:5;;;;:::i;:::-;;;;1444:297;;;-1:-1:-1;1758:6:5;1072:700;-1:-1:-1;;;1072:700:5:o;2672:96:4:-;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:4:o;14:814:7:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;506;516:283;532:2;527:3;524:11;516:283;;;594:17;;-1:-1:-1;;;;;644:31:7;;634:42;;624:70;;690:1;687;680:12;624:70;707:18;;745:12;;;;777;;;;554:1;545:11;516:283;;;-1:-1:-1;817:5:7;;14:814;-1:-1:-1;;;;;;;;14:814:7:o;833:348::-;917:6;970:2;958:9;949:7;945:23;941:32;938:52;;;986:1;983;976:12;938:52;1026:9;1013:23;1059:18;1051:6;1048:30;1045:50;;;1091:1;1088;1081:12;1045:50;1114:61;1167:7;1158:6;1147:9;1143:22;1114:61;:::i;:::-;1104:71;833:348;-1:-1:-1;;;;833:348:7:o;1186:1255::-;1303:6;1311;1364:2;1352:9;1343:7;1339:23;1335:32;1332:52;;;1380:1;1377;1370:12;1332:52;1420:9;1407:23;1449:18;1490:2;1482:6;1479:14;1476:34;;;1506:1;1503;1496:12;1476:34;1544:6;1533:9;1529:22;1519:32;;1589:7;1582:4;1578:2;1574:13;1570:27;1560:55;;1611:1;1608;1601:12;1560:55;1647:2;1634:16;1669:4;1693:60;1709:43;1749:2;1709:43;:::i;1693:60::-;1775:3;1799:2;1794:3;1787:15;1827:2;1822:3;1818:12;1811:19;;1858:2;1854;1850:11;1906:7;1901:2;1895;1892:1;1888:10;1884:2;1880:19;1876:28;1873:41;1870:61;;;1927:1;1924;1917:12;1870:61;1949:1;1940:10;;1959:268;1973:2;1970:1;1967:9;1959:268;;;2044:3;2031:17;2092:10;2085:5;2081:22;2074:5;2071:33;2061:61;;2118:1;2115;2108:12;2061:61;2135:18;;1991:1;1984:9;;;;;2173:12;;;;2205;;1959:268;;;-1:-1:-1;2246:5:7;-1:-1:-1;;2289:18:7;;2276:32;;-1:-1:-1;;2320:16:7;;;2317:36;;;2349:1;2346;2339:12;2317:36;;2372:63;2427:7;2416:8;2405:9;2401:24;2372:63;:::i;:::-;2362:73;;;1186:1255;;;;;:::o;2446:184::-;2516:6;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;-1:-1:-1;2608:16:7;;2446:184;-1:-1:-1;2446:184:7:o;3138:799::-;3353:2;3405:21;;;3475:13;;3378:18;;;3497:22;;;3324:4;;3353:2;3538;;3556:18;;;;3597:15;;;3324:4;3640:271;3654:6;3651:1;3648:13;3640:271;;;3713:13;;3755:9;;3766:10;3751:26;3739:39;;3818:11;;3812:18;3798:12;;;3791:40;3851:12;;;;3886:15;;;;3676:1;3669:9;3640:271;;;-1:-1:-1;3928:3:7;;3138:799;-1:-1:-1;;;;;;;3138:799:7:o;4124:275::-;4195:2;4189:9;4260:2;4241:13;;-1:-1:-1;;4237:27:7;4225:40;;4295:18;4280:34;;4316:22;;;4277:62;4274:88;;;4342:18;;:::i;:::-;4378:2;4371:22;4124:275;;-1:-1:-1;4124:275:7:o;4404:183::-;4464:4;4497:18;4489:6;4486:30;4483:56;;;4519:18;;:::i;:::-;-1:-1:-1;4564:1:7;4560:14;4576:4;4556:25;;4404:183::o;4592:128::-;4632:3;4663:1;4659:6;4656:1;4653:13;4650:39;;;4669:18;;:::i;:::-;-1:-1:-1;4705:9:7;;4592:128::o;4725:135::-;4764:3;-1:-1:-1;;4785:17:7;;4782:43;;;4805:18;;:::i;:::-;-1:-1:-1;4852:1:7;4841:13;;4725:135::o;4865:127::-;4926:10;4921:3;4917:20;4914:1;4907:31;4957:4;4954:1;4947:15;4981:4;4978:1;4971:15;4997:127;5058:10;5053:3;5049:20;5046:1;5039:31;5089:4;5086:1;5079:15;5113:4;5110:1;5103:15;5129:127;5190:10;5185:3;5181:20;5178:1;5171:31;5221:4;5218:1;5211:15;5245:4;5242:1;5235:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "348200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GetStakedBalance(uint32[],address[])": "infinite",
								"getTokenBalanceOf(address[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 587,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 733,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 662,
									"end": 668,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 676,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 662,
									"end": 676,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 687,
									"end": 725,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 687,
									"end": 725,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 456,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 134,
									"end": 140,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 197,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 192,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 174,
									"end": 181,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 170,
									"end": 193,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 166,
									"end": 198,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 163,
									"end": 215,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 163,
									"end": 215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 163,
									"end": 215,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 211,
									"end": 212,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 209,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 201,
									"end": 213,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 163,
									"end": 215,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 163,
									"end": 215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 243,
									"end": 252,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 237,
									"end": 253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 262,
									"end": 301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 295,
									"end": 300,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 262,
									"end": 301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 262,
									"end": 301,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 262,
									"end": 301,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 262,
									"end": 301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 370,
									"end": 372,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 373,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 355,
									"end": 373,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 349,
									"end": 374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 320,
									"end": 325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 320,
									"end": 325,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 383,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 349,
									"end": 374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 383,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 383,
									"end": 424,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 424,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 383,
									"end": 424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 450,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 433,
									"end": 450,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 433,
									"end": 450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 433,
									"end": 450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 456,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 461,
									"end": 600,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 461,
									"end": 600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 544,
									"end": 575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 544,
									"end": 575,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 534,
									"end": 576,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 534,
									"end": 576,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 524,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 524,
									"end": 594,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 590,
									"end": 591,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 588,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 592,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 524,
									"end": 594,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 524,
									"end": 594,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 461,
									"end": 600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 461,
									"end": 600,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 461,
									"end": 600,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 461,
									"end": 600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 1783,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dffbb94535194e3e76fe2e693ae1d1036e6d9282b8d831036c9f3f3648480ece64736f6c63430008070033",
									".code": [
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "A5F75B6"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "77969091"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 336,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 820,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 896,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 896,
											"end": 916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 892,
											"end": 893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 916,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 986,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 996,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 980,
											"end": 996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1013,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2832,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2838,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 980,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 963,
											"end": 975,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 963,
											"end": 975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 963,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 963,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 918,
											"end": 921,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 918,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 918,
											"end": 921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 918,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 918,
											"end": 921,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 921,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 918,
											"end": 921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 918,
											"end": 921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 918,
											"end": 921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 918,
											"end": 921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 875,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1044,
											"end": 1056,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 741,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1193,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1206,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1253,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1304,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1311,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1378,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1485,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1549,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1556,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "94D45B59"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3067,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3103,
											"end": 3126,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3127,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 3133,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1648,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1643,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1621,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1621,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1517,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1444,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1772,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 828,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 14,
											"end": 828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 68,
											"end": 73,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 114,
											"end": 118,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 106,
											"end": 112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 98,
											"end": 125,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 129,
											"end": 141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 143,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 175,
											"end": 181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 162,
											"end": 182,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 281,
											"end": 283,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 241,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 241,
											"end": 284,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 225,
											"end": 285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 331,
											"end": 333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 319,
											"end": 334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 350,
											"end": 362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 343,
											"end": 362,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 343,
											"end": 362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 394,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 382,
											"end": 397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 446,
											"end": 449,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 435,
											"end": 437,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 438,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 416,
											"end": 439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 412,
											"end": 444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 409,
											"end": 450,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 467,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 463,
											"end": 464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 461,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 465,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 516,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 516,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 532,
											"end": 534,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 527,
											"end": 530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 524,
											"end": 535,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 516,
											"end": 799,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 516,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 516,
											"end": 799,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 594,
											"end": 611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 594,
											"end": 611,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 644,
											"end": 675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 634,
											"end": 676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 634,
											"end": 676,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 690,
											"end": 691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 687,
											"end": 688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 680,
											"end": 692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 707,
											"end": 725,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 707,
											"end": 725,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 745,
											"end": 757,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 745,
											"end": 757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 757,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 777,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 789,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 777,
											"end": 789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 777,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 516,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 516,
											"end": 799,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 516,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 516,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 822,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 14,
											"end": 828,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 828,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 1181,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 833,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 972,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 949,
											"end": 956,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 945,
											"end": 968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 941,
											"end": 973,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 938,
											"end": 990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 938,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 938,
											"end": 990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 976,
											"end": 988,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 938,
											"end": 990,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 938,
											"end": 990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1078,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1095,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1045,
											"end": 1095,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1095,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1045,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1147,
											"end": 1156,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1114,
											"end": 1175,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1175,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1114,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 833,
											"end": 1181,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 833,
											"end": 1181,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1362,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1367,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1384,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1332,
											"end": 1384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1384,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1332,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1596,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1560,
											"end": 1615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1615,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1560,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1709,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1749,
											"end": 1751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1709,
											"end": 1752,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1693,
											"end": 1753,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1693,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1913,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1914,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1931,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1870,
											"end": 1931,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1931,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1870,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2048,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2103,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2104,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2061,
											"end": 2122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2122,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2061,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1959,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2307,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2308,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2308,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2336,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2414,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2425,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2372,
											"end": 2435,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2372,
											"end": 2435,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2372,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 2441,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2446,
											"end": 2630,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2446,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2572,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2537,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2446,
											"end": 2630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2446,
											"end": 2630,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3138,
											"end": 3937,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3138,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3612,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3612,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3661,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3726,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3776,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3829,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3830,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3677,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3640,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3937,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3937,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4124,
											"end": 4399,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4124,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4264,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4314,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4338,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4339,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4274,
											"end": 4362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4371,
											"end": 4393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4399,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4404,
											"end": 4587,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4404,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4539,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4483,
											"end": 4539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4580,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4587,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4592,
											"end": 4720,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4592,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4653,
											"end": 4666,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4650,
											"end": 4689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4705,
											"end": 4714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4720,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4725,
											"end": 4860,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4725,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4764,
											"end": 4767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4785,
											"end": 4802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4782,
											"end": 4825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4841,
											"end": 4854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4860,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4865,
											"end": 4992,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4865,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4921,
											"end": 4924,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4917,
											"end": 4937,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4947,
											"end": 4962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4986,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 5124,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5068,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5053,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5049,
											"end": 5069,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5070,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5079,
											"end": 5094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5117,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5118,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 5129,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5200,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5185,
											"end": 5188,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5181,
											"end": 5201,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5218,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5211,
											"end": 5226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5245,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakedBalance(uint32[],address[])": "77969091",
							"getTokenBalanceOf(address[])": "0a5f75b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IMasterEntertainer\",\"name\":\"masterEntertainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"vestingDays\",\"type\":\"uint32[]\"},{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"GetStakedBalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"VestingDays\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"TokenBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Multiu.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multichain.sol\":\"Multiu\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/Multichain.sol\":{\"keccak256\":\"0x47a896c1f06477b79bc19995d3b213c70fcead8f0193c7b768fcf1eddffa0a18\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a3dad5e827129dc39e2197925c111e8182937da76858cde28bd6b5f6a571905\",\"dweb:/ipfs/QmY5xgxVCxaVo9oeYMUyueQz2KNj5mZB4tHECSEmcFNtsh\"]},\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 826,
								"contract": "contracts/Multichain.sol:Multiu",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)181"
							},
							{
								"astId": 829,
								"contract": "contracts/Multichain.sol:Multiu",
								"label": "_masterEntertainer",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IMasterEntertainer)1022"
							}
						],
						"types": {
							"t_contract(IERC20)181": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IMasterEntertainer)1022": {
								"encoding": "inplace",
								"label": "contract IMasterEntertainer",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"IMasterEntertainer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "depositForUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_vesting",
									"type": "uint256"
								}
							],
							"name": "getBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForUser(uint256,uint256,address)": "a3f30d27",
							"getBalanceOf(address,uint256)": "94d45b59",
							"updatePrice()": "673a7e28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"depositForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vesting\",\"type\":\"uint256\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterEntertainer.sol\":\"IMasterEntertainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMasterEntertainer.sol\":{\"keccak256\":\"0x57410ab5f0cd0316d410f9954abd849a54c1c400f2ab4d7fa00db81e2ced12e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://04dda567ff1ec7a4f77f22d5e63b31f0cad7ce9c61fd161c071f6251a6daba09\",\"dweb:/ipfs/QmaBkBj8APhDTX7dirQRdxY8aNWY2N6sWuAQbjGSYTtaAq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							498
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 499,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 498,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								498
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							181
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 181,
							"linearizedBaseContracts": [
								181
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 181,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 181,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 181,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 181,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 181,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2149:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2200:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2239:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:1"
									},
									"scope": 181,
									"src": "2118:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 171,
									"name": "Transfer",
									"nameLocation": "2420:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2429:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2451:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:1"
									},
									"src": "2414:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 180,
									"name": "Approval",
									"nameLocation": "2651:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2660:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2683:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:1"
									},
									"src": "2645:78:1"
								}
							],
							"scope": 182,
							"src": "129:2596:1",
							"usedErrors": []
						}
					],
					"src": "33:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 184,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "134:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "784:311:2",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 200,
														"src": "981:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:2",
														"valueSize": 1
													},
													{
														"declaration": 193,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:2",
														"valueSize": 1
													}
												],
												"id": 195,
												"nodeType": "InlineAssembly",
												"src": "1003:61:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 196,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1080:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 191,
												"id": 199,
												"nodeType": "Return",
												"src": "1073:15:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 477,
									"src": "718:377:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2083:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 212,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 210,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 215,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2126:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:2"
											},
											{
												"assignments": [
													221,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "2178:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 222,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2196:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 224,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2218:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2247:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2031:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2058:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:2"
									},
									"scope": 477,
									"src": "2012:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3155:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "3185:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3193:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 245,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															272
														],
														"referencedDeclaration": 272,
														"src": "3172:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "3165:67:2"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3088:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3104:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3141:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:2"
									},
									"scope": 477,
									"src": "3066:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "3608:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3647:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3655:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 268,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "3664:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 264,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "3625:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 263,
												"id": 270,
												"nodeType": "Return",
												"src": "3618:59:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3492:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3516:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3543:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3594:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:2"
									},
									"scope": 477,
									"src": "3461:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4189:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 285,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "4228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4236:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4242:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 284,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															342
														],
														"referencedDeclaration": 342,
														"src": "4206:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 290,
												"nodeType": "Return",
												"src": "4199:94:2"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4086:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4137:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4175:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:2"
									},
									"scope": 477,
									"src": "4046:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4727:321:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 309,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 307,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4770:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 319,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "4847:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 318,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "4836:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:2"
											},
											{
												"assignments": [
													325,
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4900:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 324,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "4914:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"id": 332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4967:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 328,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "4941:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 330,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4960:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5007:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 337,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5016:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 338,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5028:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 335,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "4989:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 340,
												"nodeType": "Return",
												"src": "4982:59:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4588:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4612:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4639:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4662:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4713:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:2"
									},
									"scope": 477,
									"src": "4548:500:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5325:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5361:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5369:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 352,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															359,
															394
														],
														"referencedDeclaration": 394,
														"src": "5342:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "5335:80:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5253:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5269:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5311:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:2"
									},
									"scope": 477,
									"src": "5225:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "5764:229:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 373,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5793:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 372,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "5782:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:2"
											},
											{
												"assignments": [
													379,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5853:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "5867:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 380,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5912:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 389,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "5961:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5973:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5934:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 370,
												"id": 392,
												"nodeType": "Return",
												"src": "5927:59:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5643:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5667:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5694:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "5750:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:2"
									},
									"scope": 477,
									"src": "5606:387:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "6269:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "6307:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "6315:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 404,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															411,
															446
														],
														"referencedDeclaration": 446,
														"src": "6286:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "6279:84:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6202:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6218:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "6255:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:2"
									},
									"scope": 477,
									"src": "6172:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "6711:233:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 425,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "6740:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 424,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6729:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:2"
											},
											{
												"assignments": [
													431,
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6802:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "6816:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 432,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "6863:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6843:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 441,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "6912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 442,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "6924:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 439,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6885:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 444,
												"nodeType": "Return",
												"src": "6878:59:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6595:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6619:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6646:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "6697:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:2"
									},
									"scope": 477,
									"src": "6556:388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7110:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7181:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7265:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "7573:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "7598:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7261:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7288:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7120:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7133:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7154:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7147:17:2"
														}
													]
												}
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6986:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7008:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7041:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7096:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:2"
									},
									"scope": 477,
									"src": "6950:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 478,
							"src": "126:7518:2",
							"usedErrors": []
						}
					],
					"src": "33:7612:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "Context",
							"nameLocation": "572:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "648:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 483,
												"id": 486,
												"nodeType": "Return",
												"src": "658:17:3"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "639:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:3"
									},
									"scope": 498,
									"src": "586:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "755:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 492,
												"id": 495,
												"nodeType": "Return",
												"src": "765:15:3"
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "739:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:3"
									},
									"scope": 498,
									"src": "688:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 499,
							"src": "554:235:3",
							"usedErrors": []
						}
					],
					"src": "33:757:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							810
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "SafeMath",
							"nameLocation": "406:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "633:140:4",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "643:124:4",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 531,
																"src": "667:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 516,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "702:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 520,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "706:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 526,
														"nodeType": "IfStatement",
														"src": "698:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 512,
															"id": 525,
															"nodeType": "Return",
															"src": "709:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 528,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "754:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 529,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 512,
														"id": 530,
														"nodeType": "Return",
														"src": "740:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "573:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "584:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "618:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:4"
									},
									"scope": 810,
									"src": "557:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "995:113:4",
										"statements": [
											{
												"id": 559,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "1033:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "1037:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 552,
														"nodeType": "IfStatement",
														"src": "1029:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 544,
															"id": 551,
															"nodeType": "Return",
															"src": "1040:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 554,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "1085:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 555,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "1089:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 544,
														"id": 558,
														"nodeType": "Return",
														"src": "1071:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "946:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "980:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:4"
									},
									"scope": 810,
									"src": "919:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1332:417:4",
										"statements": [
											{
												"id": 601,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1600:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 580,
														"nodeType": "IfStatement",
														"src": "1596:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 579,
															"nodeType": "Return",
															"src": "1608:16:4"
														}
													},
													{
														"assignments": [
															582
														],
														"declarations": [
															{
																"constant": false,
																"id": 582,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 601,
																"src": "1638:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 581,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 586,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1650:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 584,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1654:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1673:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 588,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1677:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 590,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "1682:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1669:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 572,
															"id": 595,
															"nodeType": "Return",
															"src": "1685:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 598,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1730:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 599,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 572,
														"id": 600,
														"nodeType": "Return",
														"src": "1716:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1272:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1317:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1323:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:4"
									},
									"scope": 810,
									"src": "1256:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "1974:114:4",
										"statements": [
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "2012:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 622,
														"nodeType": "IfStatement",
														"src": "2008:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 614,
															"id": 621,
															"nodeType": "Return",
															"src": "2020:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 624,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "2065:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 625,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 627,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 614,
														"id": 628,
														"nodeType": "Return",
														"src": "2051:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1914:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1925:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1959:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1965:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"scope": 810,
									"src": "1898:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2323:114:4",
										"statements": [
											{
												"id": 657,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "2361:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "2357:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 642,
															"id": 649,
															"nodeType": "Return",
															"src": "2369:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "2414:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2418:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 655,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 642,
														"id": 656,
														"nodeType": "Return",
														"src": "2400:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2263:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2308:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:4"
									},
									"scope": 810,
									"src": "2247:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2739:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 670,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "2760:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 672,
												"nodeType": "Return",
												"src": "2749:12:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2685:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:4"
									},
									"scope": 810,
									"src": "2672:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "3106:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "3123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 685,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "3127:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 687,
												"nodeType": "Return",
												"src": "3116:12:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:4"
									},
									"scope": 810,
									"src": "3039:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "3449:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "3466:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "3470:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 702,
												"nodeType": "Return",
												"src": "3459:12:4"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:4"
									},
									"scope": 810,
									"src": "3382:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3834:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3851:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 715,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "3855:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 717,
												"nodeType": "Return",
												"src": "3844:12:4"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3825:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:4"
									},
									"scope": 810,
									"src": "3767:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4383:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "4400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 730,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4404:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 732,
												"nodeType": "Return",
												"src": "4393:12:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4329:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4374:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:4"
									},
									"scope": 810,
									"src": "4316:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "5001:106:4",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 747,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "5043:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 748,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 737,
																		"src": "5048:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 750,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "5051:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 746,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 752,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 753,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5085:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "5089:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 745,
														"id": 756,
														"nodeType": "Return",
														"src": "5078:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4898:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4917:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4936:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4992:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:4"
									},
									"scope": 810,
									"src": "4876:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "5716:105:4",
										"statements": [
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5758:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 775,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5765:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 771,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5799:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5803:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 770,
														"id": 781,
														"nodeType": "Return",
														"src": "5792:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5632:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5707:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:4"
									},
									"scope": 810,
									"src": "5591:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "6592:105:4",
										"statements": [
											{
												"id": 807,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 797,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "6634:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 800,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6641:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 796,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 802,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "6675:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 804,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "6679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 795,
														"id": 806,
														"nodeType": "Return",
														"src": "6668:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6508:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6527:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6583:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:4"
									},
									"scope": 810,
									"src": "6467:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 811,
							"src": "398:6301:4",
							"usedErrors": []
						}
					],
					"src": "33:6667:4"
				},
				"id": 4
			},
			"contracts/Multichain.sol": {
				"ast": {
					"absolutePath": "contracts/Multichain.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							498
						],
						"IERC20": [
							181
						],
						"IMasterEntertainer": [
							1022
						],
						"Multiu": [
							998
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							810
						]
					},
					"id": 999,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 182,
							"src": "63:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 478,
							"src": "121:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 815,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 104,
							"src": "174:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 811,
							"src": "228:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
							"file": "./interfaces/IMasterEntertainer.sol",
							"id": 817,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1023,
							"src": "287:45:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Multiu",
							"nameLocation": "345:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 820,
									"libraryName": {
										"id": 818,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "365:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "359:26:5",
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 823,
									"libraryName": {
										"id": 821,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "397:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "391:27:5",
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "433:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 998,
									"src": "426:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$181",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 825,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 824,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 181,
											"src": "426:6:5"
										},
										"referencedDeclaration": 181,
										"src": "426:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$181",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_masterEntertainer",
									"nameLocation": "465:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 998,
									"src": "446:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
										"typeString": "contract IMasterEntertainer"
									},
									"typeName": {
										"id": 828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 827,
											"name": "IMasterEntertainer",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1022,
											"src": "446:18:5"
										},
										"referencedDeclaration": 1022,
										"src": "446:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
											"typeString": "contract IMasterEntertainer"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Multiu.Stake",
									"id": 834,
									"members": [
										{
											"constant": false,
											"id": 831,
											"mutability": "mutable",
											"name": "VestingDays",
											"nameLocation": "523:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 834,
											"src": "516:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 830,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "516:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 833,
											"mutability": "mutable",
											"name": "TokenBalance",
											"nameLocation": "553:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 834,
											"src": "545:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 832,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "545:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "499:5:5",
									"nodeType": "StructDefinition",
									"scope": 998,
									"src": "492:81:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "651:82:5",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "662:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "671:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$181",
															"typeString": "contract IERC20"
														}
													},
													"src": "662:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "662:14:5"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "_masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "687:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "masterEntertainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "708:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
															"typeString": "contract IMasterEntertainer"
														}
													},
													"src": "687:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "687:38:5"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "606:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "599:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$181",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "599:6:5"
													},
													"referencedDeclaration": 181,
													"src": "599:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$181",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "masterEntertainer",
												"nameLocation": "632:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "613:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
													"typeString": "contract IMasterEntertainer"
												},
												"typeName": {
													"id": 839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 838,
														"name": "IMasterEntertainer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1022,
														"src": "613:18:5"
													},
													"referencedDeclaration": 1022,
													"src": "613:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
														"typeString": "contract IMasterEntertainer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:52:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:5"
									},
									"scope": 998,
									"src": "587:146:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "829:235:5",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "848:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "840:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "840:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"hexValue": "30",
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "863:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "840:24:5"
											},
											{
												"body": {
													"id": 887,
													"nodeType": "Block",
													"src": "933:94:5",
													"statements": [
														{
															"expression": {
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 875,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "948:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 880,
																						"name": "userAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "997:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 882,
																					"indexExpression": {
																						"id": 881,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 865,
																						"src": "1011:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "997:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 878,
																					"name": "_token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "980:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$181",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 120,
																				"src": "980:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "980:34:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 876,
																			"name": "tokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "963:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 674,
																		"src": "963:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "963:52:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "948:67:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "948:67:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 869,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "896:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "896:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "892:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"initializationExpression": {
													"assignments": [
														865
													],
													"declarations": [
														{
															"constant": false,
															"id": 865,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "885:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 888,
															"src": "880:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 864,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "880:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 867,
													"initialValue": {
														"hexValue": "30",
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "889:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "880:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "918:3:5",
														"subExpression": {
															"id": 872,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "918:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 874,
													"nodeType": "ExpressionStatement",
													"src": "918:3:5"
												},
												"nodeType": "ForStatement",
												"src": "875:152:5"
											},
											{
												"expression": {
													"id": 889,
													"name": "tokenBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 861,
													"src": "1044:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 859,
												"id": 890,
												"nodeType": "Return",
												"src": "1037:19:5"
											}
										]
									},
									"functionSelector": "0a5f75b6",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalanceOf",
									"nameLocation": "750:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "userAddresses",
												"nameLocation": "785:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "768:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 853,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "768:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 854,
													"nodeType": "ArrayTypeName",
													"src": "768:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:32:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 998,
									"src": "741:323:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1195:577:5",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "1221:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 996,
														"src": "1206:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Multiu.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 907,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 906,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 834,
																	"src": "1206:5:5"
																},
																"referencedDeclaration": 834,
																"src": "1206:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
																	"typeString": "struct Multiu.Stake"
																}
															},
															"id": 908,
															"nodeType": "ArrayTypeName",
															"src": "1206:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
																"typeString": "struct Multiu.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 914,
																"name": "vestingDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "1242:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																	"typeString": "uint32[] memory"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1242:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1230:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Multiu.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 911,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 910,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 834,
																	"src": "1234:5:5"
																},
																"referencedDeclaration": 834,
																"src": "1234:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
																	"typeString": "struct Multiu.Stake"
																}
															},
															"id": 912,
															"nodeType": "ArrayTypeName",
															"src": "1234:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
																"typeString": "struct Multiu.Stake[]"
															}
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1230:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Multiu.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1206:55:5"
											},
											{
												"body": {
													"id": 945,
													"nodeType": "Block",
													"src": "1328:106:5",
													"statements": [
														{
															"expression": {
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 929,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "1343:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Multiu.Stake memory[] memory"
																			}
																		},
																		"id": 931,
																		"indexExpression": {
																			"id": 930,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "1350:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1343:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																			"typeString": "struct Multiu.Stake memory"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "VestingDays",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 831,
																	"src": "1343:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 933,
																		"name": "vestingDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "1367:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 935,
																	"indexExpression": {
																		"id": 934,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "1379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1367:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "1343:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 937,
															"nodeType": "ExpressionStatement",
															"src": "1343:38:5"
														},
														{
															"expression": {
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 938,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "1396:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Multiu.Stake memory[] memory"
																			}
																		},
																		"id": 940,
																		"indexExpression": {
																			"id": 939,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "1403:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1396:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																			"typeString": "struct Multiu.Stake memory"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "TokenBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 833,
																	"src": "1396:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1421:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1396:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "1396:26:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 922,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "1289:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 923,
															"name": "vestingDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1293:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1293:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1289:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"initializationExpression": {
													"assignments": [
														919
													],
													"declarations": [
														{
															"constant": false,
															"id": 919,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1282:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 946,
															"src": "1277:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 918,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1277:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 921,
													"initialValue": {
														"hexValue": "30",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1286:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1277:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1313:3:5",
														"subExpression": {
															"id": 926,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1313:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ExpressionStatement",
													"src": "1313:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1272:162:5"
											},
											{
												"body": {
													"id": 992,
													"nodeType": "Block",
													"src": "1502:239:5",
													"statements": [
														{
															"body": {
																"id": 990,
																"nodeType": "Block",
																"src": "1577:153:5",
																"statements": [
																	{
																		"expression": {
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 969,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 909,
																						"src": "1596:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct Multiu.Stake memory[] memory"
																						}
																					},
																					"id": 971,
																					"indexExpression": {
																						"id": 970,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 959,
																						"src": "1603:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1596:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																						"typeString": "struct Multiu.Stake memory"
																					}
																				},
																				"id": 972,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "TokenBalance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 833,
																				"src": "1596:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 980,
																									"name": "userAddresses",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 898,
																									"src": "1680:13:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 982,
																								"indexExpression": {
																									"id": 981,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 948,
																									"src": "1694:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1680:16:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 983,
																									"name": "vestingDays",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 895,
																									"src": "1698:11:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																										"typeString": "uint32[] memory"
																									}
																								},
																								"id": 985,
																								"indexExpression": {
																									"id": 984,
																									"name": "z",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 959,
																									"src": "1710:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1698:14:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							],
																							"expression": {
																								"id": 978,
																								"name": "_masterEntertainer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 829,
																								"src": "1648:18:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IMasterEntertainer_$1022",
																									"typeString": "contract IMasterEntertainer"
																								}
																							},
																							"id": 979,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "getBalanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1012,
																							"src": "1648:31:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (address,uint256) view external returns (uint256)"
																							}
																						},
																						"id": 986,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1648:65:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 973,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 909,
																								"src": "1621:6:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Multiu.Stake memory[] memory"
																								}
																							},
																							"id": 975,
																							"indexExpression": {
																								"id": 974,
																								"name": "z",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 959,
																								"src": "1628:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1621:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$834_memory_ptr",
																								"typeString": "struct Multiu.Stake memory"
																							}
																						},
																						"id": 976,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "TokenBalance",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 833,
																						"src": "1621:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 674,
																					"src": "1621:26:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1621:93:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1596:118:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 989,
																		"nodeType": "ExpressionStatement",
																		"src": "1596:118:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "1534:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 963,
																		"name": "vestingDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "1538:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1538:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1534:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 991,
															"initializationExpression": {
																"assignments": [
																	959
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 959,
																		"mutability": "mutable",
																		"name": "z",
																		"nameLocation": "1527:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 991,
																		"src": "1522:6:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 958,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1522:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 961,
																"initialValue": {
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1531:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1522:10:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1558:3:5",
																	"subExpression": {
																		"id": 966,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "1558:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 968,
																"nodeType": "ExpressionStatement",
																"src": "1558:3:5"
															},
															"nodeType": "ForStatement",
															"src": "1517:213:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "1461:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 952,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "1465:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1461:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"initializationExpression": {
													"assignments": [
														948
													],
													"declarations": [
														{
															"constant": false,
															"id": 948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1454:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 993,
															"src": "1449:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 947,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1449:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 950,
													"initialValue": {
														"hexValue": "30",
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1458:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1449:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1487:3:5",
														"subExpression": {
															"id": 955,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "1487:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ExpressionStatement",
													"src": "1487:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1444:297:5"
											},
											{
												"expression": {
													"id": 994,
													"name": "stakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 909,
													"src": "1758:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Multiu.Stake memory[] memory"
													}
												},
												"functionReturnParameters": 904,
												"id": 995,
												"nodeType": "Return",
												"src": "1751:13:5"
											}
										]
									},
									"functionSelector": "77969091",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakedBalance",
									"nameLocation": "1081:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "vestingDays",
												"nameLocation": "1114:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1098:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 893,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1098:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 894,
													"nodeType": "ArrayTypeName",
													"src": "1098:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "userAddresses",
												"nameLocation": "1144:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1127:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 896,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1127:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 897,
													"nodeType": "ArrayTypeName",
													"src": "1127:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:61:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1179:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$834_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Multiu.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 900,
															"name": "Stake",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 834,
															"src": "1179:5:5"
														},
														"referencedDeclaration": 834,
														"src": "1179:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$834_storage_ptr",
															"typeString": "struct Multiu.Stake"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "1179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$834_storage_$dyn_storage_ptr",
														"typeString": "struct Multiu.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:16:5"
									},
									"scope": 998,
									"src": "1072:700:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 999,
							"src": "336:1447:5",
							"usedErrors": []
						}
					],
					"src": "37:1746:5"
				},
				"id": 5
			},
			"contracts/interfaces/IMasterEntertainer.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMasterEntertainer.sol",
					"exportedSymbols": {
						"IMasterEntertainer": [
							1022
						]
					},
					"id": 1023,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "36:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1022,
							"linearizedBaseContracts": [
								1022
							],
							"name": "IMasterEntertainer",
							"nameLocation": "70:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "673a7e28",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "104:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:6"
									},
									"scope": 1022,
									"src": "95:32:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94d45b59",
									"id": 1012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceOf",
									"nameLocation": "142:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_vesting",
												"nameLocation": "178:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "170:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:33:6"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "211:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:6"
									},
									"scope": 1022,
									"src": "133:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3f30d27",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForUser",
									"nameLocation": "234:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "257:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "271:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "263:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "288:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "280:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:46:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:6"
									},
									"scope": 1022,
									"src": "225:79:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1023,
							"src": "60:246:6",
							"usedErrors": []
						}
					],
					"src": "36:270:6"
				},
				"id": 6
			}
		}
	}
}